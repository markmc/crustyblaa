<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/4.6.1" created="2016-10-30 20:04" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Mark McLoughlin</title>
	<link>https://blogs.gnome.org/markmc</link>
	<description></description>
	<pubDate>Sun, 30 Oct 2016 20:04:10 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://blogs.gnome.org/</wp:base_site_url>
	<wp:base_blog_url>https://blogs.gnome.org/markmc</wp:base_blog_url>

	<wp:author><wp:author_id>24</wp:author_id><wp:author_login><![CDATA[markmc]]></wp:author_login><wp:author_email><![CDATA[markbmc@gmail.com]]></wp:author_email><wp:author_display_name><![CDATA[markmc]]></wp:author_display_name><wp:author_first_name><![CDATA[Mark]]></wp:author_first_name><wp:author_last_name><![CDATA[McLoughlin]]></wp:author_last_name></wp:author>


	<generator>https://wordpress.org/?v=4.6.1</generator>

	<item>
		<title>Bleh</title>
		<link>https://blogs.gnome.org/markmc/2004/01/23/bleh/</link>
		<pubDate>Fri, 23 Jan 2004 20:43:19 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/01/23/bleh/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
So, I've decided to join in the blogging action with the
<a href="http://planet.gnome.org">cool kids</a>.
</p>
<p>
Next step: find something interesting to say. Hmm.
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2</wp:post_id>
		<wp:post_date><![CDATA[2004-01-23 20:43:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-01-23 20:43:19]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[bleh]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/01/23/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PyBlosxom</title>
		<link>https://blogs.gnome.org/markmc/2004/01/23/pyblosxom/</link>
		<pubDate>Fri, 23 Jan 2004 20:49:24 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/01/23/pyblosxom/</guid>
		<description></description>
		<content:encoded><![CDATA[I should really thank <a href="http://www.gnome.org/~gman">Glynn</a> for
letting my plagiarise his blog setup. I've no patience for figuring out
stuff like that :-)
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3</wp:post_id>
		<wp:post_date><![CDATA[2004-01-23 20:49:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-01-23 20:49:24]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[pyblosxom]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/01/23/1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Leaving Sun</title>
		<link>https://blogs.gnome.org/markmc/2004/01/30/leaving-sun/</link>
		<pubDate>Fri, 30 Jan 2004 16:20:26 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/01/30/leaving-sun/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
So, today is my last day working for Sun which feels very, very
strange. Its been a great few years and I'm genuinely going to
miss this place and the great people here. I still can't believe
that my dream of working full time on free software has come
true. Sun made that possible - for that I'll be ever grateful.
</p>
<p>
On the upside, though, it marks the start of a new and exciting
adventure - working for Red Hat. Its a little daunting, actually.
Having seen the awesome work the guys do, I've no idea if I'll
be able to live up to their standards. I can't wait to get
started though :-)
</p>
<p>
I hope people don't read into this something that isn't there -
even though I'm leaving, I still think Sun is a great place to
work and that its a company with a seriously bright future.
My moving to Red Hat has nothing to do with which is a "better"
company, and everything to do with me wanting to take up the
opportunity of a new challenge.
</p>
<p>
I can't get Robert Frost's
<a href="http://www.poets.org/poems/poems.cfm?prmID=1645"><i>The Road
Not Taken</i></a> out of my head right now. It pretty well sums
up how I'm feeling ... but that could just be the hangover :-)
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4</wp:post_id>
		<wp:post_date><![CDATA[2004-01-30 16:20:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-01-30 16:20:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[leaving-sun]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/01/30/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Modems are teh suck</title>
		<link>https://blogs.gnome.org/markmc/2004/02/04/modems-are-teh-suck/</link>
		<pubDate>Wed, 04 Feb 2004 18:03:42 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/02/04/modems-are-teh-suck/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
A rather "interesting" day doing bugzilla work, disting and
pushing 2.5.4 tarballs and jhbuilding GNOME HEAD in parallel
over a 56k dialup line. I think I'll be counting down the
minutes until the <a href="http://www.eircom.ie">Eircom</a>
fools manage to flick the magic DSL switch ...
</p>
<p>
How on earth did I put up with this for an entire year in
New Zealand?
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>5</wp:post_id>
		<wp:post_date><![CDATA[2004-02-04 18:03:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-02-04 18:03:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[modems-are-teh-suck]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/02/04/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Vino</title>
		<link>https://blogs.gnome.org/markmc/2004/02/05/vino/</link>
		<pubDate>Thu, 05 Feb 2004 10:27:00 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/02/05/vino/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
I've just imported <i>Vino</i> into CVS. Its "Remote Desktop" functionality
for GNOME using VNC's <a href="http://www.realvnc.com/docs/rfbproto.pdf">RFB</a>
protocol which I wrote while at Sun.
</p>
<p>
Currently, the most notable bits over other VNC servers are:
  <ul>
    <li>Support for encrypting the RFB protocol stream using SSL</li>
    <li>
     A dialog which prompts the user before allowing a remote user
     to connect
    </li>
    <li>
     Exports the local display, so you don't have to start up a
     seperate VNC display
    </li>
    <li>Properly integrated into GNOME</li>
  </ul>
More details 
<a href="http://www.gnome.org/~markmc/remote-desktop.txt">
here</a>.
</p>
<p>
The 
<a href="http://cvs.gnome.org/bonsai/cvsblame.cgi?file=vino/docs/TODO">
TODO</a> list includes:
  <ul>
    <li>
      Use the new <a href="http://freedesktop.org/Software/XDamage">
      DAMAGE</a> extension instead of polling the screen
    </li>
    <li>
      Write a GTK+ based client - the current client is a Java applet
      but you can use any other vncviewer without encryption
    </li>
    <li>Service discovery using DNS-SD and mDNS</li>
    <li>Better authentication schemes</li>
  </ul>
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6</wp:post_id>
		<wp:post_date><![CDATA[2004-02-05 10:27:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-02-05 10:27:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[vino]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/02/05/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>RFB Protocol</title>
		<link>https://blogs.gnome.org/markmc/2004/02/06/rfb-protocol/</link>
		<pubDate>Fri, 06 Feb 2004 18:12:47 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/02/06/rfb-protocol/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
So, I had a discussion with the RFB protocol maintainers at
<a href="http://www.realvnc.com">RealVNC</a> about getting the
new RFB security types - which I added in Vino for doing the
encryption thing - registered in the protocol. As far as I can
make out at this point:
<ul>
  <li>
    There are more security types registered than appear in
    the protocol specification.
  </li>
  <li>
    Security types 1-16 are reserved for "standard" security
    types.
  </li>
  <li>
    A security type becomes "standard" when it is added to the
    "reference implementation" ... which just happens to be
    the same product RealVNC is trying to make money from.
  </li>
</ul>
I can't make up my mind whether I care about this or whether
I should just leave sleeping dogs lie. My main worry is what
happens if we decide there are other additions we want to make
to the protocol. Oh well, cross that bridge when we come to it.
The RealVNC guys are friendly, so I don't expect there would
actually be problems.
</p>
<p>
In the end, we agreed that I had to use different numbers to
identify the new security types and I had to modify the way
the new security type actually worked. End result - I've just
pushed a new version of Vino with incompatible changes in the
protocol.
</p>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>7</wp:post_id>
		<wp:post_date><![CDATA[2004-02-06 18:12:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-02-06 18:12:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[rfb-protocol]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/02/06/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>February 25, 2004</title>
		<link>https://blogs.gnome.org/markmc/2004/02/25/february-25-2004/</link>
		<pubDate>Wed, 25 Feb 2004 08:52:59 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/02/25/february-25-2004/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
I've been really taken by surprise at how my motivation has jumped
hugely with the move to Red Hat. I'm even enjoying things like bugzilla
work, packaging and release-team stuff these days. Clearly, this can't
last. And I've got to get back hacking on things like Vino soon ...
</p>
<p>
GNOME 2.6 looks like its pretty much on track. Things like the gtk+
schedule and the constant string freeze breakage has given the release
team the heebie jeebies somewhat, but after our irc meeting last night
I'm feeling pretty confident the release will come out without any huge
hitches.
</p>
<p>
Alex and I have been updating the GNOME packages in Fedora Core to the
latest GNOME Beta ones. Hopefully, by the time FC2 test2 goes into devel
freeze on Friday we'll have most of the packages updated. A big priority
is to get the new file selector out to the Fedora testing masses, so
I'm going to update gtk+/atk/pango/glib to the latest today. Also going
to shove the little gnome-netstatus applet in too :-)
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>8</wp:post_id>
		<wp:post_date><![CDATA[2004-02-25 08:52:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-02-25 08:52:59]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[february-25-2004]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/02/25/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>February 28, 2004</title>
		<link>https://blogs.gnome.org/markmc/2004/02/28/february-28-2004/</link>
		<pubDate>Sat, 28 Feb 2004 10:56:26 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/02/28/february-28-2004/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
Its been a fun week completely focused on Fedora packaging and
bugzilla work. Had a nice wake up call on how huge a time sink
fixing non x86 builds can be. A day and a half debugging an ABI
mismatch on pcc breaking the gtk2 build! Sheesh.
</p>
<p>
Its nice to finish up a week with the feeling that you've got
a good handle on things, though.
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>9</wp:post_id>
		<wp:post_date><![CDATA[2004-02-28 10:56:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-02-28 10:56:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[february-28-2004]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/02/28/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Voodoo</title>
		<link>https://blogs.gnome.org/markmc/2004/02/28/voodoo/</link>
		<pubDate>Sat, 28 Feb 2004 20:58:00 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/02/28/voodoo/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
I hate now knowing how things work. Especially things that I
rely on heavily as a hacker. But I love it when I get a chance
to finally figure out how the damn thing works and it turns out
to be beautifully simple.
</p>
<p>
This week I found that I had to debug a small part of libtool's
behaviour. It had always worked for me before and I had assumed
it worked a certain way, but in this case it just wasn't
working properly. I could feel myself breaking out in a cold
sweat. <i>Don't make me debug libtool! Please God, noooo...</i>
</p>
<p>
But the clouds parted. And it was simple.
</p>
<p>
When you build an executable, and it links against a library
in the same module, you need some way to be able to run that
uninstalled executable with the uninstalled library. So,
libtool puts a script where you think your uninstalled
executable should be and here's what it does
<ul>
  <li>
    When you run the script for the first time, it re-links
    your executable with <tt>--rpath $path-to-lib/.libs</tt> and
    places that executable in <tt>.libs/lt-myexec</tt>.
  </li>
  <li>
    That causes the linker to to put a <tt>DT_RPATH</tt> ELF
    attribute in the executable which tells the dynamic loader
    where to looks for libraries. (See the ld.so manpage)
  </li>
  <li>
    And finally, the script just runs the modified executable.
  </li>
</ul>
</p>
<p>
For example:
<pre>
  $&gt; ls -l .libs/*gdk-pixbuf-csource
  -rwxrwxr-x    1 markmc   markmc      51262 Feb 26 11:28 .libs/gdk-pixbuf-csource
  $&gt; ./gdk-pixbuf-csource
  Usage: gdk-pixbuf-csource [options] [image]
  $&gt; ls -l .libs/*gdk-pixbuf-csource
  -rwxrwxr-x    1 markmc   markmc      51262 Feb 26 11:28 .libs/gdk-pixbuf-csource
  -rwxrwxr-x    1 markmc   markmc      51294 Feb 28 15:48 .libs/lt-gdk-pixbuf-csource
  $&gt; objdump -p .libs/gdk-pixbuf-csource | grep RPATH
  $&gt; objdump -p .libs/lt-gdk-pixbuf-csource | grep RPATH
    RPATH       /gnome/head/cvs/gtk+/gdk-pixbuf/.libs:/gnome/head/INSTALL/lib
  $&gt; ldd .libs/gdk-pixbuf-csource | grep gdk_pixbuf
          libgdk_pixbuf-2.0.so.0 =&gt; /gnome/head/INSTALL/lib/libgdk_pixbuf-2.0.so.0 (0x0087d000)
  $&gt; ldd .libs/lt-gdk-pixbuf-csource | grep gdk_pixbuf
          libgdk_pixbuf-2.0.so.0 =&gt; /gnome/head/cvs/gtk+/gdk-pixbuf/.libs/libgdk_pixbuf-2.0.so.0 (0x004a0000)
</pre>
Not exactly, earth shattering. But nice to know.
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>10</wp:post_id>
		<wp:post_date><![CDATA[2004-02-28 20:58:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-02-28 20:58:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[voodoo]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/02/28/1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>There be divils here</title>
		<link>https://blogs.gnome.org/markmc/2004/03/11/there-be-divils-here/</link>
		<pubDate>Thu, 11 Mar 2004 11:28:53 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/03/11/there-be-divils-here/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
I reckon a lot of hackers don't realise how wary they need to
be when using enums. Problems occur frequently because people
(usually unwittingly) make assumptions about either the size,
alignment or signedness of the integer representation for the
enum which the compiler uses.
</p>
<p>
C99 says <i>Each enumerated type shall be compatible with
an integer type. The choice of type is implementation-defined.
An implementation may delay the choice of which integer type
until all enumeration constants have been seen</i>. What
this means is that once the compiler has seen all the constants
you have defined for that enum, it will then decide what integer
representation to use and that could be a signed or unsigned
integer of any size.
</p>
<p>
So, GNOME hackers beware. <i>gconf_enum_to_string()</i> is
<b>nasty</b>. Have a look at the prototype:
  <pre>
gboolean  gconf_string_to_enum (GConfEnumStringPair  lookup_table[],
                                const gchar         *str,
                                gint                *enum_value_retloc);
  </pre>
</p>
<p>
Bugs I've seen include:
  <pre>
{
  enum { A, B } test_enum;

  gconf_enum_to_string (enum_to_str_table, str, (int *) &amp;test_enum);
}
  </pre>
This is guaranteed to cause crashes on some architectures since
alignment of the <i>enum</i> is different from the expected
alignment of an <i>int</i>. So it should be:
  <pre>
{
  enum { A, B } test_enum;
  int test_int;

  if (gconf_enum_to_string (enum_to_str_table, str, &amp;test_int))
    {
      test_enum = test_int;
    }
}
  </pre>
Also, this breaks:
  <pre>
{
  enum { A, B } test_enum;
  int test_int;

  test_enum = -1;
  gconf_enum_to_string (enum_to_str_table, str, &amp;test_int);
  test_enum = test_int;

  if (test_enum 
The problem here is that you're assuming the enum has a signed
representation when in fact the compiler may choose an unsigned
representation. If the conversion fails, <i>if (test_enum 
will <b>not</b> detect it.
</p>
<p>
Alex also points out that when adding values to an enum in an API
you need to be careful that you're not unwittingly changing the
ABI because the compiler chooses to use a large integer representation
for the enum than was previously used.
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>11</wp:post_id>
		<wp:post_date><![CDATA[2004-03-11 11:28:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-03-11 11:28:53]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[there-be-divils-here]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/03/11/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>St. Patrick&#039;s Day</title>
		<link>https://blogs.gnome.org/markmc/2004/03/17/st-patricks-day/</link>
		<pubDate>Wed, 17 Mar 2004 23:45:40 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/03/17/st-patricks-day/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
Recipe for a nice relaxing Paddy's day:
<ul>
  <li>
    Long walk by the sea to clear the hangover.
  </li>
  <li>
    Cook gorgeous Thai Red Curry. Eat.
  </li>
  <li>
    Snooze.
  </li>
  <li>
   Bake a lemon cake. Eat.
  </li>
  <li>
   Add wireless support to gnome-netstatus:
   <br />
   <br />
   <img src="http://www.gnome.org/~markmc/wireless-signal-strength.png">
   <br />
   <br />
   Calum is the one responsible for the UI. I just did the fun hack :-)
  </li>
</ul>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>12</wp:post_id>
		<wp:post_date><![CDATA[2004-03-17 23:45:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-03-17 23:45:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[st-patricks-day]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/03/17/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>List moderator magic</title>
		<link>https://blogs.gnome.org/markmc/2004/03/31/list-moderator-magic/</link>
		<pubDate>Wed, 31 Mar 2004 11:14:33 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/03/31/list-moderator-magic/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
I spent some time floundering about a while ago trying to figure out a
Javascript hack to allow you to mark all mails in a mailman moderation
queue to be discarded. I certainly wasn't going to manually click
"Discard" for each of the 400 mails in the gconf-list queue.
</p>
<p>
<a href="http://www.advogato.org/person/DV">DV</a> saved me with some
<a href="http://www.advogato.org/person/jamesh">jamesh</a> magic.
</p>
<p>
Mailing list admins, bookmark this link -
<a HREF="(function(){var elements=document.forms[0].elements;for(var i=0;ielements.length;i++){var el=elements[i];if(el.type=='radio'&amp;&amp;el.value=='3'){el.checked=true;}}})()">Discard all mails</a>
</p>
<p>
(No, don't click on the link. Right-click, "Bookmark link...")
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>13</wp:post_id>
		<wp:post_date><![CDATA[2004-03-31 11:14:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-03-31 11:14:33]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[list-moderator-magic]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/03/31/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Runtime Linker Voodoo</title>
		<link>https://blogs.gnome.org/markmc/2004/04/06/runtime-linker-voodoo/</link>
		<pubDate>Tue, 06 Apr 2004 21:33:38 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/04/06/runtime-linker-voodoo/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
Kjartan pointed out a report of a gnome-session security vulnerability
to me earlier today. Now, it turns out to actually only be a
vulnerability in a script supplied with certain distributors' packages,
but that's not the interesting part.
</p>
<p>
The script contained something like this:
<pre>
  export LD_LIBRARY_PATH=/opt/gnome/lib:$LD_LIBRARY_PATH
</pre>
and the "vulnerability" was apparently that if <i>$LD_LIBRARY_PATH</i>
was originally unset, then you get
<i>LD_LIBRARY_PATH="/opt/gnome/lib:"</i>.
<p>
I couldn't for the life of me understand why it was actually a
vulnerability in the first place. It gnawed at me all day. After a bit
of poking at the runtime linker code in glibc though I realized that
setting <i>$LD_LIBRARY_PATH</i> like that is effectively the same as
setting it to <i>LD_LIBRARY_PATH="/opt/gnome/lib:./"</i>. The problem is 
clear then - an attacker can use it to force a rogue, untrusted
library to be loaded that could do nasty things.
</p>
<p>
So, this whole <i>LD_LIBRARY_PATH=":"</i> causing "./" to be added to
the runtime linker's search path thing came as a big suprise to me and
to some others. I'd never heard of before, but it seems known to at
least some people and is "expected behavior". What worries me here is
that its likely most attackers know to look out for this and most
developers don't.
</p>
<p>
My long search for a normative reference for this behaviour failed. If
anyone knows where it comes from, I'm dead curious. I expect Ulrich
knows, though :-)
</p>
<p>
Another interesting thing to play with:
<pre>
$&gt; LD_DEBUG=help /lib/ld-linux.so.2
Valid options for the LD_DEBUG environment variable are:
 
  libs        display library search paths
  reloc       display relocation processing
  files       display progress for input file
  symbols     display symbol table processing
  bindings    display information about symbol binding
  versions    display version dependencies
  all         all previous options combined
  statistics  display relocation statistics
  help        display this help message and exit
</pre>
I read a <a href="http://people.redhat.com/drepper/dsohowto.pdf">paper
from Ulrich</a> some time ago that gave lots of details on how to write
shared libraries such that the runtime linker can more efficiently
resolve symbols etc.  <i>LD_DEBUG=statistics</i>, among other things,
is useful there. I'd love to see someone with the time and interest
looking into this and analyzing GNOME libraries to see where we can
make improvements.
</p>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>14</wp:post_id>
		<wp:post_date><![CDATA[2004-04-06 21:33:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-04-06 21:33:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[runtime-linker-voodoo]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/04/06/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>$LD_LIBRARY_PATH Update</title>
		<link>https://blogs.gnome.org/markmc/2004/04/07/ld_library_path-update/</link>
		<pubDate>Wed, 07 Apr 2004 07:05:04 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/04/07/ld_library_path-update/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
Of course, Ulrich did know. The <a href="http://www.caldera.com/developers/gabi/latest/ch5.dynamic.html#shobj_dependencies">
System V ABI specification's ELF section</a> contains the requirement
that <i>$LD_LIBRARY_PATH</i> have those semantics
  <pre>
   a string that holds a list of directories, separated by colons
   (:). For example, the string /home/dir/lib:/home/dir2/lib: tells the
   dynamic linker to search first the directory /home/dir/lib, then
   /home/dir2/lib, and then the current directory to find dependencies.
  </pre>
</p>
<p>
Moral of the story. Don't do
  <pre>
  export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/some/other/dir
  </pre>
Do this instead
  <pre>
  if [ -n $LD_LIBRARY_PATH ]; then
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/some/other/dir
  else
    export LD_LIBRARY_PATH=/some/other/dir
  fi
  </pre>
Or even
  <pre>
  export LD_LIBRARY_PATH=${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}/some/other/dir
  </pre>
</p>
  
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>15</wp:post_id>
		<wp:post_date><![CDATA[2004-04-07 07:05:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-04-07 07:05:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[ld_library_path-update]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/04/07/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Corporate Whores</title>
		<link>https://blogs.gnome.org/markmc/2004/04/29/corporate-whores/</link>
		<pubDate>Thu, 29 Apr 2004 19:36:24 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/04/29/corporate-whores/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
Looks like <a href="http://www.advogato.org/person/hadess/diary.html?start=367">hadess<a>,
<a href="http://www.advogato.org/person/mjcox/diary.html?start=118">mjcox</a>,
<a href="http://www.advogato.org/person/gary/diary.html?start=118">gary</a>
and <a href="http://www.advogato.org/person/dwmw2/diary.html?start=102">dwmw2</a>
have all taken a big overdose of the Red Hat drugs. So have I.
</p>
<img src="http://inauspicious.org/files/images/iamredhat.png" width="80" height="32">
<p>
This Red Hat company meeting thing was a weird experience for
me. Realizing just how deeply rooted open source is in the Red Hat
culture. Realizing that what I'm hearing isn't just the lip service to
open source that I heard in Sun. Seeing a real understanding of and
commitment to open source from each of the 600ish people
attending. Its like coming home or something. Man, I'm so psyched
after the whole thing.
</p>
<p>
Well, I'm pretty exhausted too :-)
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>16</wp:post_id>
		<wp:post_date><![CDATA[2004-04-29 19:36:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-04-29 19:36:24]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[corporate-whores]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/04/29/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Crackrock</title>
		<link>https://blogs.gnome.org/markmc/2004/05/13/crackrock/</link>
		<pubDate>Thu, 13 May 2004 07:27:00 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/05/13/crackrock/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
Okay, <a href="http://log.ometer.com">Havoc</a> needs his pot leaf
head re-instanted. <a href="http://www.vanhelsingmovie.com">That
film</a> has to be the most atrocious piece of work I've seen in a
long time ... "So bad it was good"? Yeah, right.
</p>
<p>
Someone else has been smoking some goodness:<br />
<img src="sponsored-by.jpg">
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>17</wp:post_id>
		<wp:post_date><![CDATA[2004-05-13 07:27:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-05-13 07:27:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[crackrock]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/05/13/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Home Again</title>
		<link>https://blogs.gnome.org/markmc/2004/05/13/home-again/</link>
		<pubDate>Thu, 13 May 2004 07:32:16 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/05/13/home-again/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
I'm back home again from Boston. Maybe I'll start getting some work
done again now :-)
</p>
<p>
I've put up some photos from the trip
<a href="http://www.skynet.ie/~mark/">here</a>.
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>18</wp:post_id>
		<wp:post_date><![CDATA[2004-05-13 07:32:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-05-13 07:32:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[home-again]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/05/13/1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2004-05-27: Thursday</title>
		<link>https://blogs.gnome.org/markmc/2004/05/27/2004-05-27-thursday/</link>
		<pubDate>Thu, 27 May 2004 13:36:00 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/05/27/2004-05-27-thursday/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
 <ul>
  <li>Up early; chewed mail;</li>
  <li>
Amazing lack of listening on the xdg list from Michael along the lines
of: "let me fix my problems right now with the least amount of pain to
me. I don't mind if its a big hack which everyone else will copy". The
encouraging thing from this is I suppose that in the past I would have
taken this (IMHO fairly nonsensical/incomprehensible stalling position)
as cast-iron proof of Michael just not listening; however, one can only
conclude from this discussion that there is some sort of unhelpful,
underlying ignoring the
<a href="http://freedesktop.org/pipermail/xdg/2004-May/004040.html">point</a>
going on ... nice to have this insight.
</li>
</ul>
</p>
<p>
:-P
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>19</wp:post_id>
		<wp:post_date><![CDATA[2004-05-27 13:36:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-05-27 13:36:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[2004-05-27-thursday]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/05/27/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Terminal Services Prototype</title>
		<link>https://blogs.gnome.org/markmc/2004/06/03/terminal-services-prototype/</link>
		<pubDate>Thu, 03 Jun 2004 18:27:15 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/06/03/terminal-services-prototype/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
After a couple of weeks work <a href="http://www.advogato.org/person/caolan">Caolan</a>
and I have gotten together a prototype for a VNC based terminal services system which
also supports hotdesking. More details
<a href="http://www.redhat.com/archives/fedora-desktop-list/2004-June/msg00007.html">
here</a>.
</p>
<p>
This is all part of a bigger plan to use VNC for the four different "remote desktop"
uses cases I think we have in GNOME:
<ul>
  <li>
    Terminals (a.k.a. thin clients) which display your desktop running on a
    terminal server
  </li>
  <li>
    Remote administration - allowing sysadmins to remotely help a user having
    difficulties with their desktop
  </li>
  <li>
    Remote access - you're at home and you need to do something on your machine
    in work like save a document you'd forgotten to save or something.
  </li>
  <li>
    Collaboration - a colleague in another office is working on a CAD drawing and
    he wants to demonstrate some of his ideas while talking to you on the phone
    about it
  </li>
</ul>
</p>
<p>
I'll post more of the technical details of how this should all work. Right now,
though, I need to go for a few pints and get away from this stuff :-)
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>20</wp:post_id>
		<wp:post_date><![CDATA[2004-06-03 18:27:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-06-03 18:27:15]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[terminal-services-prototype]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/06/03/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>He Calls Himself an Irishman?</title>
		<link>https://blogs.gnome.org/markmc/2004/06/04/he-calls-himself-an-irishman/</link>
		<pubDate>Fri, 04 Jun 2004 10:08:17 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/06/04/he-calls-himself-an-irishman/</guid>
		<description></description>
		<content:encoded><![CDATA[He Calls Himself an Irishman?
<p>
So, <a href="http://www.gnome.org/~gman/blog">Glynn</a>'s a posh
D4 Dubliner. Don't mind him. Most of us Waterford knackers with
a bit of national pride think <a href="http://en.wikipedia.org/wiki/Ireland%27s_Call">Ireland's
Call</a> is an abomination and that Ireland is losing some of
its national identity by not using <a href="http://en.wikipedia.org/wiki/Amhr%E1n_na_bhFiann">Amhrán na
bhFiann</a> for rugby.
</p>
<p>
It has one great side effect, though. Everyone can now actually
understand what they're singing! You won't find many irishmen
who are fluent enough in their national language enough to be
able to translate this:
</p>
<pre>
     Sinne Fianna Fáil
     A tá fé gheall ag Éirinn,
     buion dár slua
     Thar toinn do ráinig chugainn,
     Fé mhóid bheith saor.
     Sean tír ár sinsir feasta
     Ní fhagfar fé'n tiorán ná fé'n tráil
     Anocht a théam sa bhearna bhaoil,
     Le gean ar Ghaeil chun báis nó saoil
     Le guna screach fé lámhach na bpiléar
     Seo libh canaídh Amhrán na bhFiann.
</pre>
<p>
Watch closely next time you see an Irish sports team during
their national anthem. Count with your fingers how many of
the players are actually singing rather than humming, swaying
from side to side and generally looking embarrassed. You
won't need your other hand ...
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>21</wp:post_id>
		<wp:post_date><![CDATA[2004-06-04 10:08:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-06-04 10:08:17]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[he-calls-himself-an-irishman]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/06/04/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Threaded bugzilla mail</title>
		<link>https://blogs.gnome.org/markmc/2004/06/05/threaded-bugzilla-mail/</link>
		<pubDate>Sat, 05 Jun 2004 12:24:50 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/06/05/threaded-bugzilla-mail/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
Woo! As, <a href="http://www.livejournal.com/users/katzj/">Jeremy</a> points
out, dkl has <a href="https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=125335">enabled
threading</a> in Red Hat's bugzilla mail. Now I can stop filtering my mail
through "fixup-threading.sh" :-)
</p>
<p>
Red Hat developers are soon going to wonder how they ever survived without
this. We GNOME hackers have been spoilt for far too long ...
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>22</wp:post_id>
		<wp:post_date><![CDATA[2004-06-05 12:24:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-06-05 12:24:50]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[threaded-bugzilla-mail]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/06/05/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Blaa</title>
		<link>https://blogs.gnome.org/markmc/2004/06/08/blaa/</link>
		<pubDate>Tue, 08 Jun 2004 07:35:18 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/06/08/blaa/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
I knew of <a href="http://www.wikipedia.org">Wikipedia</a>'s existence, and
I knew what it was, but I'd never really spent any amount of time looking at
it. <a href="http://www.gnome.org/~seth/">Seth</a> was babbling happily about
it at one point while I was in Westford so I went and took a good look. What
really strikes you is not only the sheer size of the thing, but the quality
of the content. Very impressive.
</p>
<p>
Anyway, I added my own drop to the fountain of knowledge - an entry on the
famous Waterford <a href="http://en.wikipedia.org/wiki/Blaa">Blaa</a>.
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>23</wp:post_id>
		<wp:post_date><![CDATA[2004-06-08 07:35:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-06-08 07:35:18]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[blaa]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/06/08/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Power Of The Test Case</title>
		<link>https://blogs.gnome.org/markmc/2004/06/10/the-power-of-the-test-case/</link>
		<pubDate>Thu, 10 Jun 2004 19:34:03 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/06/10/the-power-of-the-test-case/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
Thanks to Tim Waugh, before we even started, we knew one of the stumbling
blocks for this terminal services thing was going to be VNC's ZRLE encoding.
You see, in order to make the hot-desking thing work you need to be able
to transfer a VNC client between two VNC servers without the client knowing
about it.
</p>
<p>
What makes the ZRLE encoding difficult is that it compresses the pixel
stream using zlib and this introduces state into the VNC stream. A rectangle
of encoded pixel data now depends on the pixels that went before. So when,
you transfer a client between servers, the new server either needs to know
the state of the zlib stream or you need to allow the new server to start
with a clean slate somehow.
</p>
<p>
A glance at the zlib <a href="http://www.gzip.org/zlib/manual.html">docs</a>
and the <i>Z_FULL_FLUSH</i>/<i>Z_FINISH</i> <i>deflate()</i> flags jumped out
of me. Sweet, this is going to be trivial, says he. Like a good engineer,
I started writing a <a href="http://www.gnome.org/~markmc/code/test-zlib.c">
test case</a> to prove the idea. The solution wasn't as obvious as I'd hoped,
though, and I found myself knee deep in docs, rfcs and the <i>inflate()</i>/
<i>deflate()</i> code. Unfortunately, I had to actually <b>understand</b>
what the hell was going on. The horror!
</p>
<p>
Plugged the code into Xvnc and tried it out. Broken. Dramatically broken. Debug,
tweak, test. Still broken. And on it went. Eventually, hours later, I went back
to my test case and discovered that it actually wasn't working. It was sneakily
pretending to be working. But it wasn't. Trivial fix and all is well.
</p>
<p>
You can save so much time by figuring stuff out in a small test case rather
than trying to figure it out in the context of a huge mass of code with a million
and one other things happening. I know this to be true, and as time goes on
I'm learning just how true it is. But you still find yourself launching headlong
into problems thinking "it looks trivial, in the same time I'd write a test case
I'll have the thing fixed" and only hours and hours later do you get a clue
and start writing a test case. I get the feeling Owen always reaches straight
for a test case. Maybe that's his secret :-)
</p>
<p>
Anyway, I've moved on to adding TLS/SSL support Xvnc and vncviewer now. And,
yes, I'm going to go through all this "state flushing" pain again. Fun
all the way, I tell ya ... Now, where's my test case?
</p>
<p>
On the plus side, I've had to take loads of breaks from this stuff today,
and I've been cooking. Had a gorgeous
<a href="http://en.wikipedia.org/wiki/Ratatouille">ratatouille</a> for lunch
and some <a href="http://en.wikipedia.org/wiki/Chili_con_carne">chilli</a>
is bubbling away as I type.
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>24</wp:post_id>
		<wp:post_date><![CDATA[2004-06-10 19:34:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-06-10 19:34:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[the-power-of-the-test-case]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/06/10/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Happy To Be Bored</title>
		<link>https://blogs.gnome.org/markmc/2004/06/11/happy-to-be-bored/</link>
		<pubDate>Fri, 11 Jun 2004 16:50:44 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/06/11/happy-to-be-bored/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
So, I've got working patches now for TLS/SSL support in the
<a href="http://www.gnome.org/~markmc/code/vnc-4.0b5-vncviewer-tls.diff">
C++</a> and
<a href="http://www.gnome.org/~markmc/code/vnc-4.0b5-java-tls.diff">
Java</a> VNC clients. That was all pretty boring since I'd already
(months ago) written a bunch of test code with
<a href="http://www.gnu.org/software/gnutls">GNU TLS</a> and the
<a href="http://java.sun.com/products/jsse">Java Secure Socket Extension</a>.
</p>
<p>
I'm sure there's a moral to that, but I can't quite put my finger on
it ...
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>25</wp:post_id>
		<wp:post_date><![CDATA[2004-06-11 16:50:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-06-11 16:50:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[happy-to-be-bored]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/06/11/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The OpenSSL License</title>
		<link>https://blogs.gnome.org/markmc/2004/06/11/the-openssl-license/</link>
		<pubDate>Fri, 11 Jun 2004 18:46:58 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/06/11/the-openssl-license/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
At least twice previously I've gone off and figured out what this whole
OpenSSL GPL incompatibility thing is all about and, in pretty short
order, completely forgotten the details again. Well, this time I've
<a href="http://www.gnome.org/~markmc/openssl-and-the-gpl.html">written
it down</a> so I won't forget.
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>26</wp:post_id>
		<wp:post_date><![CDATA[2004-06-11 18:46:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-06-11 18:46:58]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[the-openssl-license]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/06/11/1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Project Vino Update</title>
		<link>https://blogs.gnome.org/markmc/2004/06/21/project-vino-update/</link>
		<pubDate>Mon, 21 Jun 2004 09:58:24 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/06/21/project-vino-update/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
The work Caolan and I have been doing on terminal services over
VNC is part of a bigger picture plan to really start making
VNC useful across all "remote desktop" use cases.
</p>
<p>
Here's a <a href="http://www.gnome.org/~markmc/remote-desktop-2.html">writeup</a>
of the use cases and how the thing will work.
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>27</wp:post_id>
		<wp:post_date><![CDATA[2004-06-21 09:58:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-06-21 09:58:24]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[project-vino-update]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/06/21/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>NoMachine NX</title>
		<link>https://blogs.gnome.org/markmc/2004/07/07/nomachine-nx/</link>
		<pubDate>Wed, 07 Jul 2004 08:54:28 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/07/07/nomachine-nx/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
I've looked at <a href="http://www.nomachine.com">NoMachine NX</a> a
couple of times before but never really got down to the nitty gritty
details about how the thing works. This time I was determined to figure
it out and I've <a href="http://www.gnome.org/~markmc/a-look-at-nomachine-nx.html">written it down</a>.
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>28</wp:post_id>
		<wp:post_date><![CDATA[2004-07-07 08:54:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-07-07 08:54:28]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[nomachine-nx]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/07/07/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Reading</title>
		<link>https://blogs.gnome.org/markmc/2004/08/05/reading/</link>
		<pubDate>Thu, 05 Aug 2004 11:18:24 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/08/05/reading/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
A nice little pile of books arrived from Amazon yesterday for
my birthday. Being a slow reader, that should keep me going
for a good few months :-)
</p>
<p>
The one I've started with, "Unlocking the Sky: Glen Hammond
Curtiss and the Race to Invent the Airplane", was Tiemann's
recommendation on <a href="http://www.redhat.com/mktg/summer_read">Red
Hat's summer reading list</a>. It seems to be a really good read
which appears at first glance to be totally unrelated, but actually
very relevant, to what we're all doing here.
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>29</wp:post_id>
		<wp:post_date><![CDATA[2004-08-05 11:18:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-08-05 11:18:24]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[reading]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/08/05/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Pinball</title>
		<link>https://blogs.gnome.org/markmc/2004/08/23/pinball/</link>
		<pubDate>Mon, 23 Aug 2004 09:07:03 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/08/23/pinball/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
Its fascinating how people around you can have such a dramatic
influence on where you're going in life. Its like being bounced around
in an invisible pinball machine without even knowing it.
</p>
<p>
I shudder to think what I'd be doing now if a certain person hadn't
grabbed hold of me and liberally applied a cluebat to me over the
course of an 8 month internship in Intel. We're still good mates and
after a night on the beer with him and his wife I found myself coming
home with a hangover, 
<a href="http://www.amazon.co.uk/exec/obidos/ASIN/0596004893">two</a>
<a href="http://www.amazon.co.uk/exec/obidos/ASIN/0201616130">books</a>
and a fresh perspective on some things. You can't beat that.
</p>
<p>
In other news, shopping for a car when you don't already have a car
really sucks.
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>30</wp:post_id>
		<wp:post_date><![CDATA[2004-08-23 09:07:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-08-23 09:07:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[pinball]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/08/23/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Never Judge a Book by its Cover?</title>
		<link>https://blogs.gnome.org/markmc/2004/09/10/never-judge-a-book-by-its-cover/</link>
		<pubDate>Fri, 10 Sep 2004 12:58:20 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/09/10/never-judge-a-book-by-its-cover/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
<a href="http://nat.org/2004/september/#9-September-2004">This</a> bothers me and
I'm not sure why.
</p>
<p>
Is it the irony in judging someone by the book they're reading, and then claiming
to not pick your books by the point you're making to the world?
</p>
<p>
Perhaps its the implication that judging someone by the book they're reading is
somehow more intelligent than judging them by the shoes they're wearing?
</p>
<p>
Or maybe its because I'm reading a lame, trashy, populist book at the moment.
</p>
<p>
Ah no, I've just figured out why it bothers me ... its that the very fact that
I'm writing this proves that I've managed to completely mislay my sense of
humour somewhere ... Wonder where I put it?
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>31</wp:post_id>
		<wp:post_date><![CDATA[2004-09-10 12:58:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-09-10 12:58:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[never-judge-a-book-by-its-cover]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/09/10/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>This is Home</title>
		<link>https://blogs.gnome.org/markmc/2004/09/13/this-is-home/</link>
		<pubDate>Mon, 13 Sep 2004 14:35:33 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/09/13/this-is-home/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
Lashing rain. Blustering wind. Troubled skies. A soft day, to be
sure.
</p>
<p>
Driving back to Dublin after a weekend in Waterford. Its a narrow,
twisting road. Countryside punctuated regularily by small country
towns. You wouldn't guess its the main road between two cities in a
first world country.
</p>
<p>
County Kilkenny makes up a good chunk of the journey. And Its a
special day for Kilkenny. In about thirty minutes we'll know just how
special. Every town and village is deserted. The county colours,
black and amber, are everywhere.
</p>
<p>
Switch on the radio and Micheal O'Muircheartaigh, with his legendary
commentary in a guttural Kerry accent, brings life to this dull
scene. You suddenly realise that every living room and pub you pass is
crammed with excitement. All eyes are on Croke Park as Kilkenny battle
with Cork in the All Ireland Hurling Final.
</p>
<p>
"Henry Shefflin looks toward the goal. Only two in the goal. Shefflin
hits it hard ... drives it hard ... away way down the field ... drives
it over the bar"
</p>
<p>
By the time I make it to Dublin, this battle will have finished. As I
pass by Croke Park the streets will be thronged with some very wet
people. Half of them won't care, half of them will be utterly
miserable. Maybe I should just switch off the radio and guess from the
crowds who came out on top.
</p>
<p>
"8 points to Cork, 8 points to Kilkenny. Twenty Eight All Irelands a
piece ... Its a hard game from start to finish."
</p>
<p>
Nah, I may barely know the first thing about hurling, but I can't miss
this.
</p>
<p>
In the <a href="http://www.gaa.ie/plugins/newsfeed.cgi?rm=content&amp;plugin_data_id=2262">end</a>,
Cork came out well on top. Cork 0-17 Kilkenny 0-9.
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>32</wp:post_id>
		<wp:post_date><![CDATA[2004-09-13 14:35:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-09-13 14:35:33]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[this-is-home]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/09/13/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Fixing the Session Manager</title>
		<link>https://blogs.gnome.org/markmc/2004/09/15/fixing-the-session-manager/</link>
		<pubDate>Wed, 15 Sep 2004 08:31:15 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/09/15/fixing-the-session-manager/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
There's lots of talk at the moment about "fixing the session manager",
a sentiment I agree with, but I worry that if we don't step back and
look at the big picture a bit we'll screw things up even more.
</p>
<p>
To me, "Session Management" is all about providing the ability to take
a snapshot of what you're doing right now, log out and be able to come
back later, log in and continue where you left off. So if I saved
the state of my session I'd expect following to be remembered:
<ul>
 <li>
  the applications which are running, and the windows belong to
  those applications which are open
 </li>
 <li>the size and position of all those windows</li>
 <li>
   which documents I have open, the position within those
   documents etc.
 </li>
</ul>
Alternatively, people seem to set things up just how they'd like it
when they log in every morning and take a snaphot of the session at
that point.
</p>
<p>
This is the kind of functionality which XSMP was designed for but it
hasn't yet worked out very well because most applications don't do a
good job of implementing it and there's not a lot of clarity on how
session state differs from application state (e.g. when you close your
browser, should it remember the last position of the window or should
it only remember that when you save your session?)
</p>
<p>
Anyway, lets forget about this feature for the moment. We do our best
to hide it in GNOME because we know its broken and my impression is
that most people don't bother with it because of its brokeness. I'm
not too concerned about fixing it right now.
</p>
<p>
There's this whole other thing the session manager does, though. It
starts what we think of as the "desktop shell" - the window manager,
panel, nautilus, screensaver daemon, settings daemon etc. etc. I think
most user's mental model of the desktop would be that all these
components make up a single entity in which different applications
run. Whether the panel is running isn't a part of transient session
state in the same way as whether the browser is running, its a fixed
part of the desktop.
</p>
<p>
Making this distinction gives us the ability to treat the session
shell and transient session state differently. But to what end? Well,
there's a number of thing we can do differently if we treat the
management of the session shell as a different problem:
<ol>
 <li>
  We stop forcing users to understand that in order to have certain
  desktop services started at login they must run them and then
  save the session.
 </li>
 <li>
  We consolidate all the hard-coded hacks for starting desktop
  services into a single mechanism whereby desktop services can
  register themselves with the session manager and asked to be
  started up based on a user preference.
 </li>
 <li>
   We remove the possibility of "losing" important parts of the
   desktop from your session
 </li>
 <li>
   We can start the session in two stages - the desktop shell
   followed by the applications, perhaps hiding the entire screen
   until the desktop has started
 </li>
 <li>
   We can remove obtuse terms like "Metacity Window Manager", "The
   Panel", "Nautilus" from the splash screen and just have "Starting
   GNOME".
 </li>
 <li>
   Since we won't have to worry about managing legacy applications,
   we can think about dumping XSMP and coming up with a solution
   specifically designed for starting the desktop itself
 </li>
</ol>
</p>
<p>
Here's another way to look at it - if you save your session while
you're running GNOME, wouldn't it make sense that when you log in to
KDE the same applications are running? If the answer to that is yes, I
think it shows that the question of activating desktop shell
components is orthogonal to the question of restoring session state on
login.
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>33</wp:post_id>
		<wp:post_date><![CDATA[2004-09-15 08:31:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-09-15 08:31:15]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[fixing-the-session-manager]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/09/15/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Notification Icons vs. Applets</title>
		<link>https://blogs.gnome.org/markmc/2004/09/15/notification-icons-vs-applets/</link>
		<pubDate>Wed, 15 Sep 2004 09:59:55 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/09/15/notification-icons-vs-applets/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
It saddens me to see people writing applets as notification icons
because I've been there myself and spent a good deal of time trying to
get traction on the problem but ended up dropping the ball.
</p>
<p>
The Network Monitor started out as a notification icon. But I was
<a href="http://mail.gnome.org/archives/desktop-devel-list/2003-June/msg00343.html">unhappy</a>
with that for a number of reasons:
<ol>
 <li>
  No consensus on what the notification area should be used for. Until
  we have that, I'm worried about serious notification area bloat.
 </li>
 <li>
  No reasonable way of starting standalone notification icons short of
  "start gnome-netstatus and save your session"
 </li>
 <li>
  Other less fundamental problems - no keynav, no decent notification
  icon widget, can't re-arrange icons, problems expanding icons to the
  full panel width ...
 </li>
</ol>
</p>
<p>
I think we got tantalizingly <a href="http://mail.gnome.org/archives/desktop-devel-list/2003-March/msg00351.html">close
to consensus</a> on the first problem, and <tt>EggStatusIcon</tt> is
an okay start on a widget, but in the end I ran out of time and turned
the Network Monitor into an applet.
</p>
<p>
Granted, I didn't care whether or not the Network Monitor worked in
KDE. Cross-desktop applets isn't an intractable problem, but just
lumping everything into the notification area is no way to approach
it.
</p>
<p>
Anyway, what I really wanted to mention was that I don't think problem
(2) above is a <a href="http://blogs.gnome.org/nb.cgi/view/markmc/2004/09/15/0">session manager
problem</a>. The notification area itself should manage these icons,
not the session manager ... if the panel isn't running or the
notification area isn't on the panel, these icons shouldn't be running,
right?
</p>
<p>
At some point we discussed the idea that each notification icon should
install a .desktop file describing the icon. In the preferences dialog
you could enable/disable each icon. If the icon is standalone (like
the Network Monitor) it would have an <tt>Exec</tt> field and the
notification area would spawn it if enabled. If the icon is part of an
application (e.g. the epiphany download icon) the notification area
would only allow the icon to be displayed if its enabled.
</p>
<p>
All this reminded me that I actually had a good <a href="http://mail.gnome.org/archives/desktop-devel-list/2003-March/msg00354.html">argument</a>
against every application developer's favourite feature - "Minimise to
Notification Area". Don't argue with a butler analogy!
</p>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>34</wp:post_id>
		<wp:post_date><![CDATA[2004-09-15 09:59:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-09-15 09:59:55]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[notification-icons-vs-applets]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/09/15/1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Panel Upgrade Brokeness</title>
		<link>https://blogs.gnome.org/markmc/2004/09/16/panel-upgrade-brokeness/</link>
		<pubDate>Thu, 16 Sep 2004 14:52:10 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/09/16/panel-upgrade-brokeness/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
<a href="http://www.peakpeak.com/~tromey/blog/2004/09/07/#upgrade">Tom</a>
you'll be delighted to know that if turn back time and decide to wait
until FC 3 to switch from RHL 9, the panel won't forget your nicely
configured 10 launchers and 10 applets ...
</p>
<p>
I can't help with the turning back the time part, though :-)
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>35</wp:post_id>
		<wp:post_date><![CDATA[2004-09-16 14:52:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-09-16 14:52:10]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[panel-upgrade-brokeness]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/09/16/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Aching All Over</title>
		<link>https://blogs.gnome.org/markmc/2004/09/20/aching-all-over/</link>
		<pubDate>Mon, 20 Sep 2004 10:03:01 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/09/20/aching-all-over/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
Spent the weekend surfing with five friends on the wild and windy west
coast. Having never surfed before, I'm now so sore I can barely
move. If I had to leave the house to do my job, I'd be taking the day
off I reckon.
</p>
<p>
Six of the lads going away for the weekend used to be a Very Dangerous
Thing. But this weekend we managed to stay out of trouble. Are we
getting old or were we just too tired after the surfing? I wonder ...
</p>
<p>
Never in my life have I never heard so many bad chat-up lines, though:
</p>
<blockquote>
Boy standing in pub porch smoking. Girl runs in out of the rain and
stops. Boy, "How's it going?". Girl looks up, sees the inane drunken
grin, dismisses Boy immediately, looks back down at her phone and
starts typing a text message. Boy, "Ah, we've only just met and you're
texting me already?". Girl runs.
</blockquote>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>36</wp:post_id>
		<wp:post_date><![CDATA[2004-09-20 10:03:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-09-20 10:03:01]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[aching-all-over]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/09/20/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Old Bugs</title>
		<link>https://blogs.gnome.org/markmc/2004/09/29/old-bugs/</link>
		<pubDate>Wed, 29 Sep 2004 11:41:23 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/09/29/old-bugs/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
<a href="http://tieguy.org">Luis</a> <a href="http://tieguy.org/blog/index.cgi/181.html">commented</a> on old
bugs recently. It certainly feels good to close old bugs. Like this <a href="http://bugzilla.gnome.org/show_bug.cgi?id=19197">four year old
bug</a>.
</p>
<p>
People will be glad to know that with very latest glibc (it'll be in
glibc 2.3.4), you'll be able to change the timezone and the clock
applet will actually notice. Yay for us! :-)
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>37</wp:post_id>
		<wp:post_date><![CDATA[2004-09-29 11:41:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-09-29 11:41:23]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[old-bugs]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/09/29/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>White Stuff</title>
		<link>https://blogs.gnome.org/markmc/2004/12/07/white-stuff/</link>
		<pubDate>Tue, 07 Dec 2004 14:11:36 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/12/07/white-stuff/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
I'm in Boston at the moment and I have to drive to work in
this this thing:
</p>
<img src="http://www.gnome.org/~markmc/white-stuff.jpg">
<p>
Brrr.
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>38</wp:post_id>
		<wp:post_date><![CDATA[2004-12-07 14:11:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-12-07 14:11:36]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[white-stuff]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/12/07/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Uh</title>
		<link>https://blogs.gnome.org/markmc/2004/12/22/uh/</link>
		<pubDate>Wed, 22 Dec 2004 09:29:39 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2004/12/22/uh/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
<a href="http://tieguy.org">Luis</a>: Um, it appears my sound was
<a href="http://tieguy.org/blog/index.cgi/265.html">"broken"</a> too.
</p>
<p>I'm sure there's a moral to this story other than
"how fscking dumb am I?" but ...</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>39</wp:post_id>
		<wp:post_date><![CDATA[2004-12-22 09:29:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2004-12-22 09:29:39]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[uh]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2004/12/22/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SSH, X Forwarding and Xauth</title>
		<link>https://blogs.gnome.org/markmc/2005/02/25/ssh-x-forwarding-and-xauth/</link>
		<pubDate>Fri, 25 Feb 2005 09:11:36 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2005/02/25/ssh-x-forwarding-and-xauth/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
Discovered something interesting yesterday while trying to figure out
why <a href="http://www.gnome.org/projects/sabayon">Sabayon</a> wasn't
working for jdennis over SSH:
</p>
<p>
<ul>
  <li>
   With <tt>ssh -Y</tt>, the SSH server creates a proxy X server to
   your local display which is just like any other SSH tunnel. Then
   it points <tt>$DISPLAY</tt> at the tunnel,
   e.g. <tt>DISPLAY=:10</tt>
  </li>
  <li>
   In order for you to have permission to access the local display,
   though, it also needs to add an xauth cookie your ~/.Xauthority on
   the remote host.
  </li>
  <li>
   The interesting part is that it doesn't do what you might assume
   and just forward your xauth cookie for the local display to the
   remote host. Instead it creates another cookie, sends that to the
   remote host and its that cookie which gets merged to your
   ~/.Xauthority. When you try and connect from the remote host to the
   local display over the tunnel, the SSH client compares the cookie
   in the first protocol message and if it matches the one it
   generated for the tunnel, it swaps that cookie with the original
   cookie and allows the connection to complete.
  </li>
</ul>
</p>
<p>
At first that might just seem like misguided paranoid delusional
crackrock, but it does actually make sense. With this cool trick, if
you SSH to a compromised machine (i.e. a machine where an attacker can
access you ~/.Xauthority), then your display is only vulnerable while
you remain logged in. Once you log out again, the compromised cookie
is useless.
</p>
  
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>40</wp:post_id>
		<wp:post_date><![CDATA[2005-02-25 09:11:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2005-02-25 09:11:36]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[ssh-x-forwarding-and-xauth]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2005/02/25/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>A Certain Rocking Vuntz</title>
		<link>https://blogs.gnome.org/markmc/2005/02/25/a-certain-rocking-vuntz/</link>
		<pubDate>Fri, 25 Feb 2005 11:17:33 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2005/02/25/a-certain-rocking-vuntz/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
So, I just plowed through a few hundred emails in my gnome-panel <a href="http://bugzilla.gnome.org">bugzilla.gnome.org</a> folder. In one
sense it was incredibly boring, because I don't think I actually
interacted with a single bug report, but in another sense its was just
incredibly awesome. The folder appears to be just full of bugs which
<a href="http://www.vuntz.net">Vincent Untz</a> has already
closed. Rocking!
</p>
<p>
I didn't know Vincent had a <a href="http://www.vuntz.net/blog/">blog</a>, interesting. I'll need to
polish my French a bit to understand it, though. About all I could
understand was <tt>"J'adore vim"</tt>. I guess its a good thing he
uses vim, really. If he used emacs he'd put us all to even more
shame fixing even more bugs.
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>41</wp:post_id>
		<wp:post_date><![CDATA[2005-02-25 11:17:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2005-02-25 11:17:33]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[a-certain-rocking-vuntz]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2005/02/25/1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rugby Weekend</title>
		<link>https://blogs.gnome.org/markmc/2005/02/28/rugby-weekend/</link>
		<pubDate>Mon, 28 Feb 2005 10:03:59 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2005/02/28/rugby-weekend/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
Another big <a href="http://en.wikipedia.org/wiki/Six_Nations_Championship">Six
Nations</a> rugby weekend over that saw Scotland beat Italy in the
dullest international game in a while, Wales beating France in a
breathtaking match in Paris and Ireland beating world champions
England in a tense, down-to-the-wire encounter in Dublin.
</p>
<p>
Its all looking like it'll end with a grand slam showdown between
Ireland and Wales in Cardiff. Who would have thought it?
</p>
<p>
The most bizarre example of how professionalism has changed Irish
rugby is that Brian O'Driscoll, Ireland's star centre, having strained
his hamstring was sent to <a href="http://www.cosspala.com.pl/krio/ecenter.htm">this whole body
cryotherapy unit</a> where you get put in a freezer at below -120°C
(-184°F) for a few minutes so that you can train at four times the
inensity for the next few hours. Three weeks after an injury that
would have put players out for months and he's back on the pitch
leading the team and scoring tries.
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>42</wp:post_id>
		<wp:post_date><![CDATA[2005-02-28 10:03:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2005-02-28 10:03:59]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[rugby-weekend]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2005/02/28/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Evolution Mail Account LDAP Backend For GConf</title>
		<link>https://blogs.gnome.org/markmc/2005/04/14/evolution-mail-account-ldap-backend-for-gconf/</link>
		<pubDate>Thu, 14 Apr 2005 14:30:00 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2005/04/14/evolution-mail-account-ldap-backend-for-gconf/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
(Jaysus, thats a very long name for a few hundred lines of
code)
</p>
<p>
I've just finished hacking on what was a really interesting little
project. Basically, its a GConf backend which uses information in
the user's LDAP entries to generate the mail account configuration for
Evolution. The idea is that if you've a large number of users, all you
have to do is stick each user's email address, incoming mail server and
outgoing mail server in her LDAP entry and Evolution should just
magically work.
</p>
<p>
I'm really happy with how well this thing turned out. I mean, it
actually works, it didn't take much code, there wasn't anything
lurking in GConf or Evo waiting to stab me in the back ... and, most
of all, it should actually be very useful.
</p>
<p>
The code is in <a href="http://cvs.gnome.org/viewcvs/evolution-gconf-ldap-backend/">evolution-gconf-ldap-backend</a>
in GNOME CVS and more details are in the <a href="http://cvs.gnome.org/viewcvs/*checkout*/gconf/backends/README.evoldap">README</a>.
</p>
<p>
What's more, Dave Malcolm has also written some <a href="http://lists.ximian.com/archives/public/evolution-hackers/2005-April/005427.html">cool
scripts</a> to solve the same problem, but without LDAP.
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>43</wp:post_id>
		<wp:post_date><![CDATA[2005-04-14 14:30:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2005-04-14 14:30:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[evolution-mail-account-ldap-backend-for-gconf]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2005/04/14/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Session Migration With GDM</title>
		<link>https://blogs.gnome.org/markmc/2005/04/26/session-migration-with-gdm/</link>
		<pubDate>Tue, 26 Apr 2005 17:59:20 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2005/04/26/session-migration-with-gdm/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
Last year <a href="http://blogs.linux.ie/caolan/index.php">Caolan</a>
and I demoed hotdesking with GDM and VNC. <a href="http://fishsoup.net/blog">Owen</a> later pointed out that VNC
probably wasn't the way to go once the <a href="http://www.gnome.org/~seth/blog/xshots">rendering
improvements</a> they're working come on line.
</p>
<p>
So, last week I picked up a patch I'd hacked up before Christmas,
finished it off and committed it to GDM. The idea is to do the same
thing as the VNC patch, but this time using a X proxy (like Xnest)
server on the terminal server instead of a VNC server.
</p>
Specifically, though, the features added to GDM are:
<ul>
  <li>You can now configure GDM to run XDMCP sessions on a local X
proxy server. This may be useful on its own for performance reasons;
in theory, at least, an X proxy server should be able to limit the
number of roundtrips it makes to the remote X server since if all you
want to do is query server state, then that state is local. I've no
idea yet how well Xnest and others do on this in practice, though.
  </li>
  <li>If the proxy server supports disconnecting from its parent
display and re-connecting later, you can configure GDM such that you
can disconnect from your session and reconnect later simply by logging
back in. The only proxy server's that I know of which support this is
the <a href="http://dmx.sf.net">DMX</a> X server and <a href="http://www.nomachine.com">NoMachine NX's</a> nxagent. Its
certainly possible to do this with any proxy though; I had it half
done for Xnest before realizing DMX had good enough support to get the
GDM patch done.
  </li>
</ul>
</p>
<p>
I've played around a little today with NoMachine's proxy. You can try
it out with GDM HEAD up by:
<ol>
  <li>Install NoMachine's server package</li>
  <li>Set <tt>xdmcp/EnableProxy=true</tt> in gdm.conf</li>
  <li>Download these scripts (<a href="http://www.gnome.org/~markmc/code/run-nxagent.sh">run-nxagent.sh</a>
and <a href="http://www.gnome.org/~markmc/code/reconnect-nxagent.sh">reconnect-nxagent.sh</a>)
and stick them in <tt>/tmp</tt></li>
  <li>Set <tt>xdmcp/ProxyXServer</tt> to
<tt>ProxyXServer=/tmp/run-nxagent.sh -audit 0 -name NX -geometry
768x576</tt> and <tt>xdmcp/ProxyReconnect</tt> to
<tt>/tmp/reconnect-nxagent.sh</tt></li>
  <li>Re-start GDM</li>
  <li>From another machine run <tt>X -query $server</tt> and login
through the login screen</li>
  <li>Run <tt>/tmp/reconnect-nxagent.sh --to :20</tt> on the server to
disconnect your remote X server from the session</li>
  <li>Run <tt>X -query $server</tt> again on the server, login and you
should be immediately re-directed to your original session</li>
</ol>
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>44</wp:post_id>
		<wp:post_date><![CDATA[2005-04-26 17:59:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2005-04-26 17:59:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[session-migration-with-gdm]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2005/04/26/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Architecture Astronauts</title>
		<link>https://blogs.gnome.org/markmc/2005/05/09/architecture-astronauts/</link>
		<pubDate>Mon, 09 May 2005 11:04:04 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2005/05/09/architecture-astronauts/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
I'd read some of <a href="http://www.joelonsoftware.com">Joel's</a> articles
before, not never really got around to reading a lot of them. Maybe its
because I hate reading long articles on a computer; maybe its because I
only became aware of his stuff well after he was at his most prolific.
</p>
<p>
Anyway, I'm thoroughly enjoying reading <a href="http://www.amazon.com/exec/obidos/tg/detail/-/1590593898/ref=nosim/joelonsoftware">the
book</a> at the moment. Catherine gave me her typical "you're such a freak" look
last night as I chuckled to myself over this description of <a href="http://www.joelonsoftware.com/articles/fog0000000018.html">Architecture
Astronauts</a>:
<blockquote>
When you go too far up, abstraction-wise, you run out of oxygen. Sometimes smart thinkers just don't know when to stop, and they create these absurd, all-encompassing, high-level pictures of the universe that are all good and fine, but don't actually mean anything at all. 
</blockquote>
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>45</wp:post_id>
		<wp:post_date><![CDATA[2005-05-09 11:04:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2005-05-09 11:04:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[architecture-astronauts]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2005/05/09/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Memory Usage Debugging</title>
		<link>https://blogs.gnome.org/markmc/2005/05/10/memory-usage-debugging/</link>
		<pubDate>Tue, 10 May 2005 12:43:04 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2005/05/10/memory-usage-debugging/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
There's been a lot of talk about reducing memory usage in GNOME, so
some people may be interested in the <a href="http://mail.gnome.org/archives/desktop-devel-list/2005-May/msg00052.html">little
adventure</a> I had this morning tracking down a mysterious 10M that
appeared in gnome-panel's memory map in FC4.
</p>
<p>
Update: I better clarify that to avoid misunderstandings ... this is
10M of unused virtual memory, not physical memory. The kernel would
only have ever allocated a handful of physical pages in this space.
This does not mean that GNOME now uses 10M less of your RAM.
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>46</wp:post_id>
		<wp:post_date><![CDATA[2005-05-10 12:43:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2005-05-10 12:43:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[memory-usage-debugging]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2005/05/10/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Stack Guard Page</title>
		<link>https://blogs.gnome.org/markmc/2005/05/11/stack-guard-page/</link>
		<pubDate>Wed, 11 May 2005 16:41:42 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2005/05/11/stack-guard-page/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
The most interesting little tidbit I learnt from the memory usage
debugging <a href="http://blogs.gnome.org/nb.cgi/view/markmc/2005/05/10/0">yesterday</a> was
about the "stack guard page". Look at this bit in the strace:
<pre>
mmap2(NULL, 10489856, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7219000
mprotect(0xb7219000, 4096, PROT_NONE)   = 0
clone(child_stack=0xb7c194c4, flags=CLONE_VM|...) = 2282
</pre>
What's going on here is that libc is mapping an area for the thread's
stack, just before spawning thread. The interesting bit is that, using
<tt>mprotect()</tt>, it also changes the permissions on the first page
(the page at the top of the stack) such that any instruction which
attempts to write to the page will cause a segmentation fault.
</p>
<p>
That's your stack guard page; it means that your infinitely recursing
function won't go off an scribble over its neighbouring thread's stack,
it'll just segfault like a good little thread.
</p>
<p>
(In true pthreads tradition, you can even configure the size of
this guard area - see the pthread_attr_setguardsize() manpage)
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>47</wp:post_id>
		<wp:post_date><![CDATA[2005-05-11 16:41:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2005-05-11 16:41:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[stack-guard-page]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2005/05/11/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Design By Scribble</title>
		<link>https://blogs.gnome.org/markmc/2005/05/13/design-by-scribble/</link>
		<pubDate>Fri, 13 May 2005 10:37:37 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2005/05/13/design-by-scribble/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
Yesterday, I finally got around to hacking up a dialog in Sabayon where you can assign profiles to users. Code-wise, I knew it was pretty trivial, but for once I decided to spend some time thinking about the UI design rather than hoping a real designer would come along and rescue me later.
</p>
<p>
So, I scribbled down a <a href="http://www.gnome.org/~markmc/sabayon-user-assignment-ui.html">rough design</a>, humed and hawed for a while and got hacking. I'm not totally depressed with the end result, so that's something ...
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>48</wp:post_id>
		<wp:post_date><![CDATA[2005-05-13 10:37:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2005-05-13 10:37:37]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[design-by-scribble]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2005/05/13/0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1</wp:comment_id>
			<wp:comment_author><![CDATA[mvi]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[none@example.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[85.76.5.53]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2005-05-13 21:24:36]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Re: the last image<p/>Maybe the user could use drag and drop between the two lists?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Random Hacker Tool #753</title>
		<link>https://blogs.gnome.org/markmc/2005/05/24/random-hacker-tool-753/</link>
		<pubDate>Tue, 24 May 2005 08:23:34 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2005/05/24/random-hacker-tool-753/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
For all those of you swimming in bug mail, I give you the <a href="http://www.gnome.org/~markmc/code/delete-resolved-bugs.c">super spiffy "Delete Resolved Bugs" plugin for Evolution</a>. Woo.
</p>
<img src="http://www.gnome.org/~markmc/screenshots/gnome-panel-folder-before.png">
<p>
I can't say its saved my life or anything, but its made a difference ...</p>

<img src="http://www.gnome.org/~markmc/screenshots/gnome-panel-folder-after.png">]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>49</wp:post_id>
		<wp:post_date><![CDATA[2005-05-24 08:23:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2005-05-24 08:23:34]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[random-hacker-tool-753]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2005/05/24/0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[Benjamin Schindler]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[config@gentoo.org]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[129.132.208.175]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2005-05-24 17:55:37]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is just what I was looking for! But it seems it only runs on evolution-2.4. Is there a way to backport it to 2.2, or does it need features that are not there on 2.2?<p/>Thanks]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[Benjamin Schindler]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[config@gentoo.org]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[129.132.208.175]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2005-05-24 18:25:52]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ok - never mind about this - it seems that the gentoo-folks have forgotten to include a few header-files (mail/*.h). It does not work yet here, but I'm working on it ;-)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[Mark McLoughlin]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markmc@redhat.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[83.71.62.100]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2005-05-24 18:29:02]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I've no idea - its worth a try ...<p/>One thing to note is that it'll only work with bugzillas that have the X-Bugzilla-Status header in the mails they send out. That could be a bugzilla.gnome.org specific feature.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[Benjamin Schindler]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[config@gentoo.org]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[129.132.208.175]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2005-05-24 18:38:14]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That's exactly it. It is a gentoo-bugzilla issue - so I'll bug them ;-)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[Vincent Untz]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[vuntz@gnome.org]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.vuntz.net/blog/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[129.88.39.24]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2005-05-24 20:59:11]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mark, this is great news. Now you'll be able to fix more panel bugs ;-)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[EdgeWise]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[gears@nospam.engin.umich.edu]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[136.1.1.33]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2005-05-25 23:36:09]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If your bugzilla does not have X-Bugzilla-Status you could query bugzilla directly to get only the status in XML.<p/>1. to yield results in XML by adding &ctype=xml to the URL.<br/>2. to exclude particular fields (like comments) by adding &excludefield=long_desc to the URL<br/>Example:<br/><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=295348&ctype=xml&excludefield=long_desc">https://bugzilla.mozilla.org/show_bug.cgi?id=295348&ctype=xml&excludefield=long_desc</a><p/>You would just need to exclude displaying every field except the status.<br/>]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Debugging With Strace</title>
		<link>https://blogs.gnome.org/markmc/2005/05/25/debugging-with-strace/</link>
		<pubDate>Wed, 25 May 2005 11:44:43 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2005/05/25/debugging-with-strace/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
I just check in a <a href="http://cvs.gnome.org/viewcvs/*checkout*/vino/docs/debugging.txt?rev=1.1">short doc</a> explaining some tricks to use when debugging Vino.
</p>
<p>
I got a bit side tracked explaining how you can figure out what messages are being sent back and forth to the X server, just by looking at the <tt>read()</tt>s and <tt>write()</tt>s in the strace. A snippet:
<pre>
[markmc@blaa ~]$ grep -rn X_QueryExtension /usr/include/X11/Xproto.h
2091:#define X_QueryExtension               98

  That's 0x62 in hex. So, we're looking for a write to the X
connection (file descriptor 3) with 0x62 as the first byte. What do ya
know:

1117012824.950683 writev(3, [{"\x62\x01\x04\x00\x06\x00\x01\x00", 8}, {"DAMAGE", 6}, {"\x00\x00", 2}], 3) = 16
1117012824.950939 read(3, "\x01\x00\x52\x00\x00\x00\x00\x00\x01\x9d\x75\xba\x00\x00"..., 32) = 32

  It's pretty clear that its QueryExtension for DAMAGE. Now, lets
figure out the event base from the reply. The format for the reply is:

typedef struct {
    BYTE type;  /* X_Reply */
    BYTE pad1;
    CARD16 sequenceNumber B16;
    CARD32 length B32; /* 0 */
    BOOL  present;
    CARD8 major_opcode;
    CARD8 first_event;
    ...
} xQueryExtensionReply;

   first_event is 11 bytes in. Looking at the read, that's 0x75. The
value of XDamageNotify is zero, so we can be 100% sure that all those
events after our NoExpose events are XDamageNotify events.
</pre>
</p>
<p>
Some people might find it interesting. Others will think I'm weird and  tell me to use something like xscope.
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>50</wp:post_id>
		<wp:post_date><![CDATA[2005-05-25 11:44:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2005-05-25 11:44:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[debugging-with-strace]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2005/05/25/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>What a week ...</title>
		<link>https://blogs.gnome.org/markmc/2005/06/04/what-a-week/</link>
		<pubDate>Sat, 04 Jun 2005 02:49:03 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2005/06/04/what-a-week/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
Wow, what a week. <a href="http://2005.guadec.org">GUADEC</a> was excellent. Lots of interesting talks and a great buzz from everyone. I was sorry to have to leave a day early, especially since I missed <a href="http://www.gnome.org/~gman/blog//02062005-1">Glynn's talk</a> which looked like a lot of fun. I've dumped the slides from my talk <a href="http://www.gnome.org/~markmc/guadec-2005-remotely-useful">here</a>.
</p>

<p>
The <a href="http://www.redhat.com/promo/summit/">Red Hat Summit</a> blew me away too. The whole thing was incredibly well organised and exciting to be a part of. I especially enjoyed just talking to random Red Hat customers and users etc.
</p>

<p>
The summit ended at lunchtime today, but even in that short time we had yet another cool video, inspirational talks from Bruce Mau (about the <a href="http://www.massivechange.com">Massive Change</a> project ... what an interesting way to look at the modern world), Dr. Deepak Phatak (who has been <a href="http://www.informationweek.com/story/showArticle.jhtml?articleID=47900215&amp;tid=5979">
bringing Open Source to education in India</a>) and <a href="http://www.bloglines.com/blog/sanjiva">Sanjiva Weerawarana</a> (who is heavily involved in the <a href="http://sahana.sourceforge.net">Sahana</a> project which was created to solve some of the logistical problems with the Tsunami relief effort). And most importantly, the creation of the Fedora Foundation was announced.
</p>

<p>
I'm truly shattered now, though.
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>51</wp:post_id>
		<wp:post_date><![CDATA[2005-06-04 02:49:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2005-06-04 02:49:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[what-a-week]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2005/06/04/0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>8</wp:comment_id>
			<wp:comment_author><![CDATA[Giacomo]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[fakemail@mail.it]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[62.211.191.118]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2005-06-04 18:38:18]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi. I was watching you slides and I see that there are glitches in 'r'. What font is that? And on which hardware/X11/freetype?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9</wp:comment_id>
			<wp:comment_author><![CDATA[Mark McLoughlin]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[83.71.62.100]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2005-06-08 19:24:58]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Its some OpenOffice.org bug which has since been fixed AFAIK]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Input Focus</title>
		<link>https://blogs.gnome.org/markmc/2005/06/14/input-focus/</link>
		<pubDate>Tue, 14 Jun 2005 12:16:56 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2005/06/14/input-focus/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
The details of behind input focus and X/GTK+ have always confused the
hell out of me. Its all fine and dandy when you only have to think
about GTK+ focus, but whenever I had to think about the interaction
between GTK+, the window manager and what's actually happening at the
Xlib/Xserver level, by brain used to go to mush. I'd barely figure
out the bits neccessary to fix whatever bug I was up against and
promptly forget it all again five minutes later.
</p>
<p>
Well, this morning I have to get focus handling working with Xnest
embedded in a GTK+ window. So, I figure I'm really going to have to
understand it this time. Here's some of the details:
 <ul>
  <li>In order for any X window to receive events of a certain type,
      you must call <tt>XSelectInput()</tt> on that window with the
      appropriate event mask.
  </li>
  <li>When a key event is generated, the Xserver tries to find a
      client and window to deliver the event to. It starts with the
      window which contains the pointer and recurses up through its
      ancestors until it finds a window with that event selected.
  </li>
  <li>X has the notion of "the keyboard focus window". This is set
      using <tt>XSetInputFocus()</tt>. When a key event is generated,
      the event is propopagated as normal if the focus window contains
      the pointer, but propogation stops at the focus window. If the
      focus window doesn't contain the pointer, the event is
      delivered directly to the focus window.
  </li>
  <li>What's important here is this has nothing to do with GTK+
      keyboard focus. Its more about which toplevel window is
      currently focused by the window manager, rather than which
      widget is focused within the application. The <a href="http://www.freedesktop.org/Standards/xembed-spec">XEmbed
      spec</a> more or less redefines this as the window's "activation
      state" - i.e. if a toplevel or its descendants is the current
      keyboard focus window then the toplevel is said to be active.
  </li>
  <li>None of this really reflects the way modern desktops and
      toolkits work. What happens in reality is that applications
      never focus themselves (i.e. <tt>XSetInputFocus()</tt>) unless
      the window manager tells it to using the WM_TAKE_FOCUS ICCCM
      ClientMessage.
  </li>
  <li>On receipt of this message GTK+ makes a 1 pixel square window,
      located just outside the visible area of the toplevel
      window, be the keyboard focus window. That causes all
      KeyPresses to always go straight to this window (the window
      doesn't have any descendants which can contain the pointer).
  </li>
  <li>When this window receives an X KeyPress event, GTK+ then
      generates a GTK key press event (with the toplevel as the
      target window) and puts that on the GTK event queue.
  </li>
  <li>At this point the event is entirely in the hands of GTK+. X
      has wiped its hands of the whole affair.
  </li>
  <li>Each toplevel GtkWindow knows which widget within the window
      is currently focused. All the toplevel now needs to do is
      send that event onto the currently focused widget.
  </li>
 </ul>
</p>
<p>
One last little interesting detail is how the window manager
implements click-to-focus:
 <ul>
  <li>The WM establishes a pasive grab on each unfocused toplevel
      window using <tt>XGrabButton()</tt>
  </li>
  <li>A passive grab is where events are delivered as normal until a
      specific key or button combination is pressed and an active grab
      is established causing the event (and following events) to be
      delived to the grabbing client.
  </li>
  <li>The WM passes <tt>GrabModeSync</tt> to <tt>XGrabButton()</tt>
      which causes all event delivery to freeze when the specific
      key/button combination is pressed.
  </li>
  <li>So, when a user clicks on an unfocused window, all subsequent
      events are queued in the Xserver, the WM gets the ButtonPress,
      focuses the toplevel of the window which was clicked in and
      releases the event queue again using <tt>XAllowEvents()</tt>
  </li>
 </ul>
</p>
<p>
In case its not obvious, I'm only really writing this down so there's
less chance of me forgetting it all again :-)
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>52</wp:post_id>
		<wp:post_date><![CDATA[2005-06-14 12:16:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2005-06-14 12:16:56]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[input-focus]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2005/06/14/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Sabayon article</title>
		<link>https://blogs.gnome.org/markmc/2005/06/17/sabayon-article/</link>
		<pubDate>Fri, 17 Jun 2005 09:19:52 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2005/06/17/sabayon-article/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
This month's <a href="http://www.redhat.com/magazine">Red Hat Magazine</a> has a <a href="http://www.redhat.com/magazine/008jun05/features/sabayon">really nice article on Sabayon</a> from <a href="http://webwynk.net/zana/changelog.html">Zana</a>.
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>53</wp:post_id>
		<wp:post_date><![CDATA[2005-06-17 09:19:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2005-06-17 09:19:52]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[sabayon-article]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2005/06/17/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Sabayon</title>
		<link>https://blogs.gnome.org/markmc/2005/06/22/sabayon/</link>
		<pubDate>Wed, 22 Jun 2005 12:13:45 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2005/06/22/sabayon/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
I've been been doing a lot of work changing <a href="http://www.gnome.org/projects/sabayon">Sabayon</a> around so that the list of changes you make in the prototype session aren't displayed within the prototype session itself. I think it makes a lot more sense.
</p>
<img src="http://www.gnome.org/~markmc/screenshots/sabayon-20050622.png">
<p>
Lots of work still remains to get the changes list someway usable given the limited space, though. I may have to get <a href="http://webwynk.net/jrb/">jrb</a> to rescue me.
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>54</wp:post_id>
		<wp:post_date><![CDATA[2005-06-22 12:13:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2005-06-22 12:13:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[sabayon]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2005/06/22/0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>10</wp:comment_id>
			<wp:comment_author><![CDATA[knipknap]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://debain.org/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[194.25.15.217]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2005-06-22 22:31:13]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Perhaps place the list of changes on the bottom of the window?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[Mark McLoughlin]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[83.70.73.29]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2005-06-22 22:37:15]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That's the way I first did it but there's not enough room on the screen, basically ... you'll get like 2 or three changes visible. Tried making the session smaller but things like the theme preferences dialog don't fit ...]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12</wp:comment_id>
			<wp:comment_author><![CDATA[knipknap]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://debain.org</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[217.94.165.177]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2005-06-23 04:10:34]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ah. Not an easy one. Maybe use a cell renderer with two lines of text, with the first line saying something like "GConf Key Changed" (bold) and the second line showing the key. And similary for changed files.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Xnest Buginess</title>
		<link>https://blogs.gnome.org/markmc/2005/06/22/xnest-buginess/</link>
		<pubDate>Wed, 22 Jun 2005 12:21:21 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2005/06/22/xnest-buginess/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
Anyone that uses Xnest will have gotten annoyed when it gets confused about the modifier state and it thinks e.g. Alt is pressed when its clearly not. Given that the bug has been around forever, it was seriously gratifying to <a href="https://bugs.freedesktop.org/show_bug.cgi?id=3030">fix it</a> last week.
</p>
<p>
And before anyone says "Xnest sucks; use <a href="http://www.freedesktop.org/wiki/Software/Xephyr">Xephr</a>", this is actually a bug in Xephr too ... :-)
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>55</wp:post_id>
		<wp:post_date><![CDATA[2005-06-22 12:21:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2005-06-22 12:21:21]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[xnest-buginess]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2005/06/22/1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA[mallum]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[mallum@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://butterfeet.org/blog</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[81.153.48.212]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2005-06-22 22:10:59]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Xnest sucks ! use Xephyr ( with <a href="http://projects.o-hand.com/xpatches/xephyr-fix-focus-in-modifier.patch">http://projects.o-hand.com/xpatches/xephyr-fix-focus-in-modifier.patch</a> )<br/>Though I must admit I just stole your fix ;)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Bizarro</title>
		<link>https://blogs.gnome.org/markmc/2005/06/25/bizarro/</link>
		<pubDate>Sat, 25 Jun 2005 08:38:26 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2005/06/25/bizarro/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
Truly <a href="http://jimmac.musichall.cz/weblog.php/Oops_Dept/Collage">bizarre </a> and somewhat disturbing :-) I feel like I should become an Internet recluse now or something ...
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>56</wp:post_id>
		<wp:post_date><![CDATA[2005-06-25 08:38:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2005-06-25 08:38:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[bizarro]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2005/06/25/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Marketing Silliness</title>
		<link>https://blogs.gnome.org/markmc/2005/06/27/marketing-silliness/</link>
		<pubDate>Mon, 27 Jun 2005 13:50:22 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2005/06/27/marketing-silliness/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
<a href="http://www.skynet.ie/~caolan/">Caolán</a> and I spent a while being generally childish (like changing the web page on the Sun Rays from sun.com to redhat.com etc.) at the Sun booth at <a href="http://www.linuxtag.org/">LinuxTag</a>. Much chuckles was had, though, when we saw this:
</p>
<img src="http://www.gnome.org/~markmc/marketing-silliness.jpg">
<p>
Marketing people are silly. Vino should clearly have a <i>bigger</i> box than piffling little OpenOffice.org :-)
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>57</wp:post_id>
		<wp:post_date><![CDATA[2005-06-27 13:50:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2005-06-27 13:50:22]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[marketing-silliness]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2005/06/27/0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[Raphael Bosshard (rboss)]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[62.2.79.100]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2005-06-28 00:52:42]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Weeelll.. It is bigger. The StarOffice/OpenOffice-Box is 2 x 0.3, while the Vino-Box is 1 x 1.0.<p/>See; no worry. ;)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>xscope</title>
		<link>https://blogs.gnome.org/markmc/2005/07/28/xscope/</link>
		<pubDate>Thu, 28 Jul 2005 17:55:43 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2005/07/28/xscope/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
<a href="http://www.keithp.com/cvs/xscope">xscope</a> is so damn useful.
</p>
<p>
Here's a <a href="http://www.gnome.org/~markmc/code/xscope-support-shape-extension.patch">patch </a> to make it support the SHAPE extension. It'd be really good to get this thing into freedesktop.org and so people can hack on it to make it sane.
</p>
<p>
I should try out <a href="http://mail.gnome.org/archives/gnome-hackers/2003-August/msg00026.html">Soeren's gtk xscope wrapper</a>.
</p>
<p>
I'm not sure what's the best way to build the thing, but if you check it out from keithp's CVS and do:
<pre>
$&gt; imake -I/cvs/xorg/config/cf
$&gt; make
</pre>
then it seems to build just fine if you remove the <tt>malloc()</tt> prototype in <tt>common.c</tt>. Of course, if you have a space between the <tt>-I</tt> and the path to the xorg build on the imake command line, then you could find yourself spending a long time trying to figure out wtf is wrong.
</p>
<p>
Oh, yeah, one final tip. xscope is a proxy Xserver. So, when you connect your app to xscope, Xlib goes looking in <tt>~/.Xauthority</tt> for an xauth cookie to use when authenticating.  Because xscope has a different display number from the parent display, though, you need to use xauth to setup the cookie for this display number too. So, assuming the parent display is <tt>:0</tt> and xscope is <tt>:1</tt>, you can do:
<pre>
$&gt; xauth list | grep '/unix:0' | while read display proto cookie; do xauth add ${display%0}1 $proto $cookie; done
</pre>
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>58</wp:post_id>
		<wp:post_date><![CDATA[2005-07-28 17:55:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2005-07-28 17:55:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[xscope]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2005/07/28/0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[Daria]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[195.177.212.225]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2005-08-03 01:12:16]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thank you so much for your last tip !!! Now Android is working fine !! <br/>ok, I'm not what one could call a Linux black belt..anyway, you saved my day of work.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>GNOME Startup Time Analysis</title>
		<link>https://blogs.gnome.org/markmc/2005/10/05/gnome-startup-time-analysis/</link>
		<pubDate>Wed, 05 Oct 2005 04:42:41 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2005/10/05/gnome-startup-time-analysis/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
Maybe I'm dumb and I missed it, but I hadn't seen <a href="http://www.colitti.com/lorenzo">Lorenzo Colitti's</a> <a href="http://www.gnome.org/~lcolitti/gnome-startup/analysis/">analysis of GNOME startup time</a> mentioned anywhere. Well worth reading.
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>59</wp:post_id>
		<wp:post_date><![CDATA[2005-10-05 04:42:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2005-10-05 04:42:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[gnome-startup-time-analysis]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2005/10/05/0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>16</wp:comment_id>
			<wp:comment_author><![CDATA[Marius Gedminas]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[marius@pov.lt]]></wp:comment_author_email>
			<wp:comment_author_url>http://mg.b4net.lt/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[82.135.214.108]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2005-10-05 19:55:58]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Why, it's obvious!  The analysis wasn't mentioned anywhere because it hasn't been written yet -- the "last updated date" explicitly says 2005-10-19, i.e. two weeks from now.  It's only some glitch in the space-time continuum that lets us peek at this not-written-yet document now.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[Ashley Hooper]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nlogax1973@yahoo.co.uk]]></wp:comment_author_email>
			<wp:comment_author_url>http://clunker.dyndns.org</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[146.101.247.18]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2005-10-05 21:05:31]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes yes yes!  I wish I was a coder as I think a lot of work needs to go into Gnome memory and I/O optimisation.  The underlying [Linux Unix] kernel and filesystems are blindingly fast but once Gnome is stacked on top a fast system suddenly seems inadequate.<p/>Given that a lot of target installations for Gnome are recycled PCs this is clearly not ideal!<p/>Having said that I do love Gnome and use it exclusively on all of my computers, an am optimistic for its future.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>18</wp:comment_id>
			<wp:comment_author><![CDATA[Lorenzo Colitti]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[lorenzo@colitti.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.colitti.com/lorenzo</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[193.0.2.53]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2005-10-06 01:06:37]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ok, ok, cut me some slack, I have a paper deadline on Sunday and my sense of time is rather flexible at the moment! :)<p/>I'll be at the GNOME summit in Boston though, hacking on this. So if anyone wants to ping me / work with me there, feel free!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Red Hat Magazine</title>
		<link>https://blogs.gnome.org/markmc/2005/10/21/red-hat-magazine/</link>
		<pubDate>Fri, 21 Oct 2005 03:36:54 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2005/10/21/red-hat-magazine/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
I'm always a tad shocked when <a href="http://www.redhat.com/magazine/">Red Hat Magazine</a> comes out every month with some genuinely interesting and useful articles. Really nice to see <a href="http://www.redhat.com/magazine/012oct05/features/freedesktop/">Integrating your applications into the desktop, Part 1</a> from <a href="http://zana.webwynk.net/">Zana</a> this month, for example.
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>60</wp:post_id>
		<wp:post_date><![CDATA[2005-10-21 03:36:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2005-10-21 03:36:54]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[red-hat-magazine]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2005/10/21/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Benchmarking Login Time Improvements</title>
		<link>https://blogs.gnome.org/markmc/2005/12/11/benchmarking-login-time-improvements/</link>
		<pubDate>Sun, 11 Dec 2005 11:25:54 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2005/12/11/benchmarking-login-time-improvements/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
I finally got around to committing some <a href="http://www.gnome.org/~markmc/code/gconf-merged-tree-split-translations.patch">changes to GConf</a> which <a href="http://www.gnome.org/~lcolitti/gnome-startup/analysis/">Lorenzo Colitti's analysis of GNOME startup time</a> showed would make a considerable improvement to login time. More details <a href="http://mail.gnome.org/archives/desktop-devel-list/2005-December/msg00092.html">here</a>.
</p>

<p>
The most frustrating part of this is just how difficult it is to get decent, reproducible figures of login time to show the improvements.
</p>

<p>
I first tried using bootchart to reproduce the results as Lorenzo had done. I hacked up a script to run gdm on a test machine, automatically login as a test user and get a bootchart of the time between gdm starting and the panel finishing loading the applets. I did a number of runs for each of my test cases - unmodified GConf, unmerged tree; unmodified GConf, merged tree; patched GConf, merged tree.
<p>

<table border="1" cellpadding="2" cellspacing="2">
<tbody>
<tr>
<td><a href="http://www.gnome.org/~markmc/screenshots/bootchart-orig.png"><img src="http://www.gnome.org/~markmc/screenshots/bootchart-orig-small.png"></a></td>
<td><a href="http://www.gnome.org/~markmc/screenshots/bootchart-merged.png"><img src="http://www.gnome.org/~markmc/screenshots/bootchart-merged-small.png"></a></td>
<td><a href="http://www.gnome.org/~markmc/screenshots/bootchart-merged-split.png"><img src="http://www.gnome.org/~markmc/screenshots/bootchart-merged-split-small.png"></a></td>
</tr>
<tr>
<td valign="undefined">Unmodified</td>
<td valign="undefined">Merged Tree</td>
<td valign="undefined">Merged Tree, Split Translations</td>
</tr>
</tbody>
</table>

<p>
You can see improvements, just as Lorenzo predicted, but annoyingly each run of bootchart varied wildly from others, so you can't really be sure exactly what difference you've made.
</p>

<p>
Next, I tried a much more low-tech approach. I wrote a <a href="http://www.gnome.org/~markmc/code/record-timestamp.sh.txt">script </a>to record a timestamp in a text file in <tt>/tmp</tt> and ran that script  from xinitrc and from the panel (once it had finished loading applets). By making the script reboot once it had recorded the second timestamp, and configuring GDM to login automatically, I could walk away from the machine and let it record a bunch of timings rather than sit there and watch it reboot.
</p>

<p>
Disappointingly, these results varied quite a bit too. But, by discarding obvious anomalies (note my ignorance of statistical methods) and taking an average, I got:

 <ul>
  <li>Unmodified GConf - 14.382s</li>
  <li>Unmodified GConf; merged tree - 13.978s</li>
  <li>Patched GConf; merged tree - 11.086s</li>
 </ul>

That shows a ~20% improvement in login time, which is certainly promising.
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>61</wp:post_id>
		<wp:post_date><![CDATA[2005-12-11 11:25:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2005-12-11 11:25:54]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[benchmarking-login-time-improvements]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2005/12/11/0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>19</wp:comment_id>
			<wp:comment_author><![CDATA[Ziga Mahkovec]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ziga.mahkovec@klika.si]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.bootchart.org</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[193.77.159.2]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2005-12-12 04:00:25]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Regarding the problems you had with differing bootchart results -- are those differences in overall time or the graph structure?<p/>In any case, I'm glad bootchart is being used for application profiling as well and I'd be interested in ironing out these bugs.  Feel free to send bug reports :)<p/>Thanks,<br/>-- <br/>Ziga]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>20</wp:comment_id>
			<wp:comment_author><![CDATA[Eric Anholt]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[anholt@FreeBSD.org]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[69.30.77.85]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2005-12-13 17:03:32]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you want to make statistics but don't want to actually remember how to do them, or to write a custom program to do them, then I recommend building ministat from FreeBSD's src tree.  It should be reasonably portable.<p/><a href="http://www.freebsd.org/cgi/cvsweb.cgi/src/tools/tools/ministat/">http://www.freebsd.org/cgi/cvsweb.cgi/src/tools/tools/ministat/</a><p/>Just drop a column of all your numbers in two (or more) files, one for each test case, run ministat with them as an argument, and have math tell you whether your numbers have a significant difference.<p/>It's a daily task for me, I find, and I love the tool.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Google Map Pedometer</title>
		<link>https://blogs.gnome.org/markmc/2005/12/14/google-map-pedometer/</link>
		<pubDate>Wed, 14 Dec 2005 17:33:38 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2005/12/14/google-map-pedometer/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
This <a href="http://www.gmap-pedometer.com">Google Map Pedometer thing</a> is pretty damn cool. I mapped out the <a href="http://tinyurl.com/ar6mc">17k route</a> I ran tonight. Now I can put aside my deep suspicion of the distances reported by my own pedometer :-)
</p>

<p>
If only the satellite imagery for Dublin was a bit better ...
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>62</wp:post_id>
		<wp:post_date><![CDATA[2005-12-14 17:33:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2005-12-14 17:33:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[google-map-pedometer]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2005/12/14/0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>21</wp:comment_id>
			<wp:comment_author><![CDATA[oGALAXYo]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[84.129.224.227]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2005-12-15 10:27:24]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[17K Route ? Montgomery's Village ? OCC (Orange County Choppers) ? That 17K Route ?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>LDAP Notifications</title>
		<link>https://blogs.gnome.org/markmc/2006/01/24/ldap-notifications/</link>
		<pubDate>Tue, 24 Jan 2006 04:18:11 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2006/01/24/ldap-notifications/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
Figuring out what the story is with LDAP notifications isn't terribly easy. There are a number of different protocol extensions out there:

  <ul>

    <li>
Netscape's <a href="http://www.watersprings.org/pub/id/draft-smith-psearch-ldap-01.txt">Persistent Search</a> or <i>PSEARCH</i>. <a href="http://directory.fedora.redhat.com">Fedora Directory Server</a> supports this. Extends the standard searchRequest such that it doesn't complete immediately, and returns any changes to the matched by the search.
    </li>

    <li>
<a href="http://www.watersprings.org/pub/id/draft-ietf-ldapext-trigger-01.txt">Triggered Search Control</a> or <i>TSEARCH</i>. Not sure what implements this. Similar to psearch.
    </li>

    <li>
<a href="http://www.watersprings.org/pub/id/draft-armijo-ldap-dirsync-01.txt">Microsoft LDAP Control for Directory Synchronization</a> or <i>DIRSYNC</i>. Implemented by Active Directory, but requires the client to poll for changes. 
    </li>

    <li>
<a href="http://www.watersprings.org/pub/id/draft-zeilenga-ldup-sync-04.txt">LDAP Content Synchronization Operation</a> or <i>SYNC</i>. Implemented by OpenLDAP and allows both polling and persistent modes.
    </li>

    <li>
<a href="http://www.ietf.org/rfc/rfc3928.txt">LDAP Client Update Protocol (RFC 3928)</a> or <i>LCUP</i>. Similar to SYNC. Not sure who actually implements this.
    </li>

  </ul>

The strangest thing about all this is that LCUP is the only one of these that progressed from Internet Draft to RFC, yet neither OpenLDAP nor Fedora Directory Server implement it. SYNC seems to have been proposed by the OpenLDAP crew because when they went to implement LCUP they found that it <a href="http://www.imc.org/ietf-ldup/mail-archive/msg01754.html">"requires server implementations to maintain complete history information in order to provide eventually convergent incremental refreshes"</a>, which presumably wasn't something that OpenLDAP already did. Yet the working group went ahead and progressed LCUP to RFC and not SYNC.
</p>

<p>
Anyway, moral of the story is that if you want notifications, then you want PSEARCH if you're using Fedora Directory Server and SYNC if you're using OpenLDAP.
</p>

<p>
If you're using OpenLDAP's client library, rather than the <a href="http://www.mozilla.org/directory/csdk.html">Mozilla LDAP C SDK</a>, then it's a little tricky since you have to manually create the psearch control and parse the entryChange controls. Here's <a href="http://www.gnome.org/~markmc/code/test-ldap-psearch-notifications.c">some example code</a>.
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>63</wp:post_id>
		<wp:post_date><![CDATA[2006-01-24 04:18:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2006-01-24 04:18:11]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[ldap-notifications]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2006/01/24/0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>22</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[67.94.5.100]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2006-01-25 01:58:13]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You may also be interested in Novell's eDirectory events system. It is a pretty extensive notification system built into eDirectory server. <p/>A few links: <a href="http://developer.novell.com/ndk/doc/cldap/index.html?page">http://developer.novell.com/ndk/doc/cldap/index.html?page</a>=/ndk/doc/cldap/ldaplibc/data/hevgtl7k.html<br/>Look up function ldap_monitor_events<p/>The API from Novell is available. It is also possible to use OpenLDAP library as a base API and add events extension as an add on using "intermediate response" facility from OpenLDAP library, to access these.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>GObject Private Data</title>
		<link>https://blogs.gnome.org/markmc/2006/01/25/gobject-private-data/</link>
		<pubDate>Wed, 25 Jan 2006 03:35:15 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2006/01/25/gobject-private-data/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
<a href="http://primates.ximian.com/~federico/news-2006-01.html#24">Federico:</a> the combination of a "*priv" field and GObject private data is the best way to go:

<pre>
struct _PangoFcFont
{
   ...
   gpointer priv;
   ...
};

#define PANGO_FC_FONT_GET_PRIVATE(obj) ((PangoFcFontPrivate *) ((PangoFcFont *) obj)-&gt;priv)

static void
pango_fc_font_class_init (PangoFcFontClass *class)
{
  ...
  g_type_class_add_private (object_class, sizeof (PangoFcFontPrivate));
}

static void
pango_fc_font_init (PangoFcFont *fcfont)
{
  fcfont-&gt;priv = G_TYPE_INSTANCE_GET_PRIVATE (fcfont, PANGO_TYPE_FC_FONT, PangoFcFontPrivate)
}
</pre>

Indeed, that's <a href="http://mail.gnome.org/archives/gtk-devel-list/2003-January/msg00004.html">why <tt>g_type_get_private()</tt> was added</a>. You get the best of both worlds - the convenience of a priv pointer with the fact that the private data is allocated in the same chunk as the object itself, without the inefficiency of calling <tt>get_private()</tt> a lot or the extra static variable in <a href="http://www.fishsoup.net/blog">Owen</a>'s original proposal.
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>64</wp:post_id>
		<wp:post_date><![CDATA[2006-01-25 03:35:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2006-01-25 03:35:15]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[gobject-private-data]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2006/01/25/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>LDAP Notifications (again)</title>
		<link>https://blogs.gnome.org/markmc/2006/01/25/ldap-notifications-again/</link>
		<pubDate>Wed, 25 Jan 2006 04:59:20 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2006/01/25/ldap-notifications-again/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
<a href="http://blogs.gnome.org/view/markmc/2006/01/24/0">Yesterday</a> I posted some <a href="http://www.gnome.org/~markmc/code/test-ldap-psearch-notifications.c">code</a> which shows how to use Fedora Directory Server's "persistent searches" using OpenLDAP's client library. Here's that same code, but as a <a href="http://www.gnome.org/~markmc/code/ldapwatch.c">Python module</a>.
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>65</wp:post_id>
		<wp:post_date><![CDATA[2006-01-25 04:59:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2006-01-25 04:59:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[ldap-notifications-again]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2006/01/25/1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>GObject Private Data (again)</title>
		<link>https://blogs.gnome.org/markmc/2006/01/25/gobject-private-data-again/</link>
		<pubDate>Wed, 25 Jan 2006 13:15:20 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2006/01/25/gobject-private-data-again/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
Aren't discussions via blogs fun? :)
</p>

<p>
<a href="http://primates.ximian.com/~federico/news-2006-01.html#25">Federico</a>: two points:

 <ol>
  <li>
   <p>Using the new GObject instance private data API, rather than the private data scheme that GNOME hackers have always used, is a small optimization in itself - the private data is allocated in the same chunk as the object itself.</p>
   <p>As with all optimizations, you weigh up the benefit against the code obfuscation. In this case, I don't think the GObject scheme makes the code more difficult to understand ... especially since it's likely to become as much of a second-nature idiom as the old scheme. It's also one less opportunity to leak memory.</p>
  </li>
  <li>
    <p>Using the GObject scheme, instance private data could have been added without the runtime hit you were seeing ... even where the object structure couldn't be extended without breaking ABI.
    </p>
    <p>To do so, you'd just go back to something similar to Owen's initial suggestion for how the API should be used - in a static variable, you'd store the offset between the address of the object structure and the private data and use that offset for efficient access to the data. <tt>add_private()</tt> originally returned this offset, but it no longer does, so you'd need to calculate the offset in <tt>instance_init()</tt> - but it is guaranteed to be constant.</p>
    <p>Granted, that's a <i>nasty</i> hack which would genuinely obfuscate the code ... but at least it would actually be possible to add private data, whereas it wouldn't be possible with the old scheme.</p>
    <p><b>Update</b>: <a href="http://blogs.gnome.org/view/markmc/2006/01/25/2#comments">Tim points out</a> that the offset to the private data isn't constant across all instances - the offset will be larger for subtypes since the private data is allocated after <i>all</i> object data.</p>
  </li>
 </ol>
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>66</wp:post_id>
		<wp:post_date><![CDATA[2006-01-25 13:15:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2006-01-25 13:15:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[gobject-private-data-again]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2006/01/25/2]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>23</wp:comment_id>
			<wp:comment_author><![CDATA[Tim Janik]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[timj@gtk.org]]></wp:comment_author_email>
			<wp:comment_author_url>http://gtk.org/~timj</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[213.39.145.210]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2006-01-26 05:42:28]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mark, what you say about the offset is not true.<br/>For two objects of different types, both deriving from a common parent, (say P<-A and P<-B), the offsets for getting at the P-private data are likely to be different for instances A*a; and B*b; simply because sizeof(A) is most often != sizeof (B). that's why gtype.h only provides g_type_instance_get_private() (and because of other nastiness during object construction).]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>24</wp:comment_id>
			<wp:comment_author><![CDATA[Mark McLoughlin]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[83.71.16.205]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2006-01-26 05:50:47]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ah, excellent point - I hadn't considered subtypes at all.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>25</wp:comment_id>
			<wp:comment_author><![CDATA[Philip Van Hoof]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[spam@pvanhoof.be]]></wp:comment_author_email>
			<wp:comment_author_url>http://pvanhoof.be</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[84.192.251.189]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2006-01-26 09:28:04]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Are these *priv-data backwards ABI compatibility issues documented or explained? If not, somebody should IMHO really do that :p. I can imagine new libraries (like libsexy) will be developed. It would be better if the authors or those new libraries make sure they make the right decisions about *priv-data handling.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Patch Management</title>
		<link>https://blogs.gnome.org/markmc/2006/04/25/patch-management/</link>
		<pubDate>Tue, 25 Apr 2006 05:45:49 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2006/04/25/patch-management/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
As part of the work I've started doing on <a href="http://fedoraproject.org/wiki/StatelessLinux">Stateless Linux</a>, I've found myself hacking on <a href="http://sources.redhat.com/dm/">device-mapper</a>'s snapshot support. It's actually been really good fun to do a bit of kernel hacking again after such a long time ... and this time I feel like I actually have some clue what I'm doing.
</p>

<p>
I'm really behind the times when it comes to all the new fangled revision control systems out there like bzr, git, mercurial, svn etc. - cvs and manual patch mangling is all I know.
</p>

<p>
So, when <a href="http://www.kernel.org/pub/linux/kernel/people/agk">agk</a> pointed me at <a href="http://savannah.nongnu.org/projects/quilt/">quilt</a>, I was a bit dubious at first but gave it a shot. It turned out to be a really simple and useful way of maintaining your own <a href="http://www.gnome.org/~markmc/code/dm-patches/">patchset</a> in parallel with an upstream codebase.
</p>

<p>
Even though it's a really simple tool, it seems to me to have some of the important advantages of other systems like distributed offline branches and change sets. If I had time to hack on GNOME again, I'd use quilt a lot for offline branches alongside CVS. It's given me an appetite for looking at other systems too.
</p> ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>67</wp:post_id>
		<wp:post_date><![CDATA[2006-04-25 05:45:49]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2006-04-25 05:45:49]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[patch-management]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2006/04/25/0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>26</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[201.1.5.105]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2006-04-26 06:23:07]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[FWIW if/when you decide to take a look at "the new fangled RCS systems out there", if you want something like quilt:<p/>- with Mercurial you can use the mq extension (distributed with Mercurial itself)<p/>- with git, there's StGIT<p/>In bzr-land, "bzr shelve" is sometimes compared to quilt, but IME it serves a different purpose and is much more limited.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27</wp:comment_id>
			<wp:comment_author><![CDATA[David Nusinow]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[151.199.35.84]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2006-04-26 10:38:25]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[One of the coolest things about quilt is that it scales up insanely well for a large codebase. We're using it inside the Debian Xorg packages to manage our patches because the old system simply was too slow to really work. We have well over a hundred patches to that huge codebase and quilt has worked flawlessly. You have to be smarter about it (by using quilt edit) than with other patch systems, but it's an amazing tool to have in the box. We use it inside the packaging system, all of which we store in svn by the way, so quilt can be used as an RCS within a RCS if you want.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Mugshot Design Process</title>
		<link>https://blogs.gnome.org/markmc/2006/06/06/mugshot-design-process/</link>
		<pubDate>Tue, 06 Jun 2006 04:56:13 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2006/06/06/mugshot-design-process/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
What I find most interesting about <a href="http://mugshot.org">Mughsot</a> is the team's total and no-bullshit commitment to making new and interesting software which doesn't suck.
</p>
<p>
I love the way they say their <a href="http://developer.mugshot.org/wiki/Design_Thinking">design process</a> <i>"isn't a checklist of activites you must do - it's an idea list, suggestions for how to work smarter"</i>. I love the way they <a href="http://blog.mugshot.org/?p=73">prototyped a photos feature using flickr</a> but were willing to drop it again after trying it on real people. I love the way they lock themselves in a room, leaving their laptops behind, and give themselves the time to hash out ideas properly.
</p>
<p>
I hope Mugshot itself is a success. But, more than that, I hope they help change the way the rest of us make software.
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>68</wp:post_id>
		<wp:post_date><![CDATA[2006-06-06 04:56:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2006-06-06 04:56:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[mugshot-design-process]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2006/06/06/0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>28</wp:comment_id>
			<wp:comment_author><![CDATA[numpty]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[numpty@dumpty.org]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[213.202.177.89]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2006-06-07 09:49:49]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Whole thing just looks like another <a href="http://www.imeem.com">iMeem</a> clone to me though... so why bother? :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Eben Moglen&#039;s Talk</title>
		<link>https://blogs.gnome.org/markmc/2006/06/08/eben-moglens-talk/</link>
		<pubDate>Thu, 08 Jun 2006 05:04:37 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2006/06/08/eben-moglens-talk/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
<a href="http://www.0xdeadbeef.com/weblog/?p=209">What Chris said</a>. Go watch Eben's talk, it really is worth it. I'm going to watch it again.
</p>

<p>
Chris had a nice quote, but you can skip randomly to any part and get other equally nice quotes.
<p>

<p>
"The patent has become a real estate entitlement, not based upon the social value it produces, but rather irrespective of the social <i>harm</i> it may induce."
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>69</wp:post_id>
		<wp:post_date><![CDATA[2006-06-08 05:04:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2006-06-08 05:04:37]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[eben-moglens-talk]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2006/06/08/0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>29</wp:comment_id>
			<wp:comment_author><![CDATA[J.B. Nicholson-Owens]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jbn@forestfield.org]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[74.134.242.2]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2006-06-10 02:29:07]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The more laudatory the speech, the more of a shame it is that the movies are licensed to prohibit sharing by default:<p/>"All materials on this program are protected by United States copyright law and may not be reproduced, distributed, transmitted, displayed, or otherwise published without the prior written permission of Red Hat, Inc.  You may not alter or remove any trademark, copyright or other notice.  However, provided that you maintain all copyright and other notices contained therein, you may download the video (one machine readable copy) for your personal, non-commercial use only."<p/>So, in other words, enjoy the freedoms of free software but don't you dare spread this movie file around to tell other people about it.  Not everyone who needs to hear these things has net access, a computer, or an interest in sitting in front of a computer.  I host a radio program where I play free software-related talks and discuss free software-related issues.  I'd love to play Prof. Moglen's talk, but I can't because either I have to go through a hell of a lot of hassle to share it or I'd play something my listeners are prohibited from sharing further.  When Red Hat takes this off the Internet, people will just have to settle for explaining this not half as well as Eben Moglen did.  Even verbatim non-commercial sharing is prohibited by default unless you ask the copyright holder each and every time you want to share.  Did some video post-production house slap that silly restrictive license there without understanding who their audience was?<p/>Red Hat should relicense these to at least allow non-commercial verbatim sharing in any medium so long as a simple license sentence is copied with the work, and re-edit the movies to edit out that text I quoted above.  I have a hard time believing that any of the speakers would object to this (in particular Eben Moglen, chief counsel for the FSF).  If the music copyright holders don't like it, excise the music (it's not the music we're interested in hearing anyhow) or find more amenably licensed music (perhaps a CC track).<p/>I would have posted this on Chris Blizzard's blog as well, but he turned off comments to his blog.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30</wp:comment_id>
			<wp:comment_author><![CDATA[Greg DeKoenigsberg]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[gdk@redhat.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[66.187.233.202]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2006-06-20 02:54:49]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You're right, JB.<p/>And we're working on figuring out how to do that the right way.  Takes time, since we've got lots of nervous lawyers to appease -- but we'll figure it out.  It's on our plates.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Stateless Linux Cached Client</title>
		<link>https://blogs.gnome.org/markmc/2006/06/08/stateless-linux-cached-client/</link>
		<pubDate>Thu, 08 Jun 2006 05:44:04 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2006/06/08/stateless-linux-cached-client/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
I've posted description to the <a href="http://fedoraproject.org/wiki/">Fedora wiki</a> about how we're implementing the <a href="http://fedoraproject.org/wiki/StatelessLinuxCachedClient">cached client</a> part of Stateless Linux in FC6.
</p>
<p>
Pile onto the <a href="https://www.redhat.com/mailman/listinfo/stateless-list">stateless-list</a> if you want to yak about it.
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>70</wp:post_id>
		<wp:post_date><![CDATA[2006-06-08 05:44:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2006-06-08 05:44:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[stateless-linux-cached-client]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2006/06/08/1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>31</wp:comment_id>
			<wp:comment_author><![CDATA[Will]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.advogato.org/person/wlach</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[65.94.223.137]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2006-06-08 23:23:16]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Is there any reason why the archive of stateless-list is protected? Wouldn't mind checking those out, without the commitment of a subscription..]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32</wp:comment_id>
			<wp:comment_author><![CDATA[Mark McLoughlin]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[83.71.39.78]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2006-06-09 00:00:08]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don't think there's a reason, no. I've poked the list owner about it]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>QCOW Disk Image Format</title>
		<link>https://blogs.gnome.org/markmc/2006/06/21/qcow-disk-image-format/</link>
		<pubDate>Wed, 21 Jun 2006 06:23:12 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2006/06/21/qcow-disk-image-format/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
I wrote up some notes on <a href="http://fabrice.bellard.free.fr/qemu/">QEMU</a>'s <a href="http://www.gnome.org/~markmc/qcow-image-format.html">QCOW image format</a> for anyone who might be interested.
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>71</wp:post_id>
		<wp:post_date><![CDATA[2006-06-21 06:23:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2006-06-21 06:23:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[qcow-disk-image-format]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2006/06/21/0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>33</wp:comment_id>
			<wp:comment_author><![CDATA[Roger Klorese]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[roger@xensouce.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[216.254.57.130]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2006-07-06 08:18:50]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Does QCOW support flushing a snapshot's pages to the underlying image?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34</wp:comment_id>
			<wp:comment_author><![CDATA[Roger Klorese]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[roger@xensouce.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[216.254.57.130]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2006-07-06 08:20:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Duh.  Never mind.  I see the "commit" semantic.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35</wp:comment_id>
			<wp:comment_author><![CDATA[mayank]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[mayank.chopra@einfochips.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.76.128.202]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2006-08-18 16:41:20]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[i want few sample QCOW files .....for parsing!!!<p/>its urgent]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>The Wind That Shakes the Barley</title>
		<link>https://blogs.gnome.org/markmc/2006/08/18/the-wind-that-shakes-the-barley/</link>
		<pubDate>Fri, 18 Aug 2006 03:12:25 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2006/08/18/the-wind-that-shakes-the-barley/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
We went to see <a href="http://en.wikipedia.org/wiki/The_Wind_That_Shakes_the_Barley">The Wind That Shakes the Barley</a> last night. I went along expecting some <a href="http://en.wikipedia.org/wiki/Michael_Collins_%28movie%29">Michael Collins</a> or <a href="http://en.wikipedia.org/wiki/Braveheart">Braveheart</a> romanticised brit-bashing light entertainment, but no.
</p>

<p>
This one wasn't easy to watch. It's set during the <a href="http://en.wikipedia.org/wiki/Irish_War_of_Independence">Irish War of Independence</a> and <a href="http://en.wikipedia.org/wiki/Irish_Civil_War">Irish Civil War</a> which is only now about to drop out of living memory in Ireland. The emphasis isn't so much on the fighting, but on the heartbreaking impact it had on families.
</p>

<p>
I like this comment on the <a href="http://www.imdb.com/title/tt0460989/">IMDb page</a>:
</p>

<blockquote><i>
<p>
I saw this film at a private screening and found it difficult yet beautiful to watch.
</p>
...
<p>
This film is a template for what film makers can achieve with a small budget, dedicated performers and a timeless topic.
</p>
...
<p>
The sacrifices made 80 years ago still resonate today but the Republic of Ireland is now the third richest country in Europe. The question still debated is Was it Worth it? The question we ask is how's Scotland and Wales doing?
</p>
</i></blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>72</wp:post_id>
		<wp:post_date><![CDATA[2006-08-18 03:12:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2006-08-18 03:12:25]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[the-wind-that-shakes-the-barley]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2006/08/18/0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>36</wp:comment_id>
			<wp:comment_author><![CDATA[Calum Benson]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[calum@gnome.org]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/calum</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[192.18.1.4]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2006-08-18 19:17:37]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Well, all things being equal, I know where I'd rather live :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37</wp:comment_id>
			<wp:comment_author><![CDATA[Dave Malcolm]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[dmalcolm@redhat.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[86.143.144.55]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2006-08-18 20:38:33]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I saw this a couple of weeks ago (inflight movie, believe it or not).  Very hard to watch (for this Brit) but gripping at the same time.  <p/>You might like to try "Land and Freedom", also historical movie directed by Loach.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38</wp:comment_id>
			<wp:comment_author><![CDATA[Alan Horkan]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[horkana@maths.tcd.ie]]></wp:comment_author_email>
			<wp:comment_author_url>http://advogato.org/person/AlanHorkan/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[213.202.156.64]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2006-08-18 23:15:13]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very cryptic Calum, maybe it is more obvious to others the true feelings of a Scot living in Dublin.  <p/>Escapist entertainment ("snakes on a plane") is what I go to the cinema for and I only reluctantly go to see political films like the Wind that Shakes the Barley.  As far as I know Ken Loach doesn't do light entertainment, anyone remeber Kes (the boy and his Kestrel)?  Not a film Disney would ever make.  <br/>The film is hard to watch because of the difficult and very real subject matter.  The portrayal of the Black and Tans is harsh but to the best of my knowledge historically accurate, although there was some hint that these more than simply thugs who hated the Irish but men who had survied a brutal World War.  Far more interesting and compelling was the treatment of the Civil War when the Irish turn on the Irish.  The film wasn't big on exposition or putting things in their historical context but it worked well nonetheless.  <br/>Compelling but serious stuff.  <br/>]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Xen and X Pointer Issues</title>
		<link>https://blogs.gnome.org/markmc/2006/09/29/xen-and-x-pointer-issues/</link>
		<pubDate>Fri, 29 Sep 2006 05:46:19 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2006/09/29/xen-and-x-pointer-issues/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
Just back from a nice relaxing holiday and, at first, I was totally perplexed by all this talk of the <a href="http://zaitcev.livejournal.com/91485.html">Xen "absolute pointer" problem</a>. "It's just VNC", I thought, "it can't be that hard. It must be just a simple bug somewhere".
</p>

<p>
The background is:

<ul>
  <li>In Xen guests we have a "xenfb" driver, which acts just like a normal framebuffer device as far as the Xserver is concerned, but the contents of the framebuffer is exported to Dom0 via XenBus and shared memory.</li>

  <li>Similarly, we have a "xenkbd" driver, which takes input events from Dom0 and makes them available to the Xserver.</li>

  <li>In Dom0, we have a little daemon which acts as a VNC server. It exports the framebuffer contents from the guest and injects input events into the guest.</li>
</ul>

</p>
The problem here is that pointer motion events arrive at the Xserver as if they came directly from hardware. And just like normal mouse events, they are relative - i.e. you move your mouse up X amount and across Y amount.
</p>

<p>
This is unusual, because a VNC server receives motion events with absolute co-ordinates and can normally warp the pointer to those exact co-ordinates.
</p>

<p>
What we have might not be too bad - we might be able to reliably control the absolute pointer position in X by injecting events with relative co-ordinates - except that these events are subject to acceleration. If we try and move the pointer by injecting an event that says "move 100 pixels to the right", the Xserver may accelerate that and move it, say, 200 pixels (with a ratio of 2/1). So, <a href="http://zaitcev.livejournal.com/">Pete's</a> first going to come up with a quick hack to disable acceleration.
</p>

<p>
It's still stupid to try and move the pointer to an absolute position by injecting relative pointer motion events, though. The ideal solution is that the pointer device in the Xen guest behaves just like  a grapics tablet. We would pass the absolute pointer co-ordinates to the guest and the driver would pass those on to the Xserver as though it was tablet device.
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>73</wp:post_id>
		<wp:post_date><![CDATA[2006-09-29 05:46:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2006-09-29 05:46:19]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[xen-and-x-pointer-issues]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2006/09/29/0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>39</wp:comment_id>
			<wp:comment_author><![CDATA[Jeremy]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[katzj@redhat.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[66.187.230.198]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2006-09-30 00:26:12]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The problem with doing absolute events (okay, "problem") is that we don't have a good infrastructure for handling absolute events with virtually no configuration -- for relative mice, you can use /dev/input/mice as your device, set the protocol to IMPS/2 and have nothing else to worry about.<p/>To handle absolute event sources, you have to set up a separate pointer for each in the X config and handling of hotplugged devices is poor (nonexistent) as well.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>40</wp:comment_id>
			<wp:comment_author><![CDATA[daniels]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[daniel@fooishbar.org]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.fooishbar.org</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[80.186.141.206]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2006-09-30 00:46:44]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Two things:<br/> a) you can use evdev to send absolute pointer events, but you probably want the input-hotplug branch of xserver, as well as latest git master inputproto/libxi.<br/> b) you should be able to just disable acceleration with xset, but otherwise you need to modify xf86PostMotionEvent in hw/xfree86/common/xf86Events.c.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>41</wp:comment_id>
			<wp:comment_author><![CDATA[Pete Zaitcev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[zaitcev@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://zaitcev.livejournal.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[67.181.30.74]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2006-10-02 06:05:58]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yeah, ``xset m 1/1'' worked like a charm for me. However, there's a question of the initial position, so you have to press the pointer against the VNC window borders a few times before host and guest cursors align. Also, Dan Berrange reported that xset didn't work for him, he still gets a scaled motion for some reason. No, I do not think that he ran xset on the host instead of guest, so it's very mysterious.<br/>]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>GNOME SVN and jhbuild</title>
		<link>https://blogs.gnome.org/markmc/2007/01/02/gnome-svn-and-jhbuild/</link>
		<pubDate>Tue, 02 Jan 2007 07:20:22 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2007/01/02/gnome-svn-and-jhbuild/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
If you're wondering how to move your GNOME <a href="http://www.jamesh.id.au/software/jhbuild">jhbuild</a> from CVS now that the <a href="http://live.gnome.org/SubversionMigration">SVN migration</a> has happened ... here's what I had to do.
</p>

<ul>

  <li>Checkout jhbuild from SVN:

<pre>
  $&gt; mkdir -p /gnome/head/svn &amp;&amp; cd /gnome/head/svn
  $&gt; svn co svn+ssh://markmc@svn.gnome.org/svn/jhbuild/trunk jhbuild
  $&gt; make install
</pre>
   </li>

   <li>Update <tt>~/.jhbuildrc</tt> so that e.g.
<pre>
  repos['svn.gnome.org'] = 'svn+ssh://markmc@svn.gnome.org/svn/'
  checkoutdir = '/gnome/head/svn'
</pre>

   <li>Copy <tt>/gnome/head/cvs/pkgs</tt> to <tt>/gnome/head/svn/pkgs</tt> so that you won't have to download as many new tarballs</li>

   <li>Run <tt>jhbuild build</tt></li>

</ul>

<p>
Note, this is with the <tt>gnome-2.18</tt> moduleset. Things are still a little in flux right now.
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>74</wp:post_id>
		<wp:post_date><![CDATA[2007-01-02 07:20:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2007-01-02 07:20:22]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[gnome-svn-and-jhbuild]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2007/01/02/0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>42</wp:comment_id>
			<wp:comment_author><![CDATA[Marko Anastasov]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[marko@marko.anastasov.name]]></wp:comment_author_email>
			<wp:comment_author_url>http://marko.anastasov.name</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[89.110.201.242]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2007-01-03 09:52:32]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks, that's useful information :) .]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>43</wp:comment_id>
			<wp:comment_author><![CDATA[andre]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ak-47@gmx.net]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/portal/aklapper</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[82.82.165.203]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2007-01-06 07:48:57]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thanks a lot, saves me some time :-)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>QEMU Networking</title>
		<link>https://blogs.gnome.org/markmc/2007/01/09/qemu-networking/</link>
		<pubDate>Tue, 09 Jan 2007 12:07:47 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2007/01/09/qemu-networking/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
<a href="http://fabrice.bellard.free.fr/qemu/">QEMU</a> has a number of really nice ways to set up networking for its guests. It can be a little bewildering to figure out how each of the options work, so I thought I'd <a href="http://www.gnome.org/~markmc/qemu-networking.html">write up what I found</a>. Excuse the 'orrid ascii art :-)
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>75</wp:post_id>
		<wp:post_date><![CDATA[2007-01-09 12:07:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2007-01-09 12:07:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[qemu-networking]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2007/01/09/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Virtual networking</title>
		<link>https://blogs.gnome.org/markmc/2007/01/15/virtual-networking/</link>
		<pubDate>Mon, 15 Jan 2007 20:11:48 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2007/01/15/virtual-networking/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
<a href="http://berrange.com">Dan</a> I have been discussing how to "fix virtual networking", not just Xen's networking but also getting something sane wrt. QEMU/KVM etc.
</p>

<p>
Anyone interested should read <a href="http://www.gnome.org/~markmc/virtual-networking.html">this writeup</a>. To discuss, <a href="https://www.redhat.com/mailman/listinfo/libvir-list">libvirt-list</a> is probably the best place.
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>76</wp:post_id>
		<wp:post_date><![CDATA[2007-01-15 20:11:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2007-01-15 20:11:48]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[virtual-networking]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nb_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[markmc/2007/01/15/0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Dublin Marathon</title>
		<link>https://blogs.gnome.org/markmc/2007/10/30/dublin-marathon/</link>
		<pubDate>Tue, 30 Oct 2007 17:40:35 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2007/10/30/dublin-marathon/</guid>
		<description></description>
		<content:encoded><![CDATA[Thanks to <a href="http://blogs.gnome.org/ovitters/">Olav</a>, I can post here again after nearly 10 months (!). Not that I had anything to say anyway :-P

But for the past couple of months I've been writing about stuff like hiking, running and sailing on <a href="http://bovineboy.wordpress.com">another blog</a> and today's tidbit is that I <a href="http://bovineboy.wordpress.com/2007/10/30/dublin-marathon-2007/">finished my first marathon</a> yesterday.

<p align="center"><a href="http://flickr.com/photos/markmc/1802736019"><img src="http://farm3.static.flickr.com/2155/1802736019_cc6e1cc28d_d.jpg" />
Happy Finisher</a>

Woo!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>77</wp:post_id>
		<wp:post_date><![CDATA[2007-10-30 17:40:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2007-10-30 17:40:35]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[dublin-marathon]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="marathon"><![CDATA[marathon]]></category>
		<category domain="category" nicename="running"><![CDATA[running]]></category>
		<wp:comment>
			<wp:comment_id>44</wp:comment_id>
			<wp:comment_author><![CDATA[Calum]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[calum.benson@sun.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[213.202.163.2]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2007-10-30 18:56:15]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2007-10-30 18:56:15]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Well done.  My father-in-law was running it as well...  we just stood and watched though :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>45</wp:comment_id>
			<wp:comment_author><![CDATA[knipknap]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[a@b.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://debain.org</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[84.160.168.112]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2007-10-30 21:54:09]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2007-10-30 21:54:09]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Congratulations! I also ran my first (ultra)marathon three days ago. If you are anything like me, your ability to walk be be severely restricted in the next couple of days :-).]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>46</wp:comment_id>
			<wp:comment_author><![CDATA[David Bonney]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[forge@clubi.ie]]></wp:comment_author_email>
			<wp:comment_author_url>http://mybestmarathon.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[83.70.46.233]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2007-11-05 09:21:49]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2007-11-05 09:21:49]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mark is your action photo on mybestmarathon.com]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>47</wp:comment_id>
			<wp:comment_author><![CDATA[Rory]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[meehan304@verizon.net]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[71.248.247.4]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2007-11-11 02:40:05]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2007-11-11 02:40:05]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hope you enjoyed the first marathon. First means there will be more. I've run marathons for over 20 years and now ultras. All this is much better than sitting on the couch watching TV.
Rory aka "the Running_man" Meehan]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Fedora 9 Xen pv_ops</title>
		<link>https://blogs.gnome.org/markmc/2008/02/11/fedora-9-xen-pv_ops/</link>
		<pubDate>Mon, 11 Feb 2008 10:15:59 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2008/02/11/fedora-9-xen-pv_ops/</guid>
		<description></description>
		<content:encoded><![CDATA[For the past couple of weeks, I've been helping out with the <a href="http://fedoraproject.org/wiki/Features/XenPvops">Fedora 9 pv_ops effort</a>, specifically helping get the pv_ops based dom0 kernel going.

Well, following on from <a href="http://berrange.com/personal/diary/2008/02/progress-in-fedora-9-xen-pvops-kernel">sct getting dom0</a> booting, I made a nice breakthrough this morning - a pv_ops dom0 booting a pv_ops domU:
<code>
$&gt; dmesg | grep paravirt
Booting paravirtualized kernel on Xen
$&gt; virsh create ./test-domu.xml
Domain Test created from ./test-domu.xml
$&gt; virsh console Test | grep paravirt
Booting paravirtualized kernel on Xen</code>

What's this pv_ops business all about? Well,  as <a href="http://berrange.com/personal/diary/2007/11/plan-for-xen-kernels-in-fedora-9">Dan explained</a>, for a long time we've been forward-porting Xensource's (now 2.6.18 based) kernel tree in an effort to try and have our Xen kernel not lag behind Fedora's bare-metal kernel. Now that the upstream kernel has gained the ability to run on Xen using pv_ops (but only as i386 DomU, currently) we've taken the decision to stop wasting our time forward porting Xensource's tree and put all our focus into improving the feature set of pv_ops based Xen.

pv_ops itself is a set of hooks in the kernel so that support for running on different hypervisors can be cleanly added to the kernel, with the added bonus that the kernel can detect at runtime which hypervisor it is running on and adapt itself accordingly. This means that, in the long run, Xen support should be more akin to a device driver than a huge fork of the kernel.

(Note: for any others who ever to debug Xen's booting of a guest, here's a <a href="http://www.gnome.org/~markmc/code/test-xen-domain-builder.c">tiny Xen domain builder</a>)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>78</wp:post_id>
		<wp:post_date><![CDATA[2008-02-11 10:15:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2008-02-11 10:15:59]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[fedora-9-xen-pv_ops]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="kernel"><![CDATA[kernel]]></category>
		<category domain="category" nicename="pv_ops"><![CDATA[pv_ops]]></category>
		<category domain="category" nicename="xen"><![CDATA[xen]]></category>
	</item>
	<item>
		<title>Git Workflow</title>
		<link>https://blogs.gnome.org/markmc/2008/05/07/git-workflow/</link>
		<pubDate>Wed, 07 May 2008 07:55:02 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2008/05/07/git-workflow/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://log.ometer.com/2008-04.html#29">Havoc's recent post on git</a> was interesting because it shows how frustrating git can be if you try and treat it as "just another CVS". From that perspective, git just seems like it's just some bizarre way for kernel hackers to torture those who <em>just want to get work done</em>.

I turned that corner with git when I learned about "git-rebase -i" and came to the startling realisation that <em>git's history is editable</em>. Basically, this allows you to change your workflow such that you can hack away at will, commit often and then rewrite the history of your hacking session so that you have a coherent set of patches/commits at the end of it with a useful changelog.

e.g. you can go from:
<blockquote>
<pre>A1---B1---A2---A3---C1---B2---C2---C3</pre>
</blockquote>
to:
<blockquote>
<pre>A1---A2---A3---B1---B2---C1---C2---C3</pre>
</blockquote>
or even:
<blockquote>
<pre>A'---B'---C'</pre>
</blockquote>
Using git rebasing, I found that I could use a similar workflow to using <a href="http://savannah.nongnu.org/projects/quilt">quilt</a> with CVS, or mercurial with its <a href="http://www.selenic.com/mercurial/wiki/index.cgi/MqExtension">patch queue (mq) extension</a>. The revision history becomes less about tracking the progress of your work, and more a maleable mechanism for preparing patches before submitting upstream.

<a href="http://www.redhatmagazine.com">Red Hat Magazine</a> has a <a href="http://www.redhatmagazine.com/2008/05/02/shipping-quality-code-with-git/">nice article</a> explaining all this, and I even picked up some new tricks to try out:
<ul>
	<li><tt>git-merge --squash</tt> : merge a branch/tag into the current branch, but squash all the commits together as an uncommitted change to the working tree. When you go to commit the result, the changelog of all the merged commits is available in the commit message editor so you can munge them together into a useful changelog.</li>
	<li><tt>git-cherry-pick --no-commit</tt> : apply the changes from a given commit to your working tree, but do not commit it. Could be used to achieve something similar to a squashed merge, but where you selectively merge only some of the commits.</li>
	<li><tt>git-add --patch/--interactive</tt> : add some changes from the working tree to the index, but e.g. selectively add only some of the patch hunks from a given file. Allows you to make a bunch of changes to a file, but commit the changes as individual commits.</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>79</wp:post_id>
		<wp:post_date><![CDATA[2008-05-07 07:55:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2008-05-07 07:55:02]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[git-workflow]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="git"><![CDATA[git]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>50</wp:comment_id>
			<wp:comment_author><![CDATA[Havoc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[hp@pobox.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[24.147.245.117]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2008-05-07 13:31:25]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2008-05-07 13:31:25]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Maybe not parsing what you're saying, but I don't see how ability to do cool patch massage makes any of the problems in my post go away...  shouldn't these cool features be *in addition* to also working well in the ways I describe in my post? What's wrong with expecting git to also be good at the stuff I'm talking about there?

I have never understood how "oh, but it does this other cool thing" is an answer to "xyz aspect of git kind of blows" ;-)

I do definitely enjoy the ability to do the after-the-fact commit rearrangement.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>51</wp:comment_id>
			<wp:comment_author><![CDATA[markmc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markmc@gnome.org]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[83.71.40.127]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2008-05-07 14:49:04]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2008-05-07 14:49:04]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Clearly, the true answer to “xyz aspect of git kind of blows” is "you're clearly just too stupid to understand how awesome git is" :-)

I was mostly replying to the "ChangeLog workflow is wrong" bit - i.e. the git log should should suffice as a ChangeLog and you can clean up your commits to give a nice log before pushing to the upstream repo.

Don't get me wrong, though - figuring out how to make git slightly less insanely difficult to learn is worth doing, but encouraging a slightly different workflow should be a part of that, IMHO

Some quick comments on the other sections:

  - "no way I'm keeping all my stuff locally" - sounds to me like you want to keep
     your own personal backup repo on a server and push regularily to that, not 
    necessarily push all your work-in-progress stuff upstream. Looking at the
    "git-push" manpage and the "git-remote" manpage, I bet you could set things
    up so you could just do "git-push backup" - e.g.

       [remote "backup"]
           url = ssh://hp@gnome.org/git/foo
           refspec = *

    It'd be cool if this was easier, but the difference with git is that you probably
    don't want to push everything upstream this way, you just want to backup to
    another git repo somewhere.

  - "Deleting a remote branch" ... "surprising syntax" - notting recently found
     that syntax by accident, and we had a fun half hour restoring his branch
     again :-)

  - "--force" and "screwing things up" - I think git-push --force is mainly there
    so that you can push a "rebased" tree ... i.e. because you've rewritten history,
    the head you're pushing isn't an ancestor of the remote head, so it's not a
    fast-forward push.

    The kernel guys are constantly getting into a flap about people using rebase
    too much, e.g. on public trees that a bunch of other people have based their
    work on. I reckon they'll figure out one of these days how to make it so that
    some metadata is retained during rebasing so that rebasing isn't such a
    "break the world event" ... and then --force wouldn't be needed to push a 
    rebased tree.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>52</wp:comment_id>
			<wp:comment_author><![CDATA[Emanuele aina]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[em@nerd.ocracy.org]]></wp:comment_author_email>
			<wp:comment_author_url>http://nerd.ocracy.org/em/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[77.108.39.26]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2008-05-14 20:47:10]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2008-05-14 20:47:10]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[In the monotone/hg/git history model, rebasing is a intrinsically a "break the world event", as it rewrites the history while it should be immutable.

Adding metadata will probably make the whole model a bit messy and a lot less reliable.

Only darcs got this right. The problem with darcs was that it got everything else wrong... :(]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Checksums, Scatter-Gather I/O and Segmentation Offload</title>
		<link>https://blogs.gnome.org/markmc/2008/05/28/checksums-scatter-gather-io-and-segmentation-offload/</link>
		<pubDate>Wed, 28 May 2008 09:09:24 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/2008/05/28/checksums-scatter-gather-io-and-segmentation-offload/</guid>
		<description></description>
		<content:encoded><![CDATA[When dealing with virtualization and networking in the kernel, a number of fairly difficult concepts come up regularly. Last week, while tracking down some bugs with <a href="http://kvm.qumranet.com/">KVM</a> and <a href="http://lwn.net/Articles/239238/">virtio</a> in this area, decided to write up some notes on this stuff.

Thanks to <a href="http://gondor.apana.org.au/~herbert/">Herbert Xu</a> for checking over these.

Also, a good resource I came across while looking into this stuff is <a href="http://vger.kernel.org/~davem/skb_data.html">Dave Miller's How SKBs Work</a>. If you don't know your headroom from your tailroom, that's not a bad place to start.
<h3>Checksumming</h3>
TCP (and other protocols) have a checksum in its header which is a sum of the TCP header, payload and the "pseudo header" consisting of the source and destination addresses, the protocol number and the length of the TCP header and payload.

A TCP checksum is the inverted ones-complement sum of the pseudo header and TCP header and payload, with the checksum field set to zero during the computation.

Some hardware can do this checksum, so the networking stack will pass the packet to the driver without the checksum computed, and the hardware will insert the checksum before transmitting.

Now, with (para-)virtualization, we have a reliable transmission medium between a guest and its host and any other guests, so a PV network driver can claim to do hardware checksumming, but just pass the packet to the host without the checksum. If it ever gets forwarded through a physical device to a physical network, the checksum will be computed at that point.

What we actually do with virtualization is compute a partial checksum of everything except the TCP header and payload, invert that (getting the ones-complement sum again) and store that in the checksum field. We then instruct the other side that in order to compute the complete checksum, it merely needs to sum the contents of the TCP header and payload (without zeroing the checksum field) and invert the result.

This is accomplished in a generic way using the csum_start and csum_offset fields - csum_start denotes the point at which to start summing and csum_offset gives the location at which the result should be stored.
<h3>Scatter-Gather I/O</h3>
If you've ever used readv()/writev(), you know the basic idea here. Rather than passing around one large buffer with a bunch of data, you pass a number of smaller buffers which make up a larger logical buffer. For example, you might have an array of buffer descriptors like:
<pre>    struct iovec {

        size_t iov_len;     /* Number of bytes to transfer */

        void  *iov_base;    /* Starting address */

    };</pre>
In the case of network drivers, (non-linear) data can be scattered across page size fragments:
<pre>    struct skb_frag_struct {

        struct page *page;

        __u32 page_offset;

        __u32 size;

    };</pre>
sk_buff (well, skb_shared_info) is designed to be able to hold a 64k frame in page size[1] fragments (skb_shinfo::nr_frags and skb_shinfo::frags). The NETIF_F_SG feature flag lets the core networking stack know that the driver supports scatter-gather across this paged data.

Note, the skb_shared_info frag_list member is not used for maintaining paged data, but rather it is used for fragmentation purposes. The NETIF_F_FRAGLIST feature flag relates to this.

Another aspect of SG a flag, NETIF_F_HIGHDMA, which specifies whether the driver can handle fragment buffers that were allocated out of high memory.

You can see all these flags in action in dev_queue_xmit() where if any of these conditions are not met, skb_linearize() is called which coalesces any fragments into the skb buffer.

<small>[1] -  These are also known as non-linear skbs, or paged skbs. This what "pskb" stands for in some APIs.</small>
<h3>Segmentation Offload</h3>
TCP Segmentation Offload (TSO). UDP Fragmentation Offload (UFO). Generic Segmentation Offload (GSO). Yeah, that stuff.

TSO is the ability of some network devices to take a frame and break it down to smaller (i.e. MTU) sized frames before transmitting. This is done by breaking the TCP payload into segments and using the same IP header with each of the segments.

GSO is a generalisation of this in the kernel. The idea is that you delay segmenting a packet until the latest possible moment. In the case where a device doesn't support TSO, this would be just before passing the skb to the driver. If the device does support TSO, the unsegmented skb would be passed to the driver.

See dev_hard_start_xmit() for where dev_gso_segment() is used to segment a frame before passing to the driver in the case where the device does not support GSO.

With paravirtualization, the guest driver has the ability to transfer much larger frames to the host, so the need for segmentation can be avoided completely. The reason this is so important is that GSO enables a much larger *effective* MTU between guests themselves and to their host. The ability to transmit such large frames significantly increases throughput.

An skb's skb_shinfo contains information on how the frame should be segmented.

gso_size is the size of the segments which the payload should be broken down into. With TCP, this would usually be the Maximum Segment Size (MSS), which is the MTU minus the size of the TCP/IP header.

gso_segs is the number of segments that should result from segmentation. gso_type indicates e.g. whether the payload is UDP or TCP.

drivers/net/loopback.c:emulate_large_send_offload() provides a nice simple example of the actions a TSO device is expected to perform - i.e. breaking the TCP payload into segments and transmitting each of them as individual frames after updating the IP and TCP headers with the length of the packet, sequence number, flags etc.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>80</wp:post_id>
		<wp:post_date><![CDATA[2008-05-28 09:09:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2008-05-28 09:09:24]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[checksums-scatter-gather-io-and-segmentation-offload]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="kernel"><![CDATA[kernel]]></category>
		<category domain="category" nicename="kvm"><![CDATA[kvm]]></category>
		<category domain="category" nicename="virtio"><![CDATA[virtio]]></category>
		<category domain="category" nicename="virtualization"><![CDATA[virtualization]]></category>
	</item>
	<item>
		<title>Reporting Fedora Virtualization Bugs</title>
		<link>https://blogs.gnome.org/markmc/2009/01/14/reporting-fedora-virtualization-bugs/</link>
		<pubDate>Wed, 14 Jan 2009 20:07:46 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=81</guid>
		<description></description>
		<content:encoded><![CDATA[When reporting bugs against Fedora, the <a href="http://fedoraproject.org/wiki/BugsAndFeatureRequests">BugsAndFeatureRequests</a> wiki page is a great place to get some information on the kind of things you can do to provide useful information in the bug report.

I've just added a page on <a href="https://fedoraproject.org/wiki/Tools/Virtualization/BugReporting">reporting virtualization bugs</a>. Hopefully it'll help people find narrow down bugs, log files, get debug spew etc.

And, of course, it's a wiki page - so go ahead and add your own tips!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>81</wp:post_id>
		<wp:post_date><![CDATA[2009-01-14 20:07:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2009-01-14 20:07:46]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[reporting-fedora-virtualization-bugs]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="fedora"><![CDATA[fedora]]></category>
		<category domain="category" nicename="fedora"><![CDATA[fedora]]></category>
		<category domain="category" nicename="virtualization"><![CDATA[virtualization]]></category>
		<category domain="post_tag" nicename="virtualization"><![CDATA[virtualization]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>56</wp:comment_id>
			<wp:comment_author><![CDATA[Karsten Wade]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[quaid@fedoraproject.org]]></wp:comment_author_email>
			<wp:comment_author_url>http://quaid.id.fedoraproect.org</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[66.187.237.195]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2009-01-16 07:13:18]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2009-01-16 07:13:18]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You may have noticed that I moved the page back to [[Virtualization Quick Start]].  Among other reasons, having a natural language title makes the title searchable and localizable.

https://fedoraproject.org/wiki/Help:Wiki_structure

Unfortunately, MediaWiki doesn't search for strings within CamelCase page names, and doesn't prioritize or organize search by Hierarchies/Pages/Nested.  Searching for 'virtualization bugs' turns up very little that is useful:

https://fedoraproject.org/wiki/Special:Search?search=virtualization+bugs&amp;go=Go

So, you might want to consider taking your wiki gardening effort a step further.  You could  rename pages, such as [[Tools/Virtualization/BugReporting]] to [[Reporting virtualization bugs]].  As long as they have [[Category:Virtualization]], they will appear in the this page:

https://fedoraproject.org/wiki/Category:Virtualization

Categories are the way to nest hierarchies,  Thus, if you put [[Category:Tools]] in the page [[Category:Virtualization]], it makes [[Cat:Virt]] a sub-category of [[Cat:Tools]].]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>57</wp:comment_id>
			<wp:comment_author><![CDATA[markmc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markmc@gnome.org]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[83.71.77.218]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2009-01-16 07:37:36]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2009-01-16 07:37:36]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Karsten: yep, I saw the change you made and posted this:

  http://www.redhat.com/archives/fedora-virt/2009-January/msg00006.html

Sound okay to you, then?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Porting RHEV-M from C# to Java</title>
		<link>https://blogs.gnome.org/markmc/2010/04/12/porting-rhev-m-from-c-to-java/</link>
		<pubDate>Mon, 12 Apr 2010 06:46:49 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=84</guid>
		<description></description>
		<content:encoded><![CDATA[Lately, I've been doing what I can to help finish the massive effort to port RHEV-M from C# to Java. Check out Livnat Peer's <a href="http://lpeer.blogspot.com/2010/04/switching-from-c-to-java.html">blog describing the various approaches considered</a> and how the team settled on using a semi-automatic conversion process.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>84</wp:post_id>
		<wp:post_date><![CDATA[2010-04-12 06:46:49]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2010-04-12 06:46:49]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[porting-rhev-m-from-c-to-java]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>58</wp:comment_id>
			<wp:comment_author><![CDATA[Mark McLoughlin: Porting RHEV-M from C# to Java | TuxWire]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.tuxwire.com/2010/04/12/mark-mcloughlin-porting-rhev-m-from-c-to-java/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[188.241.114.75]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2010-04-12 07:23:34]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2010-04-12 07:23:34]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] See the original post: Mark McLoughlin: Porting RHEV-M from C# to Java [...]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>59</wp:comment_id>
			<wp:comment_author><![CDATA[Gerwin]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[gerwin@digitalus.nl]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.digitalus.nl</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[77.167.39.14]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2010-04-12 07:43:40]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2010-04-12 07:43:40]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great, I already attented some Redhat seminairs abour RHEV (which look awesome) but we still hate the fact that it needs win2003 for managment :)

- Gerwin]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>REST API For RHEV-M</title>
		<link>https://blogs.gnome.org/markmc/2010/06/21/rest-api-for-rhev-m/</link>
		<pubDate>Mon, 21 Jun 2010 21:44:17 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=86</guid>
		<description></description>
		<content:encoded><![CDATA[Today, <a href="http://eoghang.blogspot.com/">Eoghan Glynn</a> and I <a href="https://fedorahosted.org/pipermail/rhevm-api/2010-June/000256.html">announced the first milestone release</a> of a <a href="https://fedorahosted.org/rhevm-api/">REST API for Red Hat Enterprise Virtualization Manager</a>.

The only current API for RHEV-M is a Windows Powershell plugin which provides a perfectly fine scripting interface for RHEV-M on Windows, but isn't so easy to call remotely or to integrate with another application. By adding a REST API, we're adding an integration interface which we hope everyone will find convenient to use.

If you have a 2.2 installation of RHEV-M, it's a quick and painless process to download our distribution, deploy the WAR to an Java EE application server (e.g. JBoss EAP or AS) and play around with our <a href="http://felix.apache.org/site/apache-felix-gogo.html">Apache Felix Karaf</a> based shell. You can also read the <a href="http://markmc.fedorapeople.org/rhevm-api/en-US/html-single/index.html">API reference guide</a> and jump on our <a href="https://fedorahosted.org/mailman/listinfo/rhevm-api">mailing list</a> to give us feedback.

RHEV-M isn't yet an open-source project, so we've had to put a lot of effort into making it possible to develop this REST API in the open. We've concentrated our initial efforts on API design and building a prototype implementation of the API on top of the Powershell interface in 2.2. However, in time for the next release of RHEV-M, our plan is to add a compatible implementation of the API directly to the RHEV-M backend. At that time, the API will be a fully supported part of the product.

If you care about integrating with RHEV-M, now is the time to get involved with	the API project. While the API is already quite well defined, there is buckets of scope for design changes	and adding new features.	And, most of all, we want your help!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>86</wp:post_id>
		<wp:post_date><![CDATA[2010-06-21 21:44:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2010-06-21 21:44:17]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[rest-api-for-rhev-m]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>If Knowledge is Power ...</title>
		<link>https://blogs.gnome.org/markmc/2011/01/16/if-knowledge-is-power/</link>
		<pubDate>Sun, 16 Jan 2011 10:04:16 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=90</guid>
		<description></description>
		<content:encoded><![CDATA[If <a href="http://en.wikipedia.org/wiki/Scientia_potentia_est">knowledge is power</a>, then sharing your knowledge empowers others.

<p style="text-align: center;"><a title="&quot;Illumination&quot; by Mr. Skinner, on Flickr" href="http://www.flickr.com/photos/leogistic/4515906859/"><img class="aligncenter" src="http://farm5.static.flickr.com/4001/4515906859_7820448494.jpg" alt="&quot;Illumination&quot;" width="395" height="500" /></a></p><p style="text-align: center;"><a href="http://www.flickr.com/photos/leogistic/4515906859/">Illumination</a> by <a href="http://www.flickr.com/photos/leogistic/">Mr. Skinner</a></p>

In the open-source world, each of us endeavours to strengthen the communities to which we contribute. There is no better way to strengthen a community than empowering your fellow contributors with your knowledge.

There are no excuses in the open-source world for not sharing your knowledge. Our tools and processes are designed to make this happen naturally.

Having discussions on a mailing list allows other contributors to benefit from the information being shared in the discussion. It also ensures that information is archived for future contributors.

Detailed commit messages ensures that current and future developers can fully understand your reasoning for a given change. Pushing your in-progress work to a public branch allows others to take the work on and finish it, even if you don't have time.

Thinking out loud in bugzilla means that even if your work is not complete on the problem, others can run with your initial ideas or analysis.

Using a public wiki for note taking and giving others access to your jumbled up thoughts, ideas, hints and tips is a great way to open your brain to the world.

A nice side-effect of all this is that if your knowledge is shared openly and archived, you don't need to have such a good memory! :-)

<p style="text-align: center;"><a title="RISE UP &amp; SHARE by alyceobvious, on Flickr" href="http://www.flickr.com/photos/alycesantoro/5264973572/"><img src="http://farm6.static.flickr.com/5049/5264973572_5e0c2eb868.jpg" alt="RISE UP &amp; SHARE" width="386" height="500" /></a></p><p style="text-align: center;"><a href="http://www.flickr.com/photos/alycesantoro/5264973572/">RISE UP & SHARE</a> by <a href="http://www.flickr.com/photos/alycesantoro/">alyceobvious</a></p>

In other contexts, it might be good practice to jealously guard your knowledge. If you're the guy that everyone has to come to because you're the one guy who knows how to do something, that's good for your job security, right? Surely, if you share your knowledge freely, that means anyone can do your job?

This is the exact opposite to what should motivate you as you contribute to a community. You absolutely do want to make it possible for others to come along and kick your ass. If somebody appears out of nowhere and starts doing your job better than you could ever have done, then that is an absolutely awesome outcome!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>90</wp:post_id>
		<wp:post_date><![CDATA[2011-01-16 10:04:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-01-16 10:04:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[if-knowledge-is-power]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>257</wp:comment_id>
			<wp:comment_author><![CDATA[Mathias Teugels]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[mathias@codercpf.be]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[62.235.157.221]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-01-17 09:16:59]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-01-17 09:16:59]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[With all do respect, but I disagree with your conclusion: The drive to share your knowledge shouldn't be so that someone else can start competing with you!

The drive should be more in the sense of someone else might come and help you for a change.

Also, consider the fact why you're the one they're asking questions to. Not just because you know how to fix things, or you have a bit more information than they do. It's because you're interested, have done research, spent time and passion doing what gave you the extra knowledge compared to "competitors" That attitude will always win no matter how hard said competitors try keeping up :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_wp_trash_meta_status]]></wp:meta_key>
				<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>260</wp:comment_id>
			<wp:comment_author><![CDATA[markmc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markmc@gnome.org]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[93.107.99.53]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-01-17 09:51:13]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-01-17 09:51:13]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mathias, thanks for your comment

I totally agree with you. I guess I was trying to say that, in an open-source context, a new contributor is a collaborator rather than a competitor. So, in another context you might be worried about sharing your knowledge because it allows others to take power from you, but in an open-source project you should be delighted if a new contributor uses your knowledge to drive the project forward.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_wp_trash_meta_status]]></wp:meta_key>
				<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>277</wp:comment_id>
			<wp:comment_author><![CDATA[Máirín Duffy]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[duffy@fedoraproject.org]]></wp:comment_author_email>
			<wp:comment_author_url>http://mairin.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[66.187.233.202]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-01-17 16:38:54]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-01-17 16:38:54]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[AMEN!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>278</wp:comment_id>
			<wp:comment_author><![CDATA[markmc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markmc@gnome.org]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[93.107.99.53]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-01-17 17:02:59]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-01-17 17:02:59]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks Máirín! :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>284</wp:comment_id>
			<wp:comment_author><![CDATA[RandomRay]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[neoknight@fastmail.fm]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[108.6.67.237]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-01-18 01:42:44]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-01-18 01:42:44]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA["If somebody appears out of nowhere and starts doing your job better than you could ever have done, then that is an absolutely awesome outcome!"

Only if it encourages you to work harder!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>285</wp:comment_id>
			<wp:comment_author><![CDATA[XHolyPuffX]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[xholypuffx@live.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.youtube.com/xholypuffx</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[96.254.93.34]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-01-18 01:45:20]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-01-18 01:45:20]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I agree with the conclusion. Even though someone else might be getting credit, the point of having technical knowledge is to benefit others, not just yourself. What's the point in discovering something if only you and a select few get to use it?

Having someone else come along and make something better using your knowledge as a base means that you've done the job of a developer. You've developed something big for others to enjoy, even if the person who did it better used your idea.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>290</wp:comment_id>
			<wp:comment_author><![CDATA[ram]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ramesh18.r@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[122.174.164.76]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-01-18 07:54:42]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-01-18 07:54:42]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is more like socialism. Socialism, when carried out in the right sense with the right attitude (selfless), the country can thrive. If open source has to come up, people should become selfless contributors an should not care about wealth, fame, power and superiority - which a majority of humans vie for. 
Like socialism, open source would never die - rather would be practiced by a minor section of people.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Error Handling</title>
		<link>https://blogs.gnome.org/markmc/2011/02/15/error-handling/</link>
		<pubDate>Tue, 15 Feb 2011 13:19:29 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=102</guid>
		<description></description>
		<content:encoded><![CDATA[I came across a fairly typical error handling mistake today and thought I'd share it.

The code was something like this:

<pre>
class Factory {
    static Foo getFoo() {
        try {
            // load a .properties file, read a key from it
            ...
            return new Foo(propValue);
        } catch (Exception ex) {
            log.error("Failed to find key in properties file: " + ex.toString());
            return null;
        }
    }
}
</pre>

and the caller did e.g.

<pre>
    Factory.getFoo().doSomething();
</pre>

The thing to note here is that the caller is assuming that <tt>getFoo()</tt> method never returns <tt>null</tt>.

That's probably a good assumption on the part of the caller. The factory method should always succeed unless there is a programmer error (e.g. the key does not exist in the <tt>.properties</tt> file) or a system error (e.g. an I/O error accessing the file). Neither of which the caller should be expected to handle gracefully. That's what exceptions are for!

In the event of an error, we'd get a <tt>NullPointerException</tt> from the caller site and an error printed to the logfile. If, for example, you are running this code in a debugger, you'll be looking at a <tt>NullPointerException</tt> with no clue as to what caused the exception.

The moral of the story here is to think clearly about when errors should be handled gracefully and when you should just let exceptions be passed back up the stack.

In the end, I added a new exception type:

<pre>
class FactoryException extends RuntimeException {
    
    private static final String ERROR_MSG = "Failed to lookup key {0} in file {1}";

    private String propsFile;
    private String propsKey;

    FactoryException(String propsFile, String key, Throwable cause) {
        super(MessageFormat.format(ERROR_MSG, propsFile, key), cause);
        this.propsFile = propsFile;
        this.propsKey = propsKey;
    }

    String getPropsFile() {
        return propsFile;
    }

    String getPropsKey() {
        return propsKey;
    }
}
</pre>

and then re-factored the original code:

<pre>
class Factory {
    static Foo getFoo() {
        try {
            // load a .properties file, read a key from it
            ...
            return new Foo(propValue);
        } catch (Exception ex) {
            throw new FactoryException(propsFile, propsKey, ex);
        }
    }
}
</pre>

so now if there is an error, rather than getting a fairly useless <tt>NullPointerException</tt> you get:

<pre>
FactoryException: Failed to lookup key foo in file bar.properties
    ...
Caused by: java.io.FileNotFoundException: ...
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>102</wp:post_id>
		<wp:post_date><![CDATA[2011-02-15 13:19:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-02-15 13:19:29]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[error-handling]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>315</wp:comment_id>
			<wp:comment_author><![CDATA[Bob Bobson]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[bob@bobson.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[109.246.94.3]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-02-15 13:33:53]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-02-15 13:33:53]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It's only called refactoring if you change the internals of something without changing the behaviour. The behaviour of your factory method now behaves differently, so this isn't refactoring. It's just 'changing the code'.

Stop trying to get buzz words in if you don't even know what they mean!!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>316</wp:comment_id>
			<wp:comment_author><![CDATA[markmc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markmc@gnome.org]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[89.101.29.197]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-02-15 14:09:50]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-02-15 14:09:50]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for that Bob, I stand corrected

By the way, you're not Bob from 'Bob the Angry Flower' fame by any chance ? :-)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>315</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>317</wp:comment_id>
			<wp:comment_author><![CDATA[Nicolas Trangez]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[eikke@eikke.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://eikke.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[81.165.180.196]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-02-15 14:16:32]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-02-15 14:16:32]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[As an FP adept, I'd say what you actually want is an 'Option' type, as it's called in Scala, or 'Maybe' in Haskell (most FP languages have something similar) and the corresponding Monad instance for easier/nicer coding.

Or a 'safe navigation' operator as found in e.g. Groovy ('?.'), which is related to the Elvis-operator (as found in Groovy as well: '?:' and might have made it into Java7).]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>319</wp:comment_id>
			<wp:comment_author><![CDATA[Simon]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[delgarde@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.14.141.254]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-02-15 20:24:08]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-02-15 20:24:08]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Eh, I've seen worse. Much of the code I deal with day-to-day is much like the first one, but using log.debug instead of log.error. Because hiding major problems from those not running with debugging is just *so* helpful...]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>320</wp:comment_id>
			<wp:comment_author><![CDATA[Simon]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[delgarde@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.14.141.254]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-02-15 20:28:51]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-02-15 20:28:51]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Actually, no - a lot of the code I see would go even further, and load the properties file from a static{} block, leaving the method to just return the looked-up value. Because that way, an exception thrown in the static{} block causes the classloader to choke on it, and subsequent references to the class to result in obscure NoClassDefFoundErrors.

I hate my co-workers some times...]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Our Bizarre Posting Conventions</title>
		<link>https://blogs.gnome.org/markmc/2011/02/17/our-bizarre-posting-conventions/</link>
		<pubDate>Thu, 17 Feb 2011 16:09:56 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=108</guid>
		<description></description>
		<content:encoded><![CDATA[I've been around open source mailing lists for so long now that I tend to forget that our conventions around sending plain text emails, quoting replies, threading, etc. aren't necessarily obvious to everyone out there.

That's especially true for some of the folks working on RHEV-M, many of whom have come from a Windows development background. I eventually realized that saying "just do what everyone else does" wasn't really good enough and spent some time documenting what all those little conventions are.

I've posted <a href="https://fedorahosted.org/rhevm-api/wiki/Email_Guidelines">some guidelines</a> to the rhevm-api wiki. What am I missing?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>108</wp:post_id>
		<wp:post_date><![CDATA[2011-02-17 16:09:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-02-17 16:09:56]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[our-bizarre-posting-conventions]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>333</wp:comment_id>
			<wp:comment_author><![CDATA[jospoortvliet]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jos@opensuse.org]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[201.66.213.31]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-02-17 17:07:51]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-02-17 17:07:51]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[He, good guidelines. I personally like to use the  when you trim mails of excessive quoting in the top or middle of the mail (eg not on the bottom); and I am not too fond of the word wrap. I think ppl should fix their mail client, word wrap doesn't make sense if you have a netbook or a large screen - making it hard to read stuff. Or wasting lots of space. So I say let's stop doing word wrap in FOSS mailing lists, all modern clients can handle unwrapped text much better than wrapped :D


Moreover, you could fix the KMail part (darn awesome client, really, at least compared to Evolution, try it, it even runs on GNOME besides the usual windows/mac OS X/Mobile platforms) by saying "just works fine by default". It switches automatically between HTML and plain text - if you use formatting it goes HTML, if you don't it won't.

Oh and feel free to link here: http://en.opensuse.org/File:Threading.png to show threading more clearly (evo doesn't show tree lines, making it harder to distinguish the actual relationship between mails, it is the main reason I use KMail under GNOME at home. Ok, besides the bad keyboard shortcuts. Fixes are welcome.)

;-)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>334</wp:comment_id>
			<wp:comment_author><![CDATA[markmc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markmc@gnome.org]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[79.97.199.68]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-02-17 17:16:55]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-02-17 17:16:55]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks Jos, I've fixed the KMail section :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>333</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>335</wp:comment_id>
			<wp:comment_author><![CDATA[Adam Williamson]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[awilliam@redhat.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.happyassassin.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[24.85.166.185]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-02-17 17:55:49]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-02-17 17:55:49]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yeah, like Jos I have mixed feelings about word wrap; it seems like something that should be done at the reading end. I still usually use it because it's the convention, but I'm not sure we should be worrying about VT100 terminals any more. =) I always turn it off (Evolution style 'preformatted') if it's screwing with how I actually want to lay something out, or the flow of a patch, or something.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>337</wp:comment_id>
			<wp:comment_author><![CDATA[jospoortvliet]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jos@opensuse.org]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[201.66.213.31]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-02-17 19:32:35]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-02-17 19:32:35]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[aaaand something got missing in my comment - I was talking about using the  to cut out pieces of quotes ;-)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>339</wp:comment_id>
			<wp:comment_author><![CDATA[Tweets that mention Our Bizarre Posting Conventions « Mark McLoughlin -- Topsy.com]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://topsy.com/blogs.gnome.org/markmc/2011/02/17/our-bizarre-posting-conventions/?utm_source=pingback&amp;utm_campaign=L2</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[208.74.66.43]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-02-17 20:35:16]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-02-17 20:35:16]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Silner, Zuissi. Zuissi said: Planet Gnome: Mark McLoughlin: Our Bizarre Posting Conventions: I’ve been around open source mailing lists for s... http://bit.ly/i4UBvj [...]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>342</wp:comment_id>
			<wp:comment_author><![CDATA[Maciej Piechotka]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[uzytkownik2@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://blog.piechotka.com.pl</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[86.2.135.60]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-02-18 02:02:54]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-02-18 02:02:54]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[1. Possibly it would be benefitial to include why the inline/bottom posting is preferred:

&gt; Because it messes up the order in which people normally read text.
&gt;&gt; Why is top-posting such a bad thing?
&gt;&gt;&gt; Top-posting.
&gt;&gt;&gt;&gt; What is the most annoying thing in e-mail?

2. Maybe link to page what is netiquette would be benefitial (say to wikipedia or RFC 1855).

3. Ad VT100 terminals - I guess 80x24 legacy will be long. If anyone uses X as xterm multiplexer he probably will open it with 80x24 or 80xX format. Anyway at least line should be &lt;72 characters OR proper flowing set in header.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>344</wp:comment_id>
			<wp:comment_author><![CDATA[Rob]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[robsta@linux.intel.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[62.47.191.216]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-02-18 06:47:40]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-02-18 06:47:40]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Lots of good stuff but do we still insist on sending 72 char hard wrapped? Meh]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Git Rebasing</title>
		<link>https://blogs.gnome.org/markmc/2011/02/23/git-rebasing/</link>
		<pubDate>Wed, 23 Feb 2011 14:01:31 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=111</guid>
		<description></description>
		<content:encoded><![CDATA[For me, 'git rebase -i' is perhaps git's killer feature. I'm a big fan of small, self-contained commits both for ease of patch review and for the sake of useful commit history later. I used to do this on CVS using quilt but git takes a huge amount of the pain out of it.

Ever since I discovered the feature a few years ago, I've also been vaguely aware of kernel developers advice to people on rebase ... often simplified to <a href="http://twitter.com/dwmw2/status/14387074346000384">OMG no. Never rebase.</a>.

When pushed to elaborate, I guess most would say:

<blockquote>Once you share a commit with someone, never rebase it. They may base their work on your commit and by rebasing it, you're screwing everything up.</blockquote>

One memorable comment from Linus on the subject was <a href="http://lkml.org/lkml/2008/2/12/653">"Have the f*cking back-bone to be able to stand behind what you did!"</a>.

In context, this all makes sense. If a kernel developer sends a pull request and it gets merged into one tree, then rebases and that gets merged into another tree and both get merged into Linus's tree ... then yes, you have a bit of a disaster on your hands.

However, I think the rules above are too simplistic for most git newbies. Such newbies are unlikely to see their trees pulled into the whirling vortex of kernel trees so there's no need to terrify them about using rebase.

My advice is:

<ol>
	<li>If you're learning git, take the time to understand the rebase command and, especially, the interactive option.</li>
	<li>If you're working on a series of patches, it's perfectly fine for you to share that series with others even if it's not finished. That means later rebasing a commit you've shared with others.</li>
	<li>If you're worried people might base their work on a commit you plan to rebase later, then you warn people by putting e.g. "v1", "rebases" or "rebasing" in the repository or branch name.</li>
	<li>If someone does base their work on a commit you have rebased, then point them at the <a href="http://www.kernel.org/pub/software/scm/git/docs/git-rebase.html#_recovering_from_upstream_rebase">Recovering From Upstream Rebase part of git-rebase(1)</a>. It's really not the end of the world, especially in the simpler cases.</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>111</wp:post_id>
		<wp:post_date><![CDATA[2011-02-23 14:01:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-02-23 14:01:31]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[git-rebasing]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>358</wp:comment_id>
			<wp:comment_author><![CDATA[Tom Fennelly]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[tom.fennelly@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[86.40.72.59]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-02-23 14:16:30]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-02-23 14:16:30]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey Mark... funny you post on this very topic... I'm a git newbie (as you know) and I got burned by this only recently (someone else rebasing pushed work).

Seems to me that rebase is totally safe (and incredibly useful) if you haven't already pushed the changes i.e. {commit, commit, commit... rebase -i, push} is totally safe.  

Once pushed into the wild, only ever change that pushed commit history (i.e. rebase) if you're totally sure that commit history has not been pulled anywhere else... but be very very sure :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>359</wp:comment_id>
			<wp:comment_author><![CDATA[Tweets that mention Git Rebasing « Mark McLoughlin -- Topsy.com]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://topsy.com/blogs.gnome.org/markmc/2011/02/23/git-rebasing/?utm_source=pingback&amp;utm_campaign=L2</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[208.74.66.43]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-02-23 14:46:27]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-02-23 14:46:27]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Tom Fennelly and Planet Fedora, Mark McLoughlin. Mark McLoughlin said: New blog post - http://blogs.gnome.org/markmc/2011/02/23/git-rebasing/ (cc @dwmw2) [...]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>361</wp:comment_id>
			<wp:comment_author><![CDATA[markmc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markmc@gnome.org]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[79.97.199.68]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-02-23 15:14:32]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-02-23 15:14:32]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Okay, so a git newbie got screwed by someone rebasing a commit that the newbie had based work on. Not a fun situation, I grant you.

I guess there's a two way responsibility here - before basing your work on someone's branch or repo, you should be confident they're not going to rebase it or that you can easily recover if they do.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>358</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>362</wp:comment_id>
			<wp:comment_author><![CDATA[Philip Van Hoof]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[spam@pvanhoof.be]]></wp:comment_author_email>
			<wp:comment_author_url>http://pvanhoof.be/blog</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[84.192.205.53]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-02-23 19:04:54]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-02-23 19:04:54]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[At Tracker we allow rebasing in feature branches, but of course no rebasing in master. Teams that share a branch usually self-organize. So if such a team wants to screw itself by pushing a rebase, then usually self-organization makes people notify the others about a pending rebase.

The git.gnome.org server doesn't allow rebasing so a rebase means deleting a branch and recreating it of course. We often have feature-name as branch-name and then a feature-name-rebased or feature-name-merge which then is the final version of the branch ready for review and later push to master.

A review of many small commits means that within a commit change-requests by the reviewer sometimes exists. Ie. reviewer says: you have forgotten a free() at line X. So then we commit the free(), and we rebase-i and squash with the commit where the mistake was made. Hurray for rebase-i.

We actually even strongly recommend rebase before merge to master. With all the commits of one feature grouped together this helps us with bisecting. Yet we don't always want very big commits implementing the whole feature. The smaller the commits the easier the review and the easier it is to revert parts of a feature. And to understand the (progression of) changes.

Unfortunate is that the date of a commit changes with the rebasing, though. Ideally it would be easy for the feature-developer to change these dates at for example interactive rebasing mode. Perhaps have a "commit date" and a "authored date". Maybe I'm just insane?

Cheers,

Philip]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>368</wp:comment_id>
			<wp:comment_author><![CDATA[Git Rebasing (cont.) &laquo; Mark McLoughlin]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc/2011/02/26/git-rebasing-cont/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[209.132.180.167]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-02-26 15:25:41]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-02-26 15:25:41]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Mark McLoughlin Just another GNOME Blogs weblog      &laquo; Git Rebasing [...]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Git Rebasing (cont.)</title>
		<link>https://blogs.gnome.org/markmc/2011/02/26/git-rebasing-cont/</link>
		<pubDate>Sat, 26 Feb 2011 15:25:37 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=114</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://blogs.gnome.org/markmc/2011/02/23/git-rebasing/">As I said already</a>, git's interactive rebase tool is seriously useful for preparing a nice, cleanly split up series of patches. And, despite some people's dire warnings, there's no reason not to share an in-progress patch series using git so long as you take care to warn others against relying on your tree not rebasing.

Why would a patch series not be complete? One reason might be that a patch introduces a regression. As they say, you often have to break some eggs to make an omelette but, if you value the power of git's bisection tool, you'll want each individual patch to be regression free.

Okay, say you're porting an application from one database framework to another. You might do a bunch of hacking to demonstrate the concept and then send that work out for comment. Only at this point will you go about figuring out polishing the work off and, finally, cleaning the changes up into a nice patch series.

This approach implies that the work will only stop rebasing quite late in the day. Which leaves a problem - how can you possibly collaborate with others if your tree is rebasing? How can you take patches to fix regressions? How can others help you clean up the series?

Here's one suggestion, based on an approach Stephen Tweedie came up with when we were working together on a series of patches:
<ol>
	<li>Say your branch is called fluffy-piglet. You've pushed it out and asked for comments. Don't rebase this branch again.</li>
	<li>Create another branch called fluffy-piglet-rebasing, basing it initially on fluffy-piglet.</li>
	<li>Tag both branches with e.g. a -v1 suffix, check that the trees in both tags are identical:
<pre>
$> git diff fluffy-piglet fluffy-piglet-rebasing
$> git show -s --format='%t' fluffy-piglet fluffy-piglet-rebasing
</pre>
</li>
	<li>Push the rebasing branch and the v1 tags to your repo.</li>
	<li>If you wish to rebase and do some cleanup work on the patches, do so and tag and push the result to the fluffy-piglet-rebasing branch in your repo as in (3) and (4), but using a new suffix.</li>
	<li>If you receive some patches, pull them into your fluffy-piglet branch, tag the result and rebase the patches onto the rebasing branch e.g.
<pre>
$> git tag fluffy-piglet-v3
$> git rebase --onto fluffy-piglet-rebasing-v2 fluffy-piglet-v2
$> git tag fluffy-piglet-rebasing-v3
</pre>
</li>
	<li>If you wish to rebase unto latest upstream, you could first enable git's "reuse recorded resolution" feature:
<pre>
$> git config --global rerere.enabled true
</pre>
Then you rebase the rebasing branch:
<pre>
$> git checkout fluffy-piglet-rebasing
$> git rebase upstream/master
$> git tag fluffy-piglet-rebasing-v4
</pre>
And then, you merge upstream into the non-rebasing branch:
<pre>
$> git checkout fluffy-piglet
$> git merge upstream/master
$> git tag fluffy-piglet-v4
</pre>

As in (3), you should be able to verify that the two resulting trees are identical.

If any conflicts needed to be resolved during rebasing, there's a good chance that having rerere enabled will mean the conflict will be automatically resolved when merging.</li>
	<li>Finally, if anyone wants to help you with any of the series cleanup work, just 'pass the baton'. You basically say, 'No more rebasing from me after v4, go ahed' and the other person can work away on the rebasing branch until they are ready to pass control back again.</li>
</ol>

This certainly isn't a straightforward workflow, but it gives you:

<ul>
	<li>The ability to work with others since folks have a non-rebasing branch to work against</li>
	<li>The ability to clean up a series using rebase while still having confidence that nothing is being screwed up because you have the pair of tags with identical tree contents</li>
	<li>The ability to allow others to help clean up the series too</li>
</ul>

The fact that this workflow is so awkward has its advantages too - it encourages you to clean up the series early and stop rebasing it. This is not a workflow you'd like to use for an extended period of time.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>114</wp:post_id>
		<wp:post_date><![CDATA[2011-02-26 15:25:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-02-26 15:25:37]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[git-rebasing-cont]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Fedora 16 OpenStack Test Day</title>
		<link>https://blogs.gnome.org/markmc/2011/10/20/fedora-16-openstack-test-day/</link>
		<pubDate>Thu, 20 Oct 2011 06:03:22 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=120</guid>
		<description></description>
		<content:encoded><![CDATA[We're holding a test day for <a href="http://fedoraproject.org/wiki/Test_Day:2011-10-20_OpenStack_Test_Day">Fedora 16 OpenStack</a> today on #fedora-test-day.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>120</wp:post_id>
		<wp:post_date><![CDATA[2011-10-20 06:03:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-10-20 06:03:22]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[fedora-16-openstack-test-day]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Gerrit Patch Review From The Command Line</title>
		<link>https://blogs.gnome.org/markmc/2011/09/25/gerrit-patch-review-from-the-command-line/</link>
		<pubDate>Sun, 25 Sep 2011 14:28:07 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=121</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://nova.openstack.org/">OpenStack Nova</a> switched from bzr and launchpad to github and <a href="http://code.google.com/p/gerrit/">gerrit</a> on Friday. While I'm delighted the project is using git now, I've always found the gerrit UI to be a bit of a pain.

On IRC, <a href="http://inaugust.com/~mordred">Monty Taylor</a> mentioned the <a href="https://review.openstack.org/Documentation/cmd-index.html">gerrit command line interface</a> which looked fairly interesting. Sure enough, you can actually review and approve a patch using this without ever touching the web UI. Below is an example of reviewing a <a href="http://glance.openstack.org/">Glance</a> patch, but the same thing would work for Nova.

First, you obviously need to clone the repo:

<pre>
$&gt; git clone git://github.com/openstack/glance.git
$&gt; cd glance
</pre>

To make life a little easier, you can add a host alias to your SSH config:

<pre>
$&gt; cat &gt;&gt; ~/.ssh/config &lt;&lt;EOF
Host review
  Hostname review.openstack.org
  Port 29418
  User markmc
EOF
</pre>

Then add the gerrit server as a git remote:

<pre>
$&gt; git remote add -f gerrit ssh://markmc@review/openstack/glance.git
</pre>

Okay, now browse the patches needing review:

<pre>
$&gt; ssh review gerrit query status:open project:openstack/glance | less
</pre>

Once you've picked a patch, take it's Change-Id: and look at its patch sets and reviews:

<pre>
$&gt; ssh review gerrit query status:open project:openstack/glance \
         change:I27bb6b3951422ad32e5e0225765b1056c5b3ffc5 \
         --current-patch-set --all-approvals | less
</pre>

Then, using the 'ref' in the output, you can fetch the patches into your repo and review them:

<pre>
$&gt; git fetch gerrit refs/changes/36/636/2
$&gt; git checkout -b git-authors FETCH_HEAD
</pre>

Once you're ready to submit your review, you can do:

<pre>
$&gt; git checkout master
$&gt; git branch -D git-authors
$&gt; ssh review gerrit review --code-review +1 -m "'Looks good to me.'" cd9b3a0f2fb91d0d01606ef4bbd90cf8f29267da
</pre>

That's all pretty neat, but I'm missing how to go about doing a detailed review with comments inline with quoted sections of code. Perhaps if 'gerrit review' could take the review comments over stdin?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>121</wp:post_id>
		<wp:post_date><![CDATA[2011-09-25 14:28:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-09-25 14:28:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[gerrit-patch-review-from-the-command-line]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ancient History</title>
		<link>https://blogs.gnome.org/markmc/2012/07/27/ancient-history/</link>
		<pubDate>Fri, 27 Jul 2012 11:54:02 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=137</guid>
		<description></description>
		<content:encoded><![CDATA[In OpenStack, we have a particular problem where much of the early development on the project was done using bzr and launchpad. All this history is in git, but it can be difficult to find the bzr merge proposal in launchpad which caused a given commit to be merged.

Here's an example of how I did it yesterday.

We're interested in <a href="https://github.com/openstack/nova/commit/8aea573">commit 8aea573</a>:

<pre>
commit 8aea573bd2e44e152fb4ef1627640bab1818dede
Author: Trey Morris ...
Date:   Tue Dec 28 23:55:58 2010 -0600

    initial lock functionality commit
</pre>

To trace back to the merge commit which merged this into master, I did:

<pre>
$&gt; git log --graph --topo-order --ancestry-path --merges 8aea573bd2e44e152fb4ef1627640bab1818dede..HEAD
* commit ae5dbe2b5d4871d3e26e859c03feab705c9c59ea
  Merge: 9eca4d5 76e3923
  Author: Trey Morris ...
  Date:   Fri Jan 7 00:49:30 2011 +0000
  
      This branch implements lock functionality. The lock is stored in the compute worker database. Decorators have been added to the opens
  
* commit f9c33f4ba09e02f8668bdd655b7acba15984838c
  Merge: ba245da 9eca4d5
  Author: Trey Morris ...
  Date:   Thu Jan 6 16:35:48 2011 -0600
  
      merged trunk
  
* commit f09d1ce4d38f3a8ef72566e95cde38f1dc1b8bed
  Merge: 9b9b5fe 9a84a2b
  Author: Trey Morris ...
  Date:   Wed Dec 29 15:13:24 2010 -0600
  
      fixed merge conflict with trunk
</pre>

Double check that by looking at exactly what was merged in:

<pre>
$&gt; git diff 9eca4d5..ae5dbe2
diff --git a/nova/api/openstack/servers.py b/nova/api/openstack/servers.py
index ce64ac7..f8d5e76 100644
--- a/nova/api/openstack/servers.py
+++ b/nova/api/openstack/servers.py
@@ -170,6 +170,50 @@ class Controller(wsgi.Controller):
             return faults.Fault(exc.HTTPUnprocessableEntity())
         return exc.HTTPAccepted()
 
+    def lock(self, req, id):
...
</pre>

That's the one!

Now how to find the merge proposal? Simply googling for "This branch implements lock functionality" quickly lead me to the <a href="https://code.launchpad.net/~tr3buchet/nova/lock/+merge/44874">correct merge prop</a>, but better ideas welcome :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>137</wp:post_id>
		<wp:post_date><![CDATA[2012-07-27 11:54:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-07-27 11:54:02]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ancient-history]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="git"><![CDATA[git]]></category>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>376</wp:comment_id>
			<wp:comment_author><![CDATA[OpenStack Community Weekly Newsletter (July 20-27) &raquo; The OpenStack Blog]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.openstack.org/blog/2012/07/openstack-community-weekly-newsletter-july-20-27/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[174.143.11.196]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-07-27 22:34:12]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-07-27 22:34:12]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Mark McLoughlin: How find the bzr merge proposal in launchpad which caused a given commit to be [...]

[WORDPRESS HASHCASH] The comment's server IP (174.143.11.196) doesn't match the comment's URL host IP (50.56.129.2) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1343741452.6754";s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Nova DB Poking</title>
		<link>https://blogs.gnome.org/markmc/2012/07/31/nova-db-poking/</link>
		<pubDate>Tue, 31 Jul 2012 13:37:44 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=142</guid>
		<description></description>
		<content:encoded><![CDATA[So, you want to play with some sqlalchemy queries against the Nova DB in an interactive python console?

<pre>
$&gt; sudo nova-manage shell python
...
&gt;&gt;&gt; from nova.db.sqlalchemy import api
&gt;&gt;&gt; from nova.db.sqlalchemy import models
&gt;&gt;&gt; from nova import context
&gt;&gt;&gt; ctxt = context.get_admin_context()
&gt;&gt;&gt; vars(api.model_query(ctxt, models.Service).all()[0])
{'binary': u'nova-compute', ..., 'topic': u'compute', 'host': u'f16', 'disabled': False, 'deleted_at': None, 'id': 1L}
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>142</wp:post_id>
		<wp:post_date><![CDATA[2012-07-31 13:37:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-07-31 13:37:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nova-db-poking]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>381</wp:comment_id>
			<wp:comment_author><![CDATA[OpenStack Community Weekly Newsletter (July 27-Aug 3) &raquo; The OpenStack Blog]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.openstack.org/blog/2012/08/openstack-community-weekly-newsletter-july-27-aug-3/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[174.143.11.196]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-08-05 16:26:26]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-08-05 16:26:26]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] By Mark McLoughlin: Nova DB Poking [...]

[WORDPRESS HASHCASH] The comment's server IP (174.143.11.196) doesn't match the comment's URL host IP (50.56.129.2) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345455238.7656";s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>My OpenStack Foundation Board Candidacy</title>
		<link>https://blogs.gnome.org/markmc/2012/08/20/my-openstack-foundation-board-candidacy/</link>
		<pubDate>Mon, 20 Aug 2012 09:45:03 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=145</guid>
		<description></description>
		<content:encoded><![CDATA[The OpenStack Foundation Board election has begun with <a href="http://www.openstack.org/election/2012-board-election/candidates/">39 excellent candidates</a> for only 8 seats!

Each candidate was asked to answer a number of questions to give an insight into why they are running for the Board. My answers are below.

If you'd like to know some more about my involvement in OpenStack, Rackspace recently posted <a href="www.rackspace.com/blog/how-i-contribute-to-openstack-red-hats-mark-mcloughlin/">a nice interview with me</a> as part of their "How I Contribute To OpenStack" series.

<strong>What is your relationship to OpenStack, and why is its success important to you and/or your company? What would you say is your biggest contribution to OpenStack's success to date?
</strong>

I've been involved with OpenStack for just over a year now. I started out packaging OpenStack for Fedora, but have concentrated mostly on contributing to the core projects in various ways since then.

I'm a member of the nova-core team and spend quite a bit of time reviewing proposed changes in gerrit. I'm also the openstack-common PTL and have been working to kickstart this effort to create a shared library for all OpenStack projects. My role as PTL recently means that I'm now a PPB/TC member, but I haven't contributed much there yet. Finally, I co-ordinate the efforts of the stable-maint and release teams to maintain a stable branch for OpenStack's core projects and publish regular bugfix releases.

It's thanks to Red Hat that I have time to make these contributions to the project and I am the technical lead of Red Hat's OpenStack team.

Red Hat's mission statement is all about being a catalyst in communities and, while credit must go to others for initially catalysing the OpenStack community, we recognize the massive strength of OpenStack's diverse community. This strength is the foundation that will ensure that OpenStack continues to grow, continues to improve and will be around for a long time to win. Red Hat is doing everything it can to help make that happen.


<strong>Describe your experience with other non profits or serving as a board member. How does your experience prepare you for the role of a board member?
</strong>
I've been heavily involved in various open-source projects for over a decade now. Observing and pondering the role of non-profit organizations in open-source projects has prepared me well to participate in the OpenStack Foundation and its efforts to determine its own particular role.

Indeed, I participated significantly in the early discussions leading up to the formation of the Foundation and even proposed a <a href="http://wiki.openstack.org/StrawmanFoundationStructure">strawman Foundation structure</a> based on my experiences with other similar organizations.


<strong>What do you see as the Board's role in OpenStack's success?</strong>

More importantly, I think, is the role the Foundation will play in OpenStack's success. I'm a big fan of the Foundation's simple mission statement - to "protect, empower and promote" OpenStack. It perfectly encapsulates the role of the Foundation.

The "protecting" and "promoting" elements of the mission are hugely important, but what I find myself wondering most about is how the Foundation can "empower" the project. The Foundation can certainly use some of its budget to fill gaps in the resources which are available to the project. But, to me, "empowering" the project is mostly about re-inforcing the understanding that the project's future and direction lies in the hand of its meritocractic community of contributors (in the broadest possible sense) and not the Foundation itself.

I think that if the Board delivers on the promise of a Foundation which "protects, empowers and promotes", we will find ourselves in the enviable situation of a project with a large and diverse community of contributors supported by a well-financed organization acting at all times in the interests of that community.


<strong>What do you think the top priority of the Board should be during the OpenStack Foundation's first year?
</strong>
I think it's the transitioning of responsibilities from Rackspace to the Foundation will take much of the focus of the Foundation and the Board in the coming year. The Board will need to appoint an Executive Director and, in turn, oversee the Executive Director's work to transition the likes of community management, release management and event co-ordination to employees of the Foundation. 

A huge part of OpenStack's success to date is that functions such as these have been executed extremely well under Rackspace's management. The transition to a Foundation is a significant challenge in its own right and we cannot afford any missteps here. As part of this transition, I look forward to more open discussion leading up to decisions made by the Foundation.

I also expect the Board to quickly establish the User Committee and Legal Affairs Committee. The User Committee will have a hugely important role to help advocate specific needs of operators and users. The Legal Affairs Committee will be needed to help us make progress on reforming our trademark and contributor agreements.

Finally, the Board will have its work cut out finding its feet as the official voice of OpenStack. The Board will be expected to speak on behalf of us all and, as such, will need to work hard to build and reflect consensus within the project.



]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>145</wp:post_id>
		<wp:post_date><![CDATA[2012-08-20 09:45:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-08-20 09:45:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[my-openstack-foundation-board-candidacy]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>397</wp:comment_id>
			<wp:comment_author><![CDATA[The Data Center Journal VMware and Open Stack]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.datacenterjournal.com/the-daily-buzz/vmware-and-open-stack/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[50.23.18.121]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-10-29 09:15:04]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-10-29 09:15:04]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] VMware has acquired Nicira which has helped build open source projects. Read More About VMwareIn a rather surprising move, VMware has asked to be allowed into the OpenStack Foundation. Consideri...aspects to this move that make it rational. OpenStack is not direct competition to VMware. The [...]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1353173506.8385";s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1351502104.9893";s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Submitting new features to Nova</title>
		<link>https://blogs.gnome.org/markmc/2012/08/20/submitting-new-features-to-nova/</link>
		<pubDate>Mon, 20 Aug 2012 11:27:27 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=148</guid>
		<description></description>
		<content:encoded><![CDATA[I just wrote down a few pieces advice for someone submitting a large feature patch to Nova, so I thought I'd re-post it here:

<ul>
	<li>Think about what it is like to be a nova-core reviewer looking at a list of 40 to 60 reviews and having maybe 2 hours today to do reviews. Think about how to make it more likely that such a reviewer will choose your code to review.</li>
	<li>Small patches are easier to consume. The smaller you make the patch, the more likely it is that it will get reviewed quickly.</li>
	<li>Break your changes into a series of <a href="http://wiki.openstack.org/GitCommitMessages#Structural_split_of_changes">small, self-contained changes</a>.</li>
	<li>The earlier in the release cycle you can begin submitting some of your changes the better. Don't wait until all of your changes are finished before submitting.</li>
	<li> Do as much of your design discussion in the open, preferably on the <a href="http://lists.openstack.org/cgi-bin/mailman/listinfo/openstack-dev">openstack-dev mailing list</a>. If you have discussions on the  phone or IRC, try and post a summary of those discussions to the 
    mailing list.</li>
	<li>Holding a design summit session to discuss your changes in advance is a great idea, but don't assume that everybody who may have an opinion on your changes is present. Also, bear in mind that someone's quick opinion offered at a design summit session may be very different from their considered opinion after reviewing the code in detail.</li>
	<li>Finally, try and participate in the project beyond just making the changes you need. Review other peoples' changes in gerrit and offer your opinions, participate in design discussions on the mailing lists, fix bugs you come across, triage bug reports, etc. etc. All of this will allow other developers to get to know you, trust your judgement and review your changes more quickly. You will also learn more by interacting with other developers.</li>
</ul>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>148</wp:post_id>
		<wp:post_date><![CDATA[2012-08-20 11:27:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-08-20 11:27:27]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[submitting-new-features-to-nova]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>386</wp:comment_id>
			<wp:comment_author><![CDATA[markmc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markmc@gnome.org]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[176.61.52.210]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-08-20 12:45:34]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-08-20 12:45:34]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks Dan, I added your link]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345466734.4151";s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>387</wp:comment_id>
			<wp:comment_author><![CDATA[OpenStack Community Weekly Newsletter (Aug 17-24) &raquo; The OpenStack Blog]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.openstack.org/blog/2012/08/openstack-community-weekly-newsletter-aug-17-24/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[174.143.11.196]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-08-24 23:31:08]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-08-24 23:31:08]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Submitting new features to Nova [...]

[WORDPRESS HASHCASH] The comment's server IP (174.143.11.196) doesn't match the comment's URL host IP (50.56.129.2) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1347644253.2611";s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>385</wp:comment_id>
			<wp:comment_author><![CDATA[Daniel Berrange]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[dan@berrange.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[78.33.99.210]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-08-20 11:54:59]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-08-20 11:54:59]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your point "Break your changes into a series of small, self-contained changes." deserves a much bigger focus - it is perhaps the most important aspect when it comes to getting effective code review. For more info see

http://wiki.openstack.org/GitCommitMessages#Structural_split_of_changes]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345466601.3818";s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345463699.3698";s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Friday is for Yak Shaving</title>
		<link>https://blogs.gnome.org/markmc/2012/09/14/friday-is-for-yak-shaving/</link>
		<pubDate>Fri, 14 Sep 2012 17:53:17 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=154</guid>
		<description></description>
		<content:encoded><![CDATA[My mate <a href="http://goodsquishy.com/">Derek</a> was giving me grief about not testing his OpenStack deployment in our lab at Red Hat. Friday seemed like a good day to give it a shot for a few minutes.

First problem - I'm one of the weird people at Red Hat who eschews the VPN in favour of SSH tunnels. At first, I figured I'd tunnel directly to the various OpenStack API services but that didn't work because the endpoint URLs returned by keystone obviously wouldn't point to my tunnelled connections.

Ok, let's just use a HTTP proxy, that should be fine. But no, not on yak shaving day. For some reason, I was getting 403 Forbidden errors.

To cut a long story short, it turns out:

<ul>
	<li>httplib2 always uses HTTP CONNECT tunneling rather than just sending the requests directly to the proxy</li>
	<li>squid by default and, indeed, our corporate proxy defaults to rejecting CONNECT for ports other than 443</li>
	<li>The recently released httplib2 0.7.5 has a PROXY_TYPE_HTTP_NO_TUNNEL which only uses CONNECT tunnelling for port 443, but it doesn't use this type when you configure your proxy via http_proxy in the environment</li>
</ul>

Not content with shaving the yak once, I shaved her thrice:

<ul>
	<li>An upstream <a href="http://code.google.com/p/httplib2/issues/detail?id=228">patch to use HTTP_NO_TUNNEL</a> when using http_proxy env</li>
	<li>A <a href="https://bugzilla.redhat.com/857514">request</a> to get the patch into Fedora</li>
	<li>A <a href="https://bugs.launchpad.net/python-novaclient/+bug/1051007">patch to work around it</a> in python-novaclient</li>
</ul>

One other troubling conclusion is that if you're exposing the services over HTTPS, you really should use port 443 for everything or clients won't be able to connect over many proxies.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>154</wp:post_id>
		<wp:post_date><![CDATA[2012-09-14 17:53:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-09-14 17:53:17]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[friday-is-for-yak-shaving]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>391</wp:comment_id>
			<wp:comment_author><![CDATA[&raquo; The OpenStack Blog]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.openstack.org/blog/2012/09/3085/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[174.143.11.196]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-09-14 21:36:32]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-09-14 21:36:32]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Mark McCoughlin: Friday is for Yak Shaving (experiences on using openstack-client over ssh [...]

[WORDPRESS HASHCASH] The comment's server IP (174.143.11.196) doesn't match the comment's URL host IP (50.56.129.2) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1353173513.9323";s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>392</wp:comment_id>
			<wp:comment_author><![CDATA[Michael]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[misc@zarb.org]]></wp:comment_author_email>
			<wp:comment_author_url>https://blog.misc.ephaone.org</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[90.84.233.103]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-09-14 21:50:48]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-09-14 21:50:48]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Any reason to prefer using a ssh tunnel instead of a vpn ?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1347659448.3963";s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1353173479.6082";s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Who Wrote Folsom</title>
		<link>https://blogs.gnome.org/markmc/2012/09/28/who-wrote-folsom/</link>
		<pubDate>Fri, 28 Sep 2012 07:19:51 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=157</guid>
		<description></description>
		<content:encoded><![CDATA[As <a href="https://lists.launchpad.net/openstack/msg09650.html">I did for Essex</a>, I've used <a href="http://lwn.net/Articles/290957/">Jonathan Corbet's gitdm</a> to do some analysis of the commits to the core projects during Folsom.

Here's the top 20 committers across Nova, Glance, Swift, Keystone, Horizon, Quantum and Cinder:

<code>
Processed 3110 csets from 291 developers
132 employers found
A total of 350046 lines added, 275491 removed (delta 74555)

Developers with the most changesets
Russell Bryant 160 (5.1%)
Brian Waldon 160 (5.1%)
Dan Prince 154 (5.0%)
Gabriel Hurley 124 (4.0%)
Mark McLoughlin 118 (3.8%)
Johannes Erdfelt 113 (3.6%)
Vishvananda Ishaya 92 (3.0%)
Joe Gordon 85 (2.7%)
Michael Still 71 (2.3%)
Eoghan Glynn 70 (2.3%)
Rick Harris 59 (1.9%)
Gary Kotton 58 (1.9%)
Dolph Mathews 55 (1.8%)
Yun Mao 50 (1.6%)
John Griffith 45 (1.4%)
Daniel P. Berrange 45 (1.4%)
Dan Wendlandt 43 (1.4%)
gholt 40 (1.3%)
Rongze Zhu 39 (1.3%)
Alex Meade 39 (1.3%)
Covers 52.090032% of changesets
</code>

Congrats and thanks to everyone involved in this release!

There are <a href="https://github.com/markmc/openstack-gitdm/tree/results/folsom">more raw stats here</a> showing stats for each project individually and also statistics for gerrit reviewers and launchpad bug fixers.

Of course, this is nowhere near as polished as <a href="http://bitergia.com/public/reports/openstack/2012_09_folsom/">Bitergia's awesome report</a> with pretty graphs and detailed analysis.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>157</wp:post_id>
		<wp:post_date><![CDATA[2012-09-28 07:19:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-09-28 07:19:51]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[who-wrote-folsom]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Future of Incubation and Core</title>
		<link>https://blogs.gnome.org/markmc/2012/11/17/the-future-of-incubation-and-core/</link>
		<pubDate>Sat, 17 Nov 2012 17:53:43 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=161</guid>
		<description></description>
		<content:encoded><![CDATA[The <a href="http://www.openstack.org/foundation/technical-committee/">OpenStack Technical Committee</a> and the <a href="http://www.openstack.org/foundation/board-of-directors/">OpenStack Foundation Board of Directors</a> have pretty separate sets of responsibilities and can get on with their work independently. One exception to that is the inclusion of new projects in OpenStack.

In the coming weeks, members of the two bodies will decide how to clarify confusion around the term "core project" and what exactly happens projects who graduate through OpenStack's Incubation process.

A <a href="http://lists.openstack.org/pipermail/openstack-dev/2012-November/thread.html#2387">thread on the openstack-dev mailing list</a> is ongoing and is a great example of how a mailing list discussion can actually help to drive a rough consensus while still giving everyone an opportunity to express their views.

The TC is attempting to agree on a rough direction that represents the views of the TC before meeting with the Foundation Board. There are currently three distinct views. Firstly, <a href="http://lists.openstack.org/pipermail/openstack-dev/2012-November/002771.html">this</a>:

<blockquote>
The concepts of "what is core" and "what is in OpenStack" have been conflated until now. The TC cares far more about the process for new projects to be included in the coordinated release than it cares about which projects are required to be used by providers in order to access the trademark.

We would like to take an inclusive but measured approach to accepting new OpenStack projects. We should evaluate any given proposed project on a well defined set of criteria like whether it embraces our values and processes, is useful to OpenStack users, well integrated with other projects and represents a sensible broadening of the scope of OpenStack.

We see Incubation as a trial period where promising projects have the opportunity to demonstrate their suitability for inclusion in our coordinated releases.

We see the term "Core OpenStack Project" in section 4.1.b of the bylaws as being solely related to trademark guidelines. The Foundation should simply maintain a list of projects required for trademark usage. We would be happy for that list to be called "Core Projects" or for a new name to be chosen to describe that list.
</blockquote>

Secondly, <a href="http://lists.openstack.org/pipermail/openstack-dev/2012-November/002956.html">Anne Gentle's variation</a> which I'd summarize as allowing two groups of projects be accepted into OpenStack - "nuclear" projects which are the current group of "core" service projects and "core" projects which are everything else, for example Horizon, Ceilometer or Heat.

Thirdly, <a href="http://lists.openstack.org/pipermail/openstack-dev/2012-November/002954.html">John Dickinson's variation</a> which I'd summarize as only accepting projects into OpenStack which "solve IaaS problems" or support those projects in some way.

The way I'm thinking of these three approaches is how we want the project to treat proposals for new projects: "inclusive", "inclusive but two-tier" or "exclusive".]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>161</wp:post_id>
		<wp:post_date><![CDATA[2012-11-17 17:53:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-11-17 17:53:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[the-future-of-incubation-and-core]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>398</wp:comment_id>
			<wp:comment_author><![CDATA[OpenStack Community Weekly Newsletter (Nov 16-30) &raquo; The OpenStack Blog]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.openstack.org/blog/2012/11/openstack-community-weekly-newsletter-nov-16-30/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[174.143.11.196]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-11-30 15:49:28]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-11-30 15:49:28]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] The Future of Incubation and Core [...]

[WORDPRESS HASHCASH] The comment's server IP (174.143.11.196) doesn't match the comment's URL host IP (174.143.194.225) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1355311894.3825";s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Call for testing : 2012.2.1 tarballs</title>
		<link>https://blogs.gnome.org/markmc/2012/11/20/call-for-testing-2012-2-1-tarballs/</link>
		<pubDate>Tue, 20 Nov 2012 21:56:07 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=167</guid>
		<description></description>
		<content:encoded><![CDATA[We're hoping to publish Nova, Glance, Keystone, Quantum, Cinder and Horizon 2012.2.1 next week (Nov 29).

The list of issues fixed so far can be seen here:

<ul>
	<li><a href="https://launchpad.net/nova/+milestone/2012.2.1">https://launchpad.net/nova/+milestone/2012.2.1</a></li>
	<li><a href="https://launchpad.net/glance/+milestone/2012.2.1">https://launchpad.net/glance/+milestone/2012.2.1</a></li>
	<li><a href="https://launchpad.net/keystone/+milestone/2012.2.1">https://launchpad.net/keystone/+milestone/2012.2.1</a></li>
	<li><a href="https://launchpad.net/quantum/+milestone/2012.2.1">https://launchpad.net/quantum/+milestone/2012.2.1</a></li>
	<li><a href="https://launchpad.net/cinder/+milestone/2012.2.1">https://launchpad.net/cinder/+milestone/2012.2.1</a></li>
	<li><a href="https://launchpad.net/horizon/+milestone/2012.2.1">https://launchpad.net/horizon/+milestone/2012.2.1</a></li>
</ul>

That's roughly 80 bugs.

We'd appreciate anyone who could give the candidate tarballs a whirl:

<ul>
<li><a href="http://tarballs.openstack.org/nova/nova-stable-folsom.tar.gz">http://tarballs.openstack.org/nova/nova-stable-folsom.tar.gz</a></li>
<li><a href="http://tarballs.openstack.org/glance/glance-stable-folsom.tar.gz">http://tarballs.openstack.org/glance/glance-stable-folsom.tar.gz</a></li>
<li><a href="http://tarballs.openstack.org/keystone/keystone-stable-folsom.tar.gz">http://tarballs.openstack.org/keystone/keystone-stable-folsom.tar.gz</a></li>
<li><a href="http://tarballs.openstack.org/quantum/quantum-stable-folsom.tar.gz">http://tarballs.openstack.org/quantum/quantum-stable-folsom.tar.gz</a></li>
<li><a href="http://tarballs.openstack.org/cinder/cinder-stable-folsom.tar.gz">http://tarballs.openstack.org/cinder/cinder-stable-folsom.tar.gz</a></li>
<li><a href="http://tarballs.openstack.org/horizon/horizon-stable-folsom.tar.gz">http://tarballs.openstack.org/horizon/horizon-stable-folsom.tar.gz</a></li>
</ul>

We've also started drafting release notes <a href="http://wiki.openstack.org/ReleaseNotes/2012.2.1">here</a>. Contributions to those release notes are very welcome.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>167</wp:post_id>
		<wp:post_date><![CDATA[2012-11-20 21:56:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-11-20 21:56:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[call-for-testing-2012-2-1-tarballs]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cfg and argparse sub-commands</title>
		<link>https://blogs.gnome.org/markmc/2012/11/26/cfg-and-argparse-sub-commands/</link>
		<pubDate>Mon, 26 Nov 2012 16:03:54 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=170</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="https://launchpad.net/~laurence-miao">Laurence Miao</a> did some great work recently to <a href="https://blueprints.launchpad.net/oslo/+spec/cfg-argparse">port cfg from optparse to argparse</a>.

The only significant API impact was that we could no longer have <tt>CONF()</tt> return unparsed command line arguments.

We chose to offer two alternatives - firstly, support for positional arguments:

<blockquote>
&gt;&gt;&gt; CONF.register_cli_opt(MultiStrOpt('bar', positional=True))
True                                                                                                      &gt;&gt;&gt; CONF(['a', 'b'])
&gt;&gt;&gt; CONF.bar             
['a', 'b']
</blockquote>

and, secondly, integration with <a href="http://docs.python.org/dev/library/argparse.html#sub-commands">argparse's sub-commands</a>:

<blockquote>
&gt;&gt;&gt; def add_parsers(subparsers):
...     list_action = subparsers.add_parser('list')
...     list_action.add_argument('id')
...
&gt;&gt;&gt; CONF.register_cli_opt(SubCommandOpt('action', handler=add_parsers))
True
&gt;&gt;&gt; CONF(['list', '10'])
&gt;&gt;&gt; CONF.action.name, CONF.action.id
('list', '10')
</blockquote>

After porting the CLIs in <a href="https://review.openstack.org/16881">Nova</a> (nova-manage), <a href="https://review.openstack.org/16900">Glance</a> (glance-control and glance-manage) and <a href="https://review.openstack.org/16899">Keystone</a> (keystone-manage) over to this sub-parsers stuff, it looks like it's going to work out quite nicely.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>170</wp:post_id>
		<wp:post_date><![CDATA[2012-11-26 16:03:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-11-26 16:03:54]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cfg-and-argparse-sub-commands]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[cfg-and-argparse-sub-command]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>402</wp:comment_id>
			<wp:comment_author><![CDATA[Jeff]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jeff.schmitz@shell.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.shell.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[72.37.249.36]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-01-08 14:28:37]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-01-08 14:28:37]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[very cool]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1359671353.889357089996337890625;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1357655317.9605";s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Image Building Service Demo</title>
		<link>https://blogs.gnome.org/markmc/2012/12/12/image-building-service-demo/</link>
		<pubDate>Wed, 12 Dec 2012 11:42:11 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=183</guid>
		<description></description>
		<content:encoded><![CDATA[Martyn Taylor and Steven Hardy have done an awesome job of <a href="http://lists.openstack.org/pipermail/openstack-dev/2012-December/003901.html">demoing an Image Building Service for OpenStack</a>:

http://www.youtube.com/watch?v=MdBM4HA3QUk

I think this has huge potential. Imagine an OpenStack API to which you could send a request for a fresh image build of any OS, request specific packages, software or other content to be included and have that image be uploaded to Glance or Cinder once it's built. The image gets built in the cloud on a Nova instance/VM and the cloud provider bills you for the compute and I/O resources needed to complete the build.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>183</wp:post_id>
		<wp:post_date><![CDATA[2012-12-12 11:42:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-12-12 11:42:11]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[image-building-service-demo]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_bbe4229edc5b1709213a1cb3081ef710]]></wp:meta_key>
			<wp:meta_value><![CDATA[<iframe width="450" height="338" src="http://www.youtube.com/embed/MdBM4HA3QUk?feature=oembed" frameborder="0" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_fae57d000e31f1100bb72b812deced3d]]></wp:meta_key>
			<wp:meta_value><![CDATA[<iframe width="450" height="338" src="http://www.youtube.com/embed/MdBM4HA3QUk?fs=1&feature=oembed" frameborder="0" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_1a1ac8d7798a6f3fbd37135e98000b93]]></wp:meta_key>
			<wp:meta_value><![CDATA[<iframe width="660" height="495" src="http://www.youtube.com/embed/MdBM4HA3QUk?feature=oembed" frameborder="0" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_time_1a1ac8d7798a6f3fbd37135e98000b93]]></wp:meta_key>
			<wp:meta_value><![CDATA[1427418884]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>400</wp:comment_id>
			<wp:comment_author><![CDATA[Tim Bell]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[tim.bell@cern.ch]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[178.250.211.165]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-12-15 11:06:11]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-12-15 11:06:11]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mark. this looks very promising. Worth a blueprint for further discussion around formats etc. and how to make ensure that the API is generic enough for other implementations.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1359671287.0423018932342529296875;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1355569572.0001";s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>399</wp:comment_id>
			<wp:comment_author><![CDATA[OpenStack Community Weekly Newsletter (Nov 30 &#8211; Dic 14) &raquo; The OpenStack Blog]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.openstack.org/blog/2012/12/openstack-community-weekly-newsletter-nov-30-dic-14/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[174.143.11.196]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-12-14 22:25:33]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-12-14 22:25:33]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Image Building Service Demo [...]

[WORDPRESS HASHCASH] The comment's server IP (174.143.11.196) doesn't match the comment's URL host IP (174.143.194.225) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1359671380.44229888916015625;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>First Board Meeting</title>
		<link>https://blogs.gnome.org/markmc/2013/01/31/first-board-meeting/</link>
		<pubDate>Thu, 31 Jan 2013 23:17:24 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=189</guid>
		<description></description>
		<content:encoded><![CDATA[Disclaimer: apparently board members aren't supposed to comment on board meetings until the official minutes have been published (up to 2 weeks after the meeting). However, Jonathan does publish timely summaries of the meetings to bridge that gap. This post isn't intended as an official record of the meeting. Read it as if it was a summary by a non-board-member listening to the public part of the meeting.

I attended my <a href="http://wiki.openstack.org/Governance/Foundation/31Jan2013BoardMeeting">first OpenStack Foundation Board meeting</a> today.

When I was observing the board from the outside (yet not listening in on their calls), I found the meeting minutes a fairly colourless way of following what was going on. I'm going to attempt to write up some thoughts after each meeting, but no promises :-)

The first thing that struck me is that we spend a fair amount of time messing about with the conference call system, taking a roll call, debating proper procedure and the like. My guess is that over the course of the 150 minute call, we spent 30 minutes on this stuff. Still, given that the Foundation is still relatively new and there are 24 board members attending along with some Foundation staff members, it actually wasn't terrible.

Another thing is that I'd say roughly only half of the folks on the call actively contributed to the discussions. I'm curious whether that was because it's difficult to jump into a discussion on such a big call or just that all points were being covered satisfactorily by those contributing. I myself often sit through conference calls without saying a word for the latter reason. Not today, though.

The first meaty item on the agenda was Jonathan giving a nice 30 minute summary of how the Foundation has progressed since it was formed. At one point, Jonathan had too keep going while some hold music played in the background. It was all really positive stuff, nicely putting our achievements into context. I hope the slide deck will be forwarded to the <a href="http://lists.openstack.org/cgi-bin/mailman/listinfo/foundation">foundation mailing list</a>.

Next up was Alice King with a proposed charter for the Legal Affairs Committee (which doesn't have a page on our <a href="http://wiki.openstack.org/Governance/Foundation">governance page</a> - we should fix that). The committee was formed under the bylaws:

<blockquote>
4.15 Legal Affairs Committee. The Legal Affairs Committee shall be an advisory committee to the Board of Directors and shall be comprised of no more than five (5) members. The Board of Directors shall appoint the members of Legal Affairs Committee. The Legal Affairs Committee shall advise the Board of Directors on the management of: (i) compliance with and enforcement of the Trademark Policy, (ii) strategies to promote the efficient intellectual property protection of the OpenStack Project, including without limitation, the resolution of patent and other intellectual property issues and disputes related to the Members’ use of the OpenStack Project, and (iii) all programs that the Board of Directors is considering relating to intellectual property management and protection. 
</blockquote>

but this proposed charter attempted to elaborate that the role of the committee would be as policy advisor in the area of Intellectual Policy. This seemed to catch some board members by surprise (including me) and there were a bunch of really good points like whether a name like "IP Policy Committee" would be more appropriate and that more diversity (including non-laywers) beyond the existing 5 members is needed for such a charter. I'm very happy to see the level of interest in getting this right, because it's hugely important. In the end, we agreed to the charter as propose but without the list of specific projects the committee might undertake. The whole topic will be revisited in more detail at our next meeting.

Next up, I was presenting as a <a href="http://wiki.openstack.org/Governance/Foundation/TechnicalCommittee">Technical Committee</a> representative about the progress of the <a href="http://wiki.openstack.org/Governance/Foundation/IncubationUpdate2013">Incubation and Core Update Committee</a>. More specifically, I was briefing the board on how the TC intends to proceed with the incubation process for Ceilometer and Heat based on our understanding of the TC's existing mandate. This is all covered by <a href="https://docs.google.com/drawings/d/1oLo1ETnRpNSgDj_m7p6o6tF7HHA2a-3XeKa-QLMBcRc/edit">an excellent diagram from Thierry</a> and <a href="https://etherpad.openstack.org/IncubationAndCoreInterimSummary">a wordy etherpad</a>. This seemed to be fairly well received, barring some confusion about whether a vote was required.

At this point, our scheduled time was almost up but we still had two agenda items that really needed covering. Both needed to be discussed in private (for good reasons IMHO), however one of them will be adequetly summarised in the minutes while the other will be open to public discussion very soon.

All in all, I have to say I enjoyed the meeting and look forward to the <a href="http://wiki.openstack.org/Governance/Foundation/12Feb2013BoardMeeting">full day meeting on Feb 12 in San Francisco</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>189</wp:post_id>
		<wp:post_date><![CDATA[2013-01-31 23:17:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-01-31 23:17:24]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[first-board-meeting]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<category domain="category" nicename="openstack-foundation-board-meeting"><![CDATA[openstack-foundation-board-meeting]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>404</wp:comment_id>
			<wp:comment_author><![CDATA[OpenStack Community Weekly Newsletter (Jan 25 &#8211; Feb 1) &raquo; The OpenStack Blog]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.openstack.org/blog/2013/02/openstack-community-weekly-newsletter-jan-25-feb-1/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[174.143.11.196]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-02-01 17:32:11]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-02-01 17:32:11]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Mark McLoughlin&#8217;s notes from his First Board Meeting [...]

[WORDPRESS HASHCASH] The comment's server IP (174.143.11.196) doesn't match the comment's URL host IP (174.143.194.225) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1359753270.910911083221435546875;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>February 12th OpenStack Foundation Board Meeting</title>
		<link>https://blogs.gnome.org/markmc/2013/02/15/february-12th-openstack-foundation-board-meeting/</link>
		<pubDate>Fri, 15 Feb 2013 17:06:47 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=195</guid>
		<description></description>
		<content:encoded><![CDATA[Yesterday was the first in-person meeting of the 2013 Foundation Board. We met at Rackspace's offices in San Francisco at Jim Curry's invitation. The meeting also coincided with the Foundation staff all getting together in-person for the first time. With so many OpenStack people converging on the one place, it was quite funny to randomly run into various people at the Courtyard Marriott around the corner.

The meeting kicked off at 10am after some informal introductions. For me, it was a case of playing a "hey, are you Tristan?"/"No, I'm Sean" guessing game. Monty brought his usual wackiness to the ocassion by handing out beads and wearing a luminous, sparkling orange fedora with bright blue flashing LEDs. It's Mardi Gras time!

<h3>Formalities</h3>

The first item on the agenda was a formal role call. 5 board members couldn't attend and Tim Bell was on the phone. Also attending were Jonathan Bryce and Mark from the Foundation staff. Mark Radcliffe, our outside council, was on the phone.

From that start, it was obvious that it was going to be extremely difficult for those dialled into the meeting to be able to participate effectively. This is definitely something we will continue to struggle with and, as one of the few who had to travel halfway around the world for the meeting, I can certainly sympathise with those on the phone.

As a further formality, Alan Clark reviewed some of the existing board policies:

<ul>
	<li>that observers are allowed at board meetings, except in the case of executive sessions</li>
	<li>that board members wouldn't blog or tweet until after an official summary of the meeting had been posted to the foundation list</li></ul>

There was some discussion about how executive discussions should be handled. How we can describe what the topic of any executive sessions were and perhaps also publicly hold any votes arising from those sessions.

Rob Hirschfeld proposed that our general decision making process should involve first coming to an agreement on the criteria for making the decision and then applying the criteria. The idea was that this process would avoid some circular debates and save time.

<h3>User Committee</h3>

Next up, Ryan Lane presented an update on the progress of the User Committee. He described the mandate of the committee as "fighting for the users". The initial goals of the committee are to define their charter and a set of categories of users. Ryan encouraged the board to review and <a href="https://docs.google.com/document/d/1yD8TfqUik2dt5xo_jMVHMl7tw9oIJnEndLK8YqEToyo/edit">comment on the Google Doc they had prepared</a>.

Much discussion was had about how to gather data about our users. Options included a CRM system, user polls, anonymous usage reporting tools, aggregating statistics to protect the innocent and the like. This is clearly going to be a very hot topic for the committee.

During the discussion, Josh McKenty posted <a href="https://blueprints.launchpad.net/oslo/+spec/opt-in-stats-tracking">a blueprint for how a opt-in tracking system</a> might work.

We also had an interesting debate about the committee should move forward with adding more members to the committee. The committee's own proposal for this was to be democratic and have elections for representatives from different geographies or categories of users. Quite a few board members raised concerns about this approach and asked the committee members to press forward quickly and appoint a diverse set of members with minimal bureaucracy.

Once Ryan had finished, the board expressed their thanks and support for the efforts of the committee. Ryan was asked to stay and observe the board meeting, but Ryan preferred to go and get some "real work" done. That's the spirit!

If you want to follow the progress of the user committee, the best way is to <a href="http://lists.openstack.org/cgi-bin/mailman/listinfo/user-committee">subscribe to user-committee@lists.openstack.org mailing list</a>. Ryan would be happy to share his slide deck if you email him.

<h3>Legal Affairs Committee</h3>

Alice King and Nissa Strottman took the floor and presented the work of the Legal Affairs Committee on the whole area of patents and risk mitigation.

Alice and Nissa first talked the board through some background on patents. They described the "risk landscape" in terms of competing companies suing and counter-suing each other for infringement (Alice had an awesome diagram of <a href="http://www.textually.org/textually/archives/2010/10/06/mobilelawsuits.png">"who's suing who in the mobile industry"</a> which got a good laugh from everyone) but also, perhaps more importantly, the threat of Non Practicing Entities or "patent trolls".

We talked in some detail about the Patent Grant in the Apache License and how it does a lot to mitigate the risks but doesn't completely eliminate them. In particular, it does little to help with the threat of NPEs. An interesting debate followed about various nuances of the Apache License definitions and how they relate to OpenStack.

Alice and Nissa described approaches taken by other communities - e.g. OIN, GPLv3, Open Compute and Eclipse - and also how an additional contributor agreement could be adopted by the project to further help. Brian Stevens talked about how the OIN works and how it isn't strictly limited to Linux. It was noted that many of the larger members of the Foundation are also members of OIN. Eileen Evans described how the adoption of a new contributor agreement would be a massive bureaucratic challenge for some of the larger companies involved in the project.

A point on one of the slides that a more robust patent policy would remove a barrier to OpenStack's adoption triggered some discussion about whether patent risk is in fact hindering OpenStack's adoption. The consensus seemed to be that this wasn't seen as a huge issue and how, in fact, OpenStack is in as good a position as most any other open-source project. While it's important for the Foundation to do due diligence on this matter, it's also important that we don't overstate the actual risk.

Another topic discussed was the question of "defensive publication" of ideas generated by the developer community so that they are properly documented in a way that is accessible to lawyers who wish to demonstrate prior art. Various ideas were suggested about how blueprints could form the basis for such an approach and how to do this without placing the burden on the developers.

It's amusing the way we wind ourselves in knots over these things and generally come to the conclusion that the issues are difficult, but that things are working pretty well as they currently stand.

Finally, with limited time available, we picked up again on some of the discussion from the previous board meeting about the scope, name and makeup of the committee. Some board members seemed fine with how things currently stand while others reiterated the issues previously discussed.

Anyone interested in the legal affairs committee should talk to Alice King about how to get involved. She would be happy to share her slides with those interested.

<h3>Lunch</h3>

At this point, it was time to break for lunch. Most board members stayed for the lunch provided on-site and had productive, informal discussions while eating.

Monty, Nick Barcet and I attended a Technical Committee meeting over IRC while also eating and chatting with the rest of the board. That's multi-taksing! Amazingly every single member of the TC attended the meeting and we voted unamimously to <a href="http://lists.openstack.org/pipermail/openstack-tc/2013-February/000119.html">update the Incubation Process as recommended by the IncUp committee</a>. Such a level of TC consensus is completely unprecedented and took a tonne of work to achieve. Kudos to Thierry for herding the cats on this.

<h3>Financial Report</h3>

Sean Roberts presented a report on the work of the Financial Oversight committee and we discussed the progress on completing the Foundation's first financial audit and the updated financial forecast for the year.

The topic was so uncontroversial (you could even say boring) that we didn't even take much in the way of notes on it. There was unanimous agreement that this is how it should be and we'd be doing something wrong if the topic was "interesting". The board praised the committee and the staff for their dilligence in doing everything to make sure the Foundation's financial affairs were beyond question.

<h3>Transparency</h3>

Josh McKenty was next up presenting <a href="https://etherpad.openstack.org/TransparencyPolicy">his proposal for a Transparency Policy</a> for the board and his wanting volunteers to form a committee to finalize the details.

He described the committee's goal as:

<blockquote>
To improve transparency and foster collaboration between the foundation members and members of the board, technical committee, user committee and other committees. Specifically, to draft statements and prototype systems changes for board review and approval.
</blockquote>

A large part of the discussion was around trying to quantify the problem we'retrying to solve and understanding how we'd achieve closure on it. The board doesn't want to be consumed with this indefinitely, so how will we know when it's simply a case of "you can't please everyone".

We wrapped this up by gathering volunteers for the committee:

<ul>
	<li>Nick Barcet</li>
	<li>Jonathan Bryce</li>
	<li>Alan Clark</li>
	<li>Eileen Evans</li>
	<li>Tristan Goode</li>
	<li>Rob Hirschfeld</li>
	<li>Kyle MacDonald</li>
	<li>Joshua McKenty</li>
	<li>Mark McLoughlin</li>
	<li>Lauren Sell</li>
</ul>

<h3>Director's Report</h3>

Next up, Jonathan provided an awesome update on the Foundation's progress and plans. It's clear an awful lot of time and thought went into this super-helpful and encouraging update.

One of Jonathan's slides showed some mind-blowing statistics detailing the growth of the developer community, user community and ecosystem. The statistics on the number of patches merged every month were really stunning and the board praised the success of the project's infrastructure team in enabling this level of activity.

Jonathan talked to his hiring plan and introduced the latest Foundation employees. We're executing almost to the plan and there are two positions still to fill - another infrastructure engineer and another community manager.

There was a brief discussion of the updated budget. The summary is that slightly more money is both coming in and going out than planned, giving a positive net effect. A motion was passed to approve the new budget.

The discussion moved more to event planning and marketing matters and Lauren Sell filled the board in on a lot of the details in this area.

Planning of the Havana summit was well in hand and it was noted that the choice of venue means that costs will rise more linearly with attendance than previous summits. Lauren discussed the venue selection process for the October 2013 summit which should come to a conclusion soon. Future summits were discussed with general agreement that a two year cycle should be rougly East Coast US, Asia, West Coast US and Europe. Several board members expressed a desire to get started on the selection process for the October 2014 summit since the size of the event means that suitable locations get booked up very far in advance.

Lauren also <a href="http://wiki.openstack.org/Governance/Foundation/Marketing">described her efforts to bring the various marketers at</a> dozens of OpenStack companies together with some of the same principles that drive the collaborative software development process. She has created a <a href="http://lists.openstack.org/cgi-bin/mailman/listinfo/marketing">mailing list</a> which already has almost 100 members and holds a regular phone meeting of the group. The goal is to have all those involved in marketing OpenStack to be highly co-ordinated and "on message".

Finally, Lauren quickly presented an independent study she had just received on OpenStack's marketing impact relative to other open-source projects and industry players. The results of the study were simply stunning and most of us appeared to be struggling to believe them. However, even if the statistics on OpenStack are massively inflated, we're still hugely being successful. Lauren, Mark and Jonathan have already worked with the authors of the report to find any data that could undermine the conclusions and will continue to do so.

Jonathan and Lauren can be contacted directly for the materials they presented to the board.

<h3>Strategy Session</h3>

Jonathan moved on to kick off a strategy session where board members would have an opportunity to put their thinking hats on and brainstorm together. He teed up the discussion by presenting his thesis that OpenStack was building a "platform ecosystem" with huge potential for network effects that would result in OpenStack being the dominant cloud platform in the market place.

We then moved onto having a short exercise where we used sticky-notes to throw out our ideas in three areas - "interoperability", "reference architectures" and "engaging users". Once the ideas had been gathered, we split into breakout groups to discuss ideas for each of those areas.

Rather than trying to capture all of the ideas and action items from the discussions here, it's perhaps easier to call out some highlights:

<ul>
	<li>We're going to explore the use of Tempest as an API compatibility testing tool which can be pointed at an OpenStack instance. The idea is that anyone who wants to license the OpenStack trademark would request a test run which would result in a scorecard. At every release, the board would update the
results required for each OpenStack mark so that obtaining a trademark license simply becomes a matter of fixing any failing tests which are required for the desired mark.</li>
	<li>We're going to explore the definition of reference architecture "flavours" and how these reference architectures could be defined and maintained. The initial idea is that Heat templates could be used as a deployable reference architecture definitions.</li>
	<li>In terms of engaging users, we decided that trystack.org and deployment tracking tools were crucial.</li>
</ul>

<h3>Election Process Committee</h3>

Todd Moore raised the question of whether allowing Foundation staff to run for the Individual Member Director elections was a waste of a board seat since staff members are so involved in the Foundation anyway. The question of potential conflicts of interest was also raised. There was no time to debate this question so the board resolved to reconstitute the Election Process Committee to consider this question and the general question of the eligibility to run and vote for these board seats.

The committee will consist of Todd as chair and the 8 individual board members.

<h3>Evening Event</h3>

We wrapped up at 6pm sharp and headed over to a nearby restaurant with all of the Foundation staff members. Far from simply being a social event, it was incredible to see 30+ focused and committed folks spend over 4 hours going from conversation to conversation about how to continue OpenStack's success into the future. For me personally, those conversations alone were enough to justify the effort it took to get to the meeting.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>195</wp:post_id>
		<wp:post_date><![CDATA[2013-02-15 17:06:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-02-15 17:06:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[february-12th-openstack-foundation-board-meeting]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<category domain="category" nicename="openstack-foundation-board-meeting"><![CDATA[openstack-foundation-board-meeting]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>April 14th OpenStack Foundation Board Meeting</title>
		<link>https://blogs.gnome.org/markmc/2013/05/25/april-14th-openstack-foundation-board-meeting/</link>
		<pubDate>Sat, 25 May 2013 14:44:28 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=203</guid>
		<description></description>
		<content:encoded><![CDATA[On April 14, the day before the OpenStack Summit in Portland began, the OpenStack Foundation Board held an all-day, in-person meeting. Like all of our board meetings, the <a href="https://wiki.openstack.org/wiki/Governance/Foundation/14Apr2013BoardMeeting">agenda</a> was packed solid.

After our meetings, the goal is for Jonathan to post a summary to the mailing list (like <a href="http://lists.openstack.org/pipermail/foundation/2013-February/001364.html">this one</a>) and I try and follow up with a longer blog post with a bit more commentary. For a bunch of reasons, we've let things slide this time, but here's my attempt at a summary anyway. It's been a while since the meeting, so a lot of the details are pretty vague at this point.

One thing I really liked about the meeting was that we had chairs set up so that anyone who wished to attend the meeting and listen were welcome to do so. With so many stackers already in town for the summit, it really was a great opportunity to open the workings of the board to anyone interested.

<h3>Transparency Committee</h3>

The first meaty item on the agenda was an update from Joshua McKenty on the progress of the board's <a href="http://lists.openstack.org/pipermail/foundation/2013-February/001362.html">Transparency Committee</a>.

We began by discussing Nick Barcet's efforts to choose and implement a document management system for the board. OwnCloud, Google Drive, Dropbox and github have all been considered. Google Drive and Dropbox would not be accessible by all board members. It was noted that the Foundation staff will also require a document management system and we might be able to use the same system for both use cases. Conclusion was for Nick and Monty to see if the OpenStack Infrastructure team could host OwnCloud for this purpose.

Next we discussed the transparency policy which Lauren Sell and Mark Radcliffe have been working on. The core concern is how to balance the need for having a culture of transparency and openness with the need for some information (like legal or personnel matters) to be kept confidential. The general approach discussed was having the board's mailing list open, but confidential information would be shared via private documents in a document management system that could be referred to in mailing list posts. The distinction between confidential and embargoed information was discussed and it was agreed that embargoed information should have a disclosure date associated with it.

There was also a brief discussion on the possibility of having a transparency ombudsman. This would be a person trusted by the community with whom complaints related to transparency could be raised. It was felt this could be a duty of a foundation employee, if that individual had already established the reputation for trustworthiness and independence required.

<h3>2013 Individual Director Elections</h3>

Next up, Rob Hirschfeld led a discussion on possible changes to the election process in time for the 2013 Individual Director elections.

We began by discussing how we would go about making any required changes to <a href="https://wiki.openstack.org/wiki/Governance/Foundation/Bylaws">the bylaws</a>. It was recognized that we would need a firm proposal to be made to the board in August so that notice could be given in September of a vote in October in time for the elections in November.

It was also noted that a bylaws change would require a majority vote of the individual members with a voter turnout of 25%. For reference, we had a 28% turnout at the <a href="https://www.bigpulse.com/pollresults?code=2888d7aPUFe5Euveb5kiYNGT">previous election</a>.

We also briefly discussed <a href="https://etherpad.openstack.org/2013-Individual-Elections">the potential objectives</a> for any changes to the elections process but avoided going deep on this because of the limited time available on the agenda.

<h3>Legal Affairs Committee</h3>

Next on the agenda was a discussion (led by me) about the Legal Affairs Committee.

The main concern I raise was the project (or the "Technical Community and Committee", as I called it) needed the support of subject matter experts when dealing with the kind of legal issues regularly encountered by all open-source projects, particularly in the area of copyright and licensing. I proposed Richard Fontana's idea that, rather than depending exclusively on the Legal Affairs Committee or the Foundation's legal counsel for help with such matters, we would create a legal-discuss mailing list where any subject matter experts could contribute to resolving issues raise by the technical community. The idea was that we would also have a FAQ wiki page to document any conclusions reache on the list. There was some discussion about whether opinions expressed on the list could be construed as legal advice and it was agreed to put in place disclaimers to avoid that perception.

(For the record, we've since created <a href="http://lists.openstack.org/cgi-bin/mailman/listinfo/legal-discuss">the legal-discuss mailing list</a> and <a href="https://wiki.openstack.org/wiki/LegalIssuesFAQ">the legal issues FAQ</a>.)

We also discussed whether the description of scope of the Legal Affairs Committee in the bylaws could be improved and whether the strict five member limit in the bylaws was really such a good idea. It was agreed that I would work with Alice King to see if we can address those issues.

(Again for the record, Alice and I had a productive discussion and we put together <a href="https://wiki.openstack.org/wiki/Governance/Foundation/LegalAffairsCommittee">the Legal Affairs Committee wiki page</a> to at least ensure the committee's scope, membership and progress could be properly documented.)

<h3>Gold Member Applications</h3>

Next up, we had presentations from <a href="https://wiki.openstack.org/w/images/4/4a/JuniperGoldApplication.pdf">Juniper</a> and <a href="https://wiki.openstack.org/w/images/9/94/Ericsson_application_openstack.pdf">Ericsson</a> on their applications for Gold Membership. Once the presentations had been completed, we convened an executive session to discuss the applications in private.

During the executive session, the board reviewed each application using the [https://wiki.openstack.org/wiki/Governance/Foundation/PotentialMemberCriteria previously agreed criteria].

Once the executive session was completed, the board reconvened the meeting and carried out the official, public vote on the new member applications. The applications of both Ericsson and Juniper were approved.

As part of the voting process, some directors chose to publicly restate their concerns with the applications that had been discussed during the executive session. One concern raised by Rob Hirschfeld and Joshua McKenty was that, while both applicants shared their plans for increasing their OpenStack engagement, it could be argued that future plans aren't the same as the "demonstrated commitment" talked about in the membership criteria.

Another concern discussed at length was that applicants could provide much more in the way of written detail about how they meet the membership criteria. One take on this was that applicants should be expected to provide a resume of their involvement with, and commitment, to OpenStack. Simon Anderson proposed that we form a membership committee which would mentor applicants and advise them on how to prepare their application.

In total, discussion of these applications and the process for new gold members took up 4 hours of the board's time. While this may seem excessive, it was very apparent that everyone on the board was keen for the Foundation to have gold members that would help drive OpenStack's success. With the addition of Ericsson and Juniper, we now have 16 of the 24 gold member slots filled. As the number of remaining slots shrink, I think we will see the board having higher expectations of applications.

<h3>Programs</h3>

At this point, the board seemed collectively quite drained of energy and the agenda had to be significantly reworked because there wasn't much time remaining.

Monty took the opportunity to briefly discuss an idea he had to introduce the concept of "programs" in addition to our current concept of projects. We would use this to recognize efforts like documentation and CI on equal footing with the integrated projects. Other efforts like Oslo, TripleO and puppet recipes were also mentioned as potential programs.

Rather than go into too detailed discussion on the topic, we generally expressed support for the concept but agreed it needed further discussion.

<h3>Joint Session</h3>

Part of the agenda for the meeting was that members of the Technical Committee were invited to join the meeting for a joint session. Monty and I were obviously already present, but Michael Still and Thierry Carrez also joined. Other TC members had not yet arrived in Portland or weren't fully aware of the joint session. We had some discussion about how to have a joint session with better attendance from both groups and the idea of a joint design summit session at the next summit was mooted.

<h3>User Committee</h3>

Tim Bell stepped up next to give an overview of the results of the User Committee's recently completed survey of OpenStack users.

Tim is presenting these exciting results at the summit, so I won't repeat them here. However, we did have an interesting discussion about how representative the survey was of OpenStack deployments. Tim offered 50-75% as his gut feeling for the percentage of deployments covered but Joshua McKenty reckoned it was probably less than 25%. There was some discussion about future surveys and the potential for an opt-in usage stats tracking tool to increase the percentage of deployments we know about.

<h3>Incubation Update Committee</h3>

Next up, Alan Clark presented the <a href="https://wiki.openstack.org/wiki/Governance/Foundation/IncubationUpdate2013">final report of the Incubation Update Committee</a>.

The board was generally very supportive of the work of the committee, but it was clear further discussion was required on the topic of Core status and the board's trademark usage program. Much discussion was had around the desire for projects like Heat and Ceilometer to be able to adopt official OpenStack project names (like "OpenStack Measurement" for Ceilometer) and whether this was all that would be implied by Core status. However, there is also the question of whether clouds which wish to use the OpenStack brand should be required to use all Core projects or whether a trademark program around more targeted interoperability testing made more sense.

It was agreed that this was an incredibly important and urgent topic but that we had run out of time at this meeting to make progress on it.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>203</wp:post_id>
		<wp:post_date><![CDATA[2013-05-25 14:44:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-05-25 14:44:28]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[april-14th-openstack-foundation-board-meeting]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<category domain="category" nicename="openstack-foundation-board-meeting"><![CDATA[openstack-foundation-board-meeting]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>413</wp:comment_id>
			<wp:comment_author><![CDATA[OpenStack Community Weekly Newsletter (May 24-31) &raquo; The OpenStack Blog]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.openstack.org/blog/2013/05/openstack-community-weekly-newsletter-may-24-31/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[67.192.46.7]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-05-31 15:35:24]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-05-31 15:35:24]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Mark McLoughlin&#8216;s recap of April 14th OpenStack Foundation Board Meeting [...]

[WORDPRESS HASHCASH] The comment's server IP (67.192.46.7) doesn't match the comment's URL host IP (174.143.194.225) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370014688.7060420513153076171875;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>410</wp:comment_id>
			<wp:comment_author><![CDATA[Anne Gentle]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[annegentle@justwriteclick.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.justwriteclick.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[66.69.241.177]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-05-25 14:53:59]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-05-25 14:53:59]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks Mark for posting -- I know this takes some time and wanted you to know it's appreciated.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1369493639.109034061431884765625;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1369493908.2768878936767578125;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>411</wp:comment_id>
			<wp:comment_author><![CDATA[markmc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markbmc@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[87.198.17.165]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-05-25 14:58:42]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-05-25 14:58:42]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks Anne :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>410</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1369493922.841473102569580078125;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>412</wp:comment_id>
			<wp:comment_author><![CDATA[Lloyd Dewolf]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[lloydostack@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://foolswisdom.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[67.160.223.102]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-05-25 15:56:43]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-05-25 15:56:43]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Also greatly appreciate. Thank you Mark.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1369508071.18165111541748046875;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1369497403.0197160243988037109375;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>421</wp:comment_id>
			<wp:comment_author><![CDATA[May 30th OpenStack Foundation Board Meeting &laquo; Mark McLoughlin]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://blogs.gnome.org/markmc/2013/06/05/may-30th-openstack-foundation-board-meeting/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[209.132.180.177]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-05 22:16:45]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-05 22:16:45]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] brief topic was a joy indeed. As had already been discussed on the mailing list, Josh felt that my previous meeting summary breached a policy agreed by the board (before my joining) that directors would make no public [...]

[WORDPRESS HASHCASH] Snoopy failed to fetch results for the comment blog url (https://blogs.gnome.org/markmc/2013/06/05/may-30th-openstack-foundation-board-meeting/) with error '' and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370470605.8105618953704833984375;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370470840.6432149410247802734375;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Async I/O and Python</title>
		<link>https://blogs.gnome.org/markmc/2013/06/04/async-io-and-python/</link>
		<pubDate>Tue, 04 Jun 2013 16:28:03 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=209</guid>
		<description></description>
		<content:encoded><![CDATA[When you're working on OpenStack, you'll probably hear a lot of references to 'async I/O' and how eventlet is the library we use for this in OpenStack.

But, well ... what exactly is this mysterious 'asynchronous I/O' thing?

The first thing to think about is what happens when a process calls a system call like write(). If there's room in the write buffer, then the data gets copied into kernel space and the system call returns immediately.

But if there isn't room in the write buffer, what happens then? The default behaviour is that the kernel will put the process to sleep until there is room available. In the case of sockets and pipes, space in the buffer usually becomes available when the other side reads the data you've sent.

The trouble with this is that we usually would prefer the process to be doing something useful while waiting for space to become available, rather than just sleeping. Maybe this is an API server and there are new connections waiting to be accepted. How can we process those new connections rather than sleeping?

One answer is to use multiple threads or processes - maybe it doesn't matter if a single thread or process is blocked on some I/O if you have lots of other threads or processes doing work in parallel.

But, actually, the most common answer is to use non-blocking I/O operations. The idea is that rather than having the kernel put the process to sleep when no space is available in the write buffer, the kernel should just return a "try again later" error. We then using the select() system call to find out when space has become available and the file is writable again.

Below are a number of examples of how to implement a non-blocking write. For each example, you can run a simple socket server on a remote machine to test against:

<pre>
$&gt; ssh -L 1234:localhost:1234 some.remote.host 'ncat -l 1234 | dd of=/dev/null'
</pre>

The way this works is that the client connects to port 1234 on the local machine, the connection is forwarded over SSH to port 1234 on some.remote.host where ncat reads the input, writes the output over a pipe to dd which, in turn, writes the output to /dev/null. I use dd to give us some information about how much data was received when the connection closes. Using a distant some.remote.host will help illustrate the blocking behaviour because data clearly can't be transferred as quickly as the client can copy it into the kernel.

<h3>Blocking I/O</h3>

To start with, let's look at the example of using straightforward blocking I/O:

<pre>
import socket

sock = socket.socket()
sock.connect(('localhost', 1234))
sock.send('foo\n' * 10 * 1024 * 1024)
</pre>

This is really nice and straightforward, but the point is that this process will spend a tonne of time sleeping while the send() method completes transferring all of the data.

<h3>Non-Blocking I/O</h3>

In order to avoid this blocking behaviour, we can set the socket to non-blocking and use select() to find out when the socket is writable:

<pre>
import errno
import select
import socket

sock = socket.socket()
sock.connect(('localhost', 1234))
sock.setblocking(0)

buf = buffer('foo\n' * 10 * 1024 * 1024)
print "starting"
while len(buf):
    try:
        buf = buf[sock.send(buf):]
    except socket.error, e:
        if e.errno != errno.EAGAIN:
            raise e
        print "blocking with", len(buf), "remaining"
        select.select([], [sock], [])
        print "unblocked"
print "finished"
</pre>

As you can see, when send() returns an EAGAIN error, we call select() and will sleep until the socket is writable. This is a basic example of an event loop. It's obviously a loop, but the "event" part refers to our waiting on the "socket is writable" event.

This example doesn't look terribly useful because we're still spending the same amount of time sleeping but we could in fact be doing useful rather than sleeping in select(). For example, if we had a listening socket, we could also pass it to select() and select() would tell us when a new connection is available. That way we could easily alternate between handling new connections and writing data to our socket.

To prove this "do something useful while we're waiting" idea, how about we add a little busy loop to the I/O loop:

<pre>
        if e.errno != errno.EAGAIN:
            raise e

        i = 0
        while i &lt; 5000000:
            i += 1

        print "blocking with", len(buf), "remaining"
        select.select([], [sock], [], 0)
        print "unblocked"
</pre>

The difference is we've passed a timeout of zero to select() - this means select() never actually block - and any time send() would have blocked, we do a bunch of computation in user-space. If we run this using the 'time' command you'll see something like:

<pre>
$&gt; time python ./test-nonblocking-write.py 
starting
blocking with 8028160 remaining
unblocked
blocking with 5259264 remaining
unblocked
blocking with 4456448 remaining
unblocked
blocking with 3915776 remaining
unblocked
blocking with 3768320 remaining
unblocked
blocking with 3768320 remaining
unblocked
blocking with 3670016 remaining
unblocked
blocking with 3670016 remaining
...
real    0m10.901s
user    0m10.465s
sys     0m0.016s
</pre>

The fact that there's very little difference between the 'real' and 'user' times means we spent very little time sleeping. We can also see that sometimes we get to run the busy loop multiple times while waiting for the socket to become writable.

<h3>Eventlet</h3>

Ok, so how about eventlet? Presumably eventlet makes it a lot easier to implement non-blocking I/O than the above example? Here's what it looks like with eventlet:

<pre>
from eventlet.green import socket

sock = socket.socket()
sock.connect(('localhost', 1234))
sock.send('foo\n' * 10 * 1024 * 1024)
</pre>

Yes, that does look very like the first example. What has happened here is that by creating the socket using eventlet.green.socket.socket() we have put the socket into non-blocking mode and when the write to the socket blocks, eventlet will schedule any other work that might be pending. Hitting Ctrl-C while this
is running is actually pretty instructive:

<pre>
$&gt; python test-eventlet-write.py 
^CTraceback (most recent call last):
  File "test-eventlet-write.py", line 6, in 
    sock.send('foo\n' * 10 * 1024 * 1024)
  File ".../eventlet/greenio.py", line 289, in send
    timeout_exc=socket.timeout("timed out"))
  File ".../eventlet/hubs/__init__.py", line 121, in trampoline
    return hub.switch()
  File ".../eventlet/hubs/hub.py", line 187, in switch
    return self.greenlet.switch()
  File ".../eventlet/hubs/hub.py", line 236, in run
    self.wait(sleep_time)
  File ".../eventlet/hubs/poll.py", line 84, in wait
    presult = self.do_poll(seconds)
  File ".../eventlet/hubs/epolls.py", line 61, in do_poll
    return self.poll.poll(seconds)
KeyboardInterrupt
</pre>

Yes, indeed, there's a whole lot going on behind that innocuous looking send() call. You see mention of a 'hub' which is eventlet's name for an event loop. You also see this trampoline() call which means "put the current code to sleep until the socket is writable". And, there at the very end, we're still sleeping in a call to poll() which is basically the same thing as select().

To show the example of doing some "useful" work rather than sleeping all the time we run a busy loop greenthread:

<pre>
import eventlet
from eventlet.green import socket

def busy_loop():
    while True:
        i = 0
        while i &lt; 5000000:
            i += 1
        print "yielding"
        eventlet.sleep()
eventlet.spawn(busy_loop)

sock = socket.socket()
sock.connect(('localhost', 1234))
sock.send('foo\n' * 10 * 1024 * 1024)
</pre>

Now every time the socket isn't writable, we switch to the busy_loop() greenthread and do some work. Greenthreads must cooperatively yield to one another so we call eventlet.sleep() in busy_loop() to once again poll the socket to see if its writable. Again, if we use the 'time' command to run this:

<pre>
$&gt; time python ./test-eventlet-write.py 
yielding
yielding
yielding
...
real    0m5.386s
user    0m5.081s
sys     0m0.088s
</pre>

you can see we're spending very little time sleeping.

(As an aside, I was going to take a look at gevent, but it doesn't seem fundamentally different from eventlet. Am I wrong?)

<h3>Twisted</h3>

Long, long ago, in times of old, <a href="https://code.launchpad.net/~termie/nova/eventlet_merge/+merge/43383">Nova switched from twisted to eventlet</a> so it makes sense to take a quick look at twisted:

<pre>
from twisted.internet import protocol
from twisted.internet import reactor

class Test(protocol.Protocol):
    def connectionMade(self):
        self.transport.write('foo\n' * 2 * 1024 * 1024)

class TestClientFactory(protocol.ClientFactory):
    def buildProtocol(self, addr):
        return Test()

reactor.connectTCP('localhost', 1234, TestClientFactory())
reactor.run()
</pre>

What complicates the example most is twisted protocol abstraction which we need to use simply to write to the socket. The 'reactor' abstraction is simply twisted's name for an event loop. So, we create a on-blocking socket, block in the event loop (using e.g. select()) until the connection completes and then
write to the socket. The transport.write() call will actually queue a writer in the reactor, return immediately and whenever the socket is writable, the writer will continue its work.

To show how you can run something in parallel, here's how to run some code in a deferred callback:

<pre>
def busy_loop():
    i = 0
    while i &lt; 5000000:
        i += 1
    reactor.callLater(0, busy_loop)

reactor.connectTCP(...)
reactor.callLater(0, busy_loop)
reactor.run()
</pre>

I'm using a timeout of zero here and it shows up a weakness in both twisted and eventlet - we want this busy_loop() code to only run when the socket isn't writeable. In other words, we want the task to have a lower priority than the writer task. In both twisted and eventlet, the timed tasks are run before the
I/O tasks and there is no way to add a task which is only run if there are no runnable I/O tasks.

<h3>GLib</h3>

My introduction to async I/O was back when I was working on GNOME (beginning with GNOME's CORBA ORB, called ORBit) so I can't help comparing the above abstractions to GLib's main loop. Here's some equivalent code:

<pre>
/* build with gcc -g -O0 -Wall $(pkg-config --libs --cflags glib-2.0) test-glib-write.c -o test-glib-write */

#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
#include &lt;unistd.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;netinet/in.h&gt;

#include &lt;glib.h&gt;

GMainLoop    *main_loop = NULL;
static gchar *strv[10 * 1024 * 1024];
static gchar *data = NULL;
int           remaining = -1;

static gboolean
socket_writable(GIOChannel   *source,
                GIOCondition  condition,
                gpointer      user_data)
{
  int fd, sent;

  fd = g_io_channel_unix_get_fd(source);
  do
    {
      sent = write(fd, data, remaining);
      if (sent == -1)
        {
          if (errno != EAGAIN)
            {
              fprintf(stderr, "Write error: %s\n", strerror(errno));
              goto finished;
            }
          return TRUE;
        }

      data = &amp;data[sent];
      remaining -= sent;
    }
  while (sent &gt; 0 &amp;&amp; remaining &gt; 0);

  if (remaining &lt;= 0)
    goto finished;

  return TRUE;

 finished:
  g_main_loop_quit(main_loop);
  return FALSE;
}

static gboolean
busy_loop(gpointer data)
{
  int i = 0;
  while (i &lt; 5000000)
    i += 1;
  return TRUE;
}

int
main(int argc, char **argv)
{
  GIOChannel         *io_channel;
  guint               io_watch;
  int                 fd;
  struct sockaddr_in  addr;
  int                 i;
  gchar              *to_free;

  for (i = 0; i &lt; G_N_ELEMENTS(strv)-1; i++)
    strv[i] = "foo\n";
  strv[G_N_ELEMENTS(strv)-1] = NULL;

  data = to_free = g_strjoinv(NULL, strv);
  remaining = strlen(data);

  fd = socket(AF_INET, SOCK_STREAM, 0);

  memset(&amp;addr, 0, sizeof(struct sockaddr_in));
  addr.sin_family      = AF_INET;
  addr.sin_port        = htons(1234);
  addr.sin_addr.s_addr = htonl(INADDR_LOOPBACK);

  if (connect(fd, (struct sockaddr *)&amp;addr, sizeof(addr)) == -1)
    {
      fprintf(stderr, "Error connecting to server: %s\n", strerror(errno));
      return 1;
    }

  fcntl(fd, F_SETFL, O_NONBLOCK);

  io_channel = g_io_channel_unix_new(fd);
  io_watch = g_io_add_watch(io_channel,
                            G_IO_OUT,
                            (GIOFunc)socket_writable,
                            GINT_TO_POINTER(fd));

  g_idle_add(busy_loop, NULL);

  main_loop = g_main_loop_new(NULL, FALSE);

  g_main_loop_run(main_loop);
  g_main_loop_unref(main_loop);

  g_source_remove(io_watch);
  g_io_channel_unref(io_channel);

  close(fd);

  g_free(to_free);

  return 0;
}
</pre>

Here I create a non-blocking socket, set up an 'I/O watch' to tell me when the socket is writable and, when it is, I keep blasting data into the socket until I get an EAGAIN. This is the point at which write() would block if it was a blocking socket and I return TRUE from the callback to say "call me again when the socket is writable". Only when I've finished writing all of the data do I return FALSE and quit the main loop causing the g_main_loop_run() call to return.

The point about task priorities is illustrated nicely here. GLib does have the concept of priorities and has a "idle callback" facility you can use to run some code when no higher priority task is waiting to run. In this case, the busy_loop() function will *only* run when the socket is not writable.

<h3>Tulip</h3>

There's a lot of talk lately about <a href="http://www.python.org/dev/peps/pep-3156/">Guido's Asynchronous IO Support Rebooted (PEP3156)</a> efforts so, of course, we've got to have a look at that.

One interesting aspect of this effort is that it aims to support both the coroutine and callbacks style programming models. We'll try out both models below.

Tulip, of course, has an event loop, time-based callbacks, I/O callbacks and I/O helper functions. We can build a simple variant of our non-blocking I/O example above using tulip's event loop and I/O callback:

<pre>
import errno
import select
import socket

import tulip

sock = socket.socket()
sock.connect(('localhost', 1234))
sock.setblocking(0)

buf = memoryview(str.encode('foo\n' * 2 * 1024 * 1024))
def do_write():
    global buf
    while True:
        try:
            buf = buf[sock.send(buf):]
        except socket.error as e:
            if e.errno != errno.EAGAIN:
                raise e
            return

def busy_loop():
    i = 0
    while i &lt; 5000000:
        i += 1
    event_loop.call_soon(busy_loop)

event_loop = tulip.get_event_loop()
event_loop.add_writer(sock, do_write)
event_loop.call_soon(busy_loop)
event_loop.run_forever()
</pre>

We can go a step further and use tulip's Protocol abstraction and connection helper:

<pre>
import errno
import select
import socket

import tulip

class Protocol(tulip.Protocol):

    buf = b'foo\n' * 10 * 1024 * 1024

    def connection_made(self, transport):
        event_loop.call_soon(busy_loop)
        transport.write(self.buf)
        transport.close()

    def connection_lost(self, exc):
        event_loop.stop()
 
def busy_loop():
    i = 0
    while i &lt; 5000000:
        i += 1
    event_loop.call_soon(busy_loop)

event_loop = tulip.get_event_loop()
tulip.Task(event_loop.create_connection(Protocol, &#039;localhost&#039;, 1234))
event_loop.run_forever()
</pre>

This is pretty similar to the twisted example and shows up yet another example of the lack of task prioritization being an issue. If we added the busy loop to the event loop before the connection completed, the scheduler would run the busy loop every time the connection task yields.

<h3>Coroutines, Generators and Subgenerators</h3>

Under the hood, tulip depends heavily on generators to implement coroutines. It's worth digging into that concept a bit to understand what's going on.

Firstly, remind yourself how a generator works:

<pre>
def gen():
    i = 0
    while i &lt; 2:
        print(i)
        yield
        i += 1

i = gen()
print(&quot;yo!&quot;)
next(i)
print(&quot;hello!&quot;)
next(i)
print(&quot;bye!&quot;)
try:
    next(i)
except StopIteration:
    print(&quot;stopped&quot;)
</pre>

This will print:

<pre>
yo!
0
hello!
1
bye!
stopped
</pre>

Now imagine a generator function which writes to a non-blocking socket and calls yield every time the write would block. You have the beginnings of coroutine based async I/O. To flesh out the idea, here's our familiar example with some generator based infrastructure around it:

<pre>
import collections
import errno
import select
import socket

sock = socket.socket()
sock.connect(('localhost', 1234))
sock.setblocking(0)

def busy_loop():
    while True:
        i = 0
        while i &lt; 5000000:
            i += 1
        yield

def write():
    buf = memoryview(b&#039;foo\n&#039; * 2 * 1024 * 1024)
    while len(buf):
        try:
            buf = buf[sock.send(buf):]
        except socket.error as e:
            if e.errno != errno.EAGAIN:
                raise e
            yield
    quit()

Task = collections.namedtuple(&#039;Task&#039;, [&#039;generator&#039;, &#039;wfd&#039;, &#039;idle&#039;])

tasks = [
    Task(busy_loop(), wfd=None, idle=True),
    Task(write(), wfd=sock, idle=False)
]

running = True

def quit():
    global running
    running = False

while running:
    finished = []
    for n, t in enumerate(tasks):
        try:
            next(t.generator)
        except StopIteration:
            finished.append(n)
    map(tasks.pop, finished)

    wfds = [t.wfd for t in tasks if t.wfd]
    timeout = 0 if [t for t in tasks if t.idle] else None

    select.select([], wfds, [], timeout)
</pre>

You can see how the generator-based write() and busy_loop() coroutines are cooperatively yielding to one another just like greenthreads in eventlet would do. But, there's a pretty fundamental flaw here - if we wanted to refactor the code above to re-use that write() method to e.g. call it multiple times with
different input, we'd need to do something like:

<pre>
def write_stuff():
    for i in write(b'foo' * 10 * 1024 * 1024):
        yield
    for i in write(b'bar' * 10 * 1024 * 1024):
        yield
</pre>

but that's pretty darn nasty! Well, that's the whole idea behind <a href="http://www.python.org/dev/peps/pep-0380/">Syntax for Delegating to a Subgenerator (PEP380)</a>. Since python 3.3, a generator can now yield to another generator using the 'yield from' syntax. This allows us to do:

<pre>
...
def write(data):
    buf = memoryview(data)
    while len(buf):
        try:
            buf = buf[sock.send(buf):]
        except socket.error as e:
            if e.errno != errno.EAGAIN:
                raise e
            yield

def write_stuff():
    yield from write(b'foo\n' * 2 * 1024 * 1024)
    yield from write(b'bar\n' * 2 * 1024 * 1024)
    quit()

Task = collections.namedtuple('Task', ['generator', 'wfd', 'idle'])

tasks = [
    Task(busy_loop(), wfd=None, idle=True),
    Task(write_stuff(), wfd=sock, idle=False)
]
...
</pre>

<h3>Conclusions?</h3>

Yeah, this is the point where I've figured out what we should do in OpenStack. Or not.

I really like the explicit nature of Tulip's model - for each async task, you explicitly decide whether to block the current coroutine on its completion (or put another way, yield to another coroutine until the task has completed) or you register a callback to be notified of the tasks completion. I'd much prefer this to rather cavalier "don't worry your little head" approach of hiding the async nature of what's going on.

However, the prospect of porting something like Nova to this model is more than a little dauting. If you think about the call stack of an REST API request being handled and ultimately doing an rpc.cast() and that the entire call stack would need to be ported to 'yield from' in order for us to yield and handle another API request while waiting for the result of rpc.cast() .... as I said, daunting.

What I'm most interested in is how to <a href="https://wiki.openstack.org/wiki/Oslo/Messaging">design our new messaging API</a> to be able to <a href="http://lists.openstack.org/pipermail/openstack-dev/2013-May/009784.html">support any and all of these models in future</a>. I haven't quite figured that out either, but it feels pretty doable.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>209</wp:post_id>
		<wp:post_date><![CDATA[2013-06-04 16:28:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-06-04 16:28:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[async-io-and-python]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<category domain="category" nicename="python"><![CDATA[python]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>414</wp:comment_id>
			<wp:comment_author><![CDATA[Colin Walters]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[walters@verbum.org]]></wp:comment_author_email>
			<wp:comment_author_url>http://blog.verbum.org</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[70.192.17.212]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-04 19:07:01]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-04 19:07:01]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your GLib example is unneessarily ugly; since you worked on GLib, it now has much higher level APIs for both asynchronous operations and sockets.  Here's some GJS (JavaScript binding) code I had for connecting to a Unix domain socket:

// Set up a unix domain socket
let address = Gio.UnixSocketAddress.new_with_type("/path/to/socket", Gio.UnixSocketAddressType.PATH);
let socketClient = new Gio.SocketClient();
let conn = socketClient.connect(address, null);
let output = conn.get_output_stream();

// Start an async write
output.write_bytes_async(new GLib.Bytes("some UTF-8 data"), GLib.PRIORTY_DEFAULT, null, function(result, error) {
  // Called when write completes
});

This is also accessible via pygobject of course.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370372821.7694149017333984375;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370380094.26541996002197265625;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>415</wp:comment_id>
			<wp:comment_author><![CDATA[markmc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markbmc@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[87.198.19.60]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-04 21:08:29]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-04 21:08:29]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks Colin, sounds interesting ... it's been a while for me alright :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>414</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370380109.8570001125335693359375;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>416</wp:comment_id>
			<wp:comment_author><![CDATA[nikolay]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[fafhrd91@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.3.188.239]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-05 04:54:06]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-05 04:54:06]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[in tulip you can use event loop's sock_sendall()

instead of:

  yield from write(b'foo\n' * 2 * 1024 * 1024)

you can use:

  yield from tulip.get_event_loop().sock_sendall(sock, b'foo\n' * 2 * 1024 * 1024)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370408046.4032590389251708984375;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370414959.9647390842437744140625;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>417</wp:comment_id>
			<wp:comment_author><![CDATA[markmc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markbmc@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[87.198.19.60]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-05 06:51:18]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-05 06:51:18]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yep, thanks. That example is actually trying to show some of the mechanics of coroutines so it purposefully doesn't use tulip itself]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370415078.069355010986328125;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>418</wp:comment_id>
			<wp:comment_author><![CDATA[simon]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[pasquier.simon@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[129.184.84.13]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-05 09:14:43]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-05 09:14:43]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Small nit but the generator example prints out:
yo!
0
hello!
1
bye!
stopped

Very nice article otherwise!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370423683.2940618991851806640625;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370423917.714569091796875;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>419</wp:comment_id>
			<wp:comment_author><![CDATA[markmc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markbmc@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[87.198.19.60]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-05 09:20:50]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-05 09:20:50]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ah, thanks - last minute change to the example code and I forgot to update the output :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370424050.670589923858642578125;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>420</wp:comment_id>
			<wp:comment_author><![CDATA[Zane Bitter]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[zbitter@redhat.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.zerobanana.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[93.135.43.150]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-05 10:25:11]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-05 10:25:11]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You might be interested to know that we have moved to using the co-routine model in Heat (including a hack to allow us to have something like "yield from" in Python 2) to orchestrate the creation of resources in parallel.

We haven't attempted to use it for non-blocking I/O, however. We're still using eventlet to multiplex between different requests for now. Personally I would like to eventually move to just using multiprocessing for this; the time it takes to fork is negligible in the context of spinning up an entire stack.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370427911.67442798614501953125;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370470886.848330974578857421875;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>422</wp:comment_id>
			<wp:comment_author><![CDATA[markmc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markbmc@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[87.198.19.60]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-05 22:27:34]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-05 22:27:34]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Interesting stuff Zane - got a pointer to what part of Heat you mean. At a glance, I'm not totally sure I see it.

But yeah, on your other point - it's definitely not a one-size-fits-all thing. The thing I'd be worried about with multiprocessing is duplicating DB and message broker connections - won't you need to re-open those for each request?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370471254.9602410793304443359375;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>428</wp:comment_id>
			<wp:comment_author><![CDATA[Zane Bitter]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[zbitter@redhat.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.zerobanana.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[93.133.201.48]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-06 11:25:20]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-06 11:25:20]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The main code for driving it is here: https://github.com/openstack/heat/blob/master/heat/engine/scheduler.py

It's pretty similar to the Task stuff in Tulip. Once the code is a bit more mature (i.e. we adapt it for more complex use cases and fix some bugs) I can imagine it ending up in Oslo if there are other potential uses for it.

It's true that using multiprocessing would mean reopening the DB connection (I don't think we actually need the message broker again during these operations), but stack create/update/delete operations are so long running and require so many other connections that I'm not sure it would matter much. I haven't looked into it though, and if it does turn out to be feasible it's probably not widely applicable.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370517920.7255458831787109375;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370524190.0544359683990478515625;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>429</wp:comment_id>
			<wp:comment_author><![CDATA[Thomas Hervé]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[therve@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[88.163.165.192]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-06 14:04:32]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-06 14:04:32]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Interesting post, thanks. I wonder if you have concrete example where task prioritizations can be useful though. In particular, I wonder if Python would be capable to handle something like that properly anyway, considering that when your lowest priority task run, none of the higher priority tasks are running.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370527472.200292110443115234375;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370527756.4939670562744140625;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>430</wp:comment_id>
			<wp:comment_author><![CDATA[markmc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markbmc@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[217.173.99.61]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-06 14:14:39]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-06 14:14:39]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thomas - an example might be a task to clear out a cache. While handling an API request, you might decide the cache has grown too large and needs clearing out, so you schedule an idle task to do that and you only want it to run when no API requests are being processed. The idle task might yield to the scheduler after a short amount of time if it didn't finish the task.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370528079.0512669086456298828125;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>431</wp:comment_id>
			<wp:comment_author><![CDATA[Brant Knudson]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[blk@acm.org]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[129.42.208.178]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-06 23:33:47]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-06 23:33:47]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Do these support having multiple threads? If so, throw your long-running/non-blocking processes into another thread.

My experience with async I/O is using boost::asio.  When combined with boost::shared_ptr you can get some really nice looking code where actors go away automatically when all references to them are gone. With boost::exception, exceptions can be sent to callback functions that run in another thread. It has a concept of strands for multi-threading support that's an interesting way of doing mutual-exclusion without blocking mutexes.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370561627.5363979339599609375;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370587822.523047924041748046875;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>433</wp:comment_id>
			<wp:comment_author><![CDATA[OpenStack Community Weekly Newsletter (May 31 &#8211; June 7) &raquo; The OpenStack Blog]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.openstack.org/blog/2013/06/openstack-community-weekly-newsletter-may-31-june-7/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[67.192.46.11]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-07 22:39:25]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-07 22:39:25]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Async I/O and Python [...]

[WORDPRESS HASHCASH] The comment's server IP (67.192.46.11) doesn't match the comment's URL host IP (174.143.194.225) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1371121976.3618609905242919921875;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>436</wp:comment_id>
			<wp:comment_author><![CDATA[markmc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markbmc@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[217.173.99.61]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-13 11:13:51]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-13 11:13:51]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[For anyone interested, here's some slides for a talk based on this blog: http://markmc.fedorapeople.org/python-async-io-pyie-jun-2013.pdf]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1371122031.571836948394775390625;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>437</wp:comment_id>
			<wp:comment_author><![CDATA[A. Jesse Jiryu Davis]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jesse@emptysquare.net]]></wp:comment_author_email>
			<wp:comment_author_url>http://emptysqua.re</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[74.93.184.209]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-19 05:30:38]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-19 05:30:38]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks, an interesting and informative read and a big, worthy effort to put all this together!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1371619838.6269910335540771484375;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1371619980.2206859588623046875;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>438</wp:comment_id>
			<wp:comment_author><![CDATA[markmc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markbmc@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[87.198.19.60]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-19 05:35:08]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-19 05:35:08]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks Jesse - good luck with your talk :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>437</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1371620108.800952911376953125;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>May 30th OpenStack Foundation Board Meeting</title>
		<link>https://blogs.gnome.org/markmc/2013/06/05/may-30th-openstack-foundation-board-meeting/</link>
		<pubDate>Wed, 05 Jun 2013 22:16:42 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=220</guid>
		<description></description>
		<content:encoded><![CDATA[Last Thursday, on May 30, the OpenStack Foundation Board met over the phone for two hours to discuss a number of topics. The date for the meeting was set well in advance, the call was open to anyone who cared to listen in and agenda was posted in advance to <a href="https://wiki.openstack.org/wiki/Governance/Foundation/30May2013BoardMeeting">our wiki page</a>.

Below is my summary of our discussions. The official summary was <a href="http://lists.openstack.org/pipermail/foundation/2013-May/001428.html">posted earlier by Jonathan Bryce</a>.

For this meeting, Lew Tucker acted as chairman in place of Alan Clark.

<h3>Training</h3>

The first big topic on the agenda was an update from Mark Collier on the Foundation's work-in-progress plans for official OpenStack training and certification programs.

The idea is that, with the huge interest globally in OpenStack, we're hearing consistently that there is a shortage of people with OpenStack expertise and training. The Foundation would like to address this in a way that adds new Openstack experts, grows our community and establishes a base knowledge set that everyone is united around.

The OpenStack ecosystem is already ramping up its training offerings and classes are available today from a number of companies all over the world. The Foundation wants to encourage this and help accelerate the availability of training.

Crucially, the Foundation proposes to introduce a new trademark program which would require all OpenStack training and credentialling providers to include a base set of training material and tests which would be developed by the Foundation itself. The hope is that we would protect the OpenStack brand by ensuring that all official training courses would have the same basic content and quality levels.

This proposal of a new trademark program triggered a significant amount of debate which continued on over email after the call. On the call, Jim Curry and Boris Renski kicked off the discussion by expressing similar concerns about whether the trademark program would actually hinder the growth of training offerings in the ecosystem. Jonathan clarified that intent isn't to prevent training programs from competing with additional content, but rather to ensure all programs have a common baseline. Others like Nick Barcet and Todd Moore chimed in with the view that OpenStack really needs this and Nick drew an analogy with Linux Professional Institute certification.

After much discussion, the conclusion was that the topic needed further discussion before any concrete steps could be taken. Mark Collier closed out the topic by making the point that the "Built for OpenStack" trademark was currently being used for OpenStack training and this would continue until an alternative plan was put in place.

Expect to see plenty more discussion about this soon on <a href="http://lists.openstack.org/cgi-bin/mailman/listinfo/foundation">the foundation mailing list</a>!

<h3>Next Board Meeting</h3>

We had some discussion about when our next meeting should be held and, based on the availability of board members, it looks like it will be held on Thursday, June 27 between 9am and 11am Pacific time.

<h3>Gold Member Committee</h3>

Next up, Simon Anderson discussed a new committee that we agreed to set up at our previous meeting - the Prospective Gold Member Committee.

The idea with this committee is that when companies approach the Foundation and express an interest in becoming a Gold Member, the Committee will work with the Foundation staff and the prospective member to ensure their application is properly prepared before it comes before the board.

The committee will essentially act as a mentor for prospective new members and help them understand what is expected of Gold Members. The hope is that this will result in applicants being better prepared than we've seen previously.

One concern expressed by Lauren Sell and others is that the committee shouldn't become a vetting committee. The committee doesn't have the mandate to turn away unsuitable candidates. If a candidate chooses to ignore the committee's advice and mentorship, they should still be able to have their application heard by the board even this ultimately means the application is likely to be received unfavourably by the board. This point was accepted and everyone was in agreement on the mandate for the committee.

The members of the committee will be Simon Anderson, Devin Carlen, Rob Hirschfeld, Joseph George, Sean Roberts and Nick Barcet.

<h3>Update from the Executive Director</h3>

Next, Jonathan gave the board a quick update.

Jonathan talked about his attending a number of OpenStack events internationally recently and how there is still tremendous opportunity to grow the OpenStack community and engage new people. He also talked about how he met with a number of significant OpenStack users and hopes to be able to use their stories to illustrate the truly global nature of the OpenStack user community.

He also talked about the success of the OpenStack Summit in Portland and how we had 2600 attendees compared to the 1300 attendees six months previously. Feedback on the summit has been overwhelmingly positive with the most common negative comments related to the Wi-Fi network and how some of the breakout sessions were massively over-subscribed. The Foundation will continue to invest significantly in networking infrastructure at the conference and there is work underway to restructure some of the room layouts at the upcoming Summit in Hong Kong based on the feedback from Portland.

Jonathan also talked about how our financials are in good shape. We had a surplus from the Portland Summit which will allow us to make the Hong Kong Summit a kick-ass event. The Foundation is also well advanced in completing its first audit and we expect to see fully audited financials for 2012 published in August. Apparently this will be a good milestone in our progress towards non-profit status.

<h3>Role of Core</h3>

After Jonathan's update, board members had an opportunity to briefly raise topics of interest.

First of those was Rob Hirschfeld who wants to bring together a group of board members to discuss the what "Core" project status means and should mean in future.

Rob talked about how he feels that the issue of whether core projects need a plugin architecture will be the key to unlocking the discussion and making progress.

<h3>Working With Standards Bodies</h3>

Randy Bias mentioned that he had been approached by someone from the IEEE who talked about the possibility of the IEEE working together with OpenStack on interoperability and standardization issues. Randy was mostly just passing on the message but also made the point that we can probably use the the experience of other bodies to help us ensure interoperability between OpenStack clouds.

Joshua McKenty quickly took a firm and contrary view to Randy's - that standardization bodies are typically pretty ineffective and would actually slow down our progress on OpenStack interoperability.

The discussion concluded with general agreement that while individuals are welcome to talk to and learn from whoever they wish as part of their efforts to help make progress on OpenStack interoperability. Josh also agreed to provide the board with an update on his work on refstack.

</h3>Meeting Summaries</h3>

The final brief topic was a joy indeed. As <a href="http://lists.openstack.org/pipermail/foundation/2013-May/001419.html">had already been discussed on the mailing list</a>, Josh felt that <a href="http://blogs.gnome.org/markmc/2013/05/25/april-14th-openstack-foundation-board-meeting/">my previous meeting summary</a> breached a policy agreed by the board (before my joining) that directors would make no public comment board meetings until after Jonathan had published an official summary of the meeting. Josh also felt that my reference to the agenda of the executive session had breached the confidentiality of the session.

Jonathan and I repeated the point that Jonathan had not gotten around to doing an official summary in a reasonable time and explicitly given me the go-ahead to post my summary. In some follow-up emails, I also made the point that - in this case - we actually made no effort to keep the agenda of the executive session private during the public part of the meeting so it was completely appropriate to mention it in my summary.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>220</wp:post_id>
		<wp:post_date><![CDATA[2013-06-05 22:16:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-06-05 22:16:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[may-30th-openstack-foundation-board-meeting]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<category domain="category" nicename="openstack-foundation-board-meeting"><![CDATA[openstack-foundation-board-meeting]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>423</wp:comment_id>
			<wp:comment_author><![CDATA[Pieter]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[pvanveen84@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[83.163.53.136]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-06 00:52:22]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-06 00:52:22]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mark, Thanks for the update. I've been searching for Openstack training in Europe and don't have a lot of success. So about your remark "classes are available today from a number of companies all over the world": where can I find a list of those companies who offer Openstack training? Would appreciate a pointer. Regards, Pieter]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370479942.79317188262939453125;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370496224.014008045196533203125;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>424</wp:comment_id>
			<wp:comment_author><![CDATA[markmc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markbmc@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[87.198.19.60]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-06 05:36:47]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-06 05:36:47]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Pieter - I don't have a lot of information to hand, but from the material presented at the meeting it looks like Rackspace, Mirantis, Piston, Hastexo and qstc offer courses


http://www.rackspace.com/cloud/private/training/
http://www.mirantis.com/openstack-training/
http://www.pistoncloud.com/services/training/
http://www.hastexo.com/services/training/cloud-bootcamp
http://www.qstc.com/en/trainings/detajl/?id=210

A quick google also shows up:

https://training.linuxfoundation.org/linux-courses/system-administration-training/openstack-cloud-architecture-and-deployment
http://www.griddynamics.com/solutions/altai-private-cloud-for-developers/training/
http://www.stackops.com/products-services/openstack-training/
http://swiftstack.com/training/

The question was asked and answered here too:

https://ask.openstack.org/question/1856/what-options-are-available-to-get-an-openstack-training-certification/]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370497007.275372028350830078125;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>425</wp:comment_id>
			<wp:comment_author><![CDATA[Dave Neary]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[dneary@gnome.org]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/bolsh/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[87.231.153.233]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-06 06:28:58]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-06 06:28:58]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mark:

Red Hat also offers OpenStack training: http://www.redhat.com/training/courses/cl210/

As do
Alterway: http://formation.alterway.fr/formation/formation-deployer-et-gerer-un-iaas-sous-openstack/
eNovance:  http://formationopenstackparis.eventbrite.com/
Pythagore: http://www.pythagore-fd.fr/formations/catalogue/Systemes/SY111-formation-Openstack-ConfigurationCloudEntreprise.jsp
Objectif Libre: http://www.objectif-libre.com/fr/formation/formation-openstack-la-solution-open-source-de-cloud-computing

Dave.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>7</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370500138.770205974578857421875;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:5:"bolsh";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370502551.7950680255889892578125;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>426</wp:comment_id>
			<wp:comment_author><![CDATA[markmc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markbmc@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[217.173.99.61]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-06 07:10:22]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-06 07:10:22]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks Dave, I had no idea Red Hat already had an OpenStack course :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370502622.5965518951416015625;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>427</wp:comment_id>
			<wp:comment_author><![CDATA[markmc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markbmc@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[217.173.99.61]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-06 07:18:41]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-06 07:18:41]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I've added all the links to https://ask.openstack.org/question/1856/what-options-are-available-to-get-an-openstack-training-certification/]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370503121.269462108612060546875;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>439</wp:comment_id>
			<wp:comment_author><![CDATA[ben]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[duyujie.dyj@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://duyujie.org</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[8.35.201.17]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-19 13:43:33]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-19 13:43:33]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks Mark! And we had delivered several times TryStack Traning Camp for the Enterprise customers, like DELL,HP in China. This is a good way to promote OpenStack. OpenStack really needs this! http://www.slideshare.net/ben_duyujie/open-stack2-20130508]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1373534942.690205097198486328125;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1371649414.0071709156036376953125;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>June 27th OpenStack Foundation Board Meeting</title>
		<link>https://blogs.gnome.org/markmc/2013/06/29/june-27th-openstack-foundation-board-meeting/</link>
		<pubDate>Sat, 29 Jun 2013 16:04:26 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=230</guid>
		<description></description>
		<content:encoded><![CDATA[On June 27, the OpenStack Foundation Board of Directors met for two hours via conference call. As usual, the <a href="https://wiki.openstack.org/wiki/Governance/Foundation/27June2013BoardMeeting">agenda was published in advance</a> and the meeting was open to anyone who wanted to observe the proceedings.

These notes are my perspective of the meeting. Jonathan Bryce <a href="http://lists.openstack.org/pipermail/foundation/2013-June/001435.html">published an official summary</a> and official minutes will be posted in due course.

<h3>Roll Call and Meeting Confidentiality Policy</h3>

As you can imagine, a conference call with 20-30 attendees takes a while to get going. We began with a roll call and, after perhaps 15 minutes, were ready to get started.

First item on the agenda was a review of our meeting confidentiality policy. Directors agree to refrain from commenting on the meeting proceedings until Jonathan posts his summary. The only official record of the meeting is Jonathan's summary and the official minutes. Anything discussed during executive session is confidential. Nothing new here.

<h3>Amendment to our Certificate of Incorporation</h3>

Next up was a motion to approve a relatively minor amendment to the foundation's certificate of incorporation.

The details of the amendment is fairly obscure, but essentially the Foundation is applying for <a href="https://en.wikipedia.org/wiki/501%28c%29_organization">U.S. 501(c) status</a> which means it will be a tax-exempt, non-profit organization. There are various different organization types, but the
two most relevant are 501(c)(3) and 501(c)(6). OpenStack is filing for 501(c)(6) status.

Jonathan explained that, while preparing for this filing, it was noted that the original certificate of incorporation only allows (on winding up of the foundation) the foundation's assets to be transferred to a 501(c)(3) organization. This amendment simply allows for the possibility of transferring assets to 501(c)(6) organizations.

There was some brief discussion clarifying exactly which status we were filing for and the motion was passed unanimously.

<h3>Transparency Policy</h3>

Next up, Lauren Sell explained the context for a formal transparency policy document which had been circulated to the board members and would require further discussion before being approved.

Lauren reminded us that at our meeting in April, the Transparency Working Group presented the principles for a transparency policy. Lauren had since worked with legal counsel to draft a more formal policy based on those original principles.

The main question Lauren felt needed to be cleared up was the issue of document management. The board has (and will continue to have) documents which must remain confidential. At our April meeting we had agreed that the OpenStack Infrastructure team would investigate hosting an OwnCloud instance which would act as our document store. While this was still on the team's to-do list, it had not been prioritized over other work.

I suggested that, in the team time, we create a new mailing list for the the board (e.g. foundation-directors?) which would be open to everyone for read-only subscription and we would use the current mailing list to share confidential documents. Once the document management system is in place, we could then shut down the private foundation-board mailing list.

Rather than discuss in any great detail, it was agreed the Lauren would start a discussion on the foundation mailing list.

<h3>Summits &amp; Marketing</h3>

Next up, Mark Collier and Lauren gave us an update on the Marketing front and how summit planning is progressing.

Lauren first talked through some excellent slides with a tonne of details about the Icehouse Design Summit in Hong Kong from Nov 5-8, 2013. This is the first time that the summit will be held at an "international venue" (an amusing term if you're not U.S. based :) and we again expect record attendance.

Included in Lauren's slides were some really helpful maps and aerial shots showing the venue, the geography of Hong Kong and the location of the recommended hotels. The venue is located near the airport which is a 25 minute train journey from down town Hong Kong. There are a couple of hotels adjacent to the venue and most of the other recommended hotels are down town. The foundation staff have worked hard to come up with a good range of hotel options, including hotels with a rate of under $150 per night.

In terms of travel advice, it was noted that visitors must have a passport valid for at least one month after their planned stay and that flights from SFO to HKG are currently averaging between $1000 and $1400. Jonathan recommends that people book their flights early, because fares will increase very significantly closer to the event. Lauren also pointed out that it's sensible to make hotel books now, since the hotels closest to the venue are already selling out.

Lauren then talked through the planned format for the summit, which has been heavily influenced by feedback received through the <a href="http://www.openstack.org/blog/2013/06/openstack-summit-survey-results/">survey results from the previous summit</a>.

This time around there will be two types of passes. A more affordable limited access pass will give access to the expo hall, general sessions and a single track of breakout sessions on Tuesday and Wednesday. The hope is that this will help control the numbers at the breakout sessions, but also make the event more accessible to folks who just want to come along for the first time and learn about OpenStack.

The primary language of the event will be English, but there will be simultaneous translation into Mandarin in the main hall.

The call for sponsors is already open and we have 21 sponsors to date. The headline sponsorship sold out in an astonishing 7 minutes.

For the first time, there will be a travel support program designed to ensure that lack funding won't prevent key technical contributors from attending the event. Details of this will be announced very soon. We had a brief discussion about how this program should be run and it was pointed out that we could learn from similar programs for PyCon and UDS.

In terms of learnings from the previous summit, some of the things the team will be working hard to improve is the quality of network connectivity, the size breakout rooms and the variety of beverages and snacks.

It was noted that feedback from ATCs who completed the survey was 2.5:1 in favour of keeping the design summit collocated with the conference. In Hong Kong, the design summit rooms will be well separate from the breakout session rooms, ATC status will be properly indicated on name badges and it will be much more clear on the schedule which sessions are part of the design summit and which are breakout sessions.

After some interesting discussion about the plans for Hong Kong, Lauren gave a brief overview of how plans are proceeding for the 2014 summits. The spring summit is planned for the week of May 14 with Atlanta and Chicago under consideration. The autumn/fall summit will be one of the first two weeks of November with Paris and Berlin currently under consideration. Decisions on the venues for both these summits are expected to be made soon.

Finally, Lauren ran through some updates on the progress of the <a href="http://wiki.openstack.org/Governance/Foundation/Marketing">marketing community</a> more generally. Version 1 of the OpenStack <a href="http://www.openstack.org/marketing">marketing portal</a> has been made available. The <a href="http://lists.openstack.org/cgi-bin/mailman/listinfo/marketing">mailing list</a> is gaining new subscribers all the time. The monthly meetings are also seeing growing numbers attending.

<h3>Patent Cooperation Proposal</h3>

Next on the agenda was a presentation from several members of the <a href="https://wiki.openstack.org/wiki/Governance/Foundation/LegalAffairsCommittee">Legal Affairs Committee</a> on the three options they recommend the foundation should consider for increased cooperation on patent sharing or cross-licensing between foundation members.

Frankly, I don't really have the energy to try and summarise these proposals in great detail, so this is short ... however, this is certainly a complex and important topic.

The Apache License v2.0 has a patent provision which means you grant a license to any of your patents which are infringed upon by any contributions you make. If any licensee of the software claims that the software infringes on their patent, then they lose any patent rights granted to them under the license.

Two options were presented to the board for how we might encourage further sharing of patents related to OpenStack between the companies involved. The idea is that we could put OpenStack in a better defensive position by sharing a wider range of applicable patents.

The first option proposed was to closely copy <a href="http://www.google.com/patents/opnpledge/pledge/">Google's Open Patent Non-Assertion Pledge</a>. The idea is that companies involved in OpenStack would pledge to not assert specific sets of relevant patents against OpenStack users.

The alternative option proposed was the adoption of an <a href="http://www.openinventionnetwork.com/patents.php">OIN-style patent cross-licensing scheme</a>. The primary difference of this scheme is that an actual patent license is granted to users, rather than just a non-assertion pledge.

The slides outlining these options will be posed to the foundation wiki page. It is hoped the board will be in a position to come to a decision on this in November.

<h3>Closing Topics</h3>

Alice King is stepping down from her role on the Legal Affairs Committee, so the board voted to approve a motion to appoint Van Lindberg to the committee.

Rob Hirschfeld gave an update on his work to bring about a productive discussion on the question of "what is core?". Rob has held a couple of meetings with other board members and drafted six position statements which he hopes will drive the discussion towards a consensus-based decision. Rob wishes the board to come to a good level of consensus on these position statements before opening the discussion up to the rest of the community.

Finally, there was a brief discussion about training and how members of the User Committee are actively working on training materials.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>230</wp:post_id>
		<wp:post_date><![CDATA[2013-06-29 16:04:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-06-29 16:04:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[june-27th-openstack-foundation-board-meeting]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<category domain="category" nicename="openstack-foundation-board-meeting"><![CDATA[openstack-foundation-board-meeting]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>444</wp:comment_id>
			<wp:comment_author><![CDATA[Aug 6th OpenStack Foundation Board Meeting &laquo; Mark McLoughlin]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://blogs.gnome.org/markmc/2013/08/08/aug-6th-openstack-foundation-board-meeting/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[209.132.180.177]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-08-08 10:25:45]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-08-08 10:25:45]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] Next up was a follow-on from the patent cooperation discussion at our previous meeting. [&#8230;]

[WORDPRESS HASHCASH] Snoopy failed to fetch results for the comment blog url (https://blogs.gnome.org/markmc/2013/08/08/aug-6th-openstack-foundation-board-meeting/) with error '' and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1375957545.1283099651336669921875;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1375957579.6892139911651611328125;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>440</wp:comment_id>
			<wp:comment_author><![CDATA[OpenStack Community Weekly Newsletter (June 28 &#8211; July 5) &raquo; The OpenStack Blog]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.openstack.org/blog/2013/07/openstack-community-weekly-newsletter-june-28-july-5/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[67.192.46.8]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-07-05 13:35:27]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-07-05 13:35:27]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Informal notes: June 27th OpenStack Foundation Board Meeting [...]

[WORDPRESS HASHCASH] The comment's server IP (67.192.46.8) doesn't match the comment's URL host IP (174.143.194.225) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1373534948.3639171123504638671875;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Python Exception Chaining</title>
		<link>https://blogs.gnome.org/markmc/2013/07/11/python-exception-chaining/</link>
		<pubDate>Thu, 11 Jul 2013 09:28:44 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=237</guid>
		<description></description>
		<content:encoded><![CDATA[OpenStack has an awful lot of developers writing Python code and many of us wouldn't consider ourselves true "pythonistas". This means we wind up having a bunch of interesting discussions about e.g. <a href="http://lists.openstack.org/pipermail/openstack-dev/2013-July/thread.html#11635">EABL vs LBYL</a>.

A particular bugbear of mine is exception handling. I'm convinced that very, very few developers think hard about their error handling strategy and that the problem is even more serious with exception based languages.

So, I really like getting into error handling discussions. This morning, we have a great one - <a href="http://lists.openstack.org/pipermail/openstack-dev/2013-July/011702.html">how to do exception chaining in Python, and whether that's even something you want to do</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>237</wp:post_id>
		<wp:post_date><![CDATA[2013-07-11 09:28:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-07-11 09:28:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[python-exception-chaining]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<category domain="category" nicename="python"><![CDATA[python]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>442</wp:comment_id>
			<wp:comment_author><![CDATA[Steven Snow]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[stevensnsow@bmts.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[209.240.125.193]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-07-11 14:55:59]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-07-11 14:55:59]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am more familiar with Java's exception handling, which I found to be quite predictable in it's behaviour. This, I guess, is the point of exception handling in the first place, predictable behaviour which would allow for predicable recovery. I work in industrial environments in automation, and predictability and deterministic behaviour is the norm. Even here some developers still slip in the area of fault recovery/exception handling. Having built many machines/cells/lines over the years, I can honestly say that it is much easier to operate something when you know the details of how it works, however try getting someone who doesn't know the "nuts and bolts" to run your little toy and that will reveal the flaws in error/exception handling and recovery. The same applies for software for PC's, I may write programs to do all sorts of wonderful things for me, however if I haven't written them with exception/error handling/recovery from the beginning they would likely be unusable for most other users. As for Python, I have some limited experiences with it, and never really investigated it's exception handling method. I guess that eliminates me from being a "Pythonista", I am however a Ducatista!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1373556179.9082190990447998046875;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1373554559.980329036712646484375;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>443</wp:comment_id>
			<wp:comment_author><![CDATA[OpenStack Community Weekly Newsletter (July 5 &#8211; 12) &raquo; The OpenStack Blog]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.openstack.org/blog/2013/07/openstack-community-weekly-newsletter-july-5-12/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[67.192.46.13]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-07-12 23:50:49]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-07-12 23:50:49]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Python Exception Chaining [...]

[WORDPRESS HASHCASH] The comment's server IP (67.192.46.13) doesn't match the comment's URL host IP (174.143.194.225) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1375956642.5397279262542724609375;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Aug 6th OpenStack Foundation Board Meeting</title>
		<link>https://blogs.gnome.org/markmc/2013/08/08/aug-6th-openstack-foundation-board-meeting/</link>
		<pubDate>Thu, 08 Aug 2013 10:25:42 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=242</guid>
		<description></description>
		<content:encoded><![CDATA[On Aug 6th, the OpenStack Foundation Board held a two hour conference call meeting which was open to anyone to join. <a href="https://wiki.openstack.org/wiki/Governance/Foundation/6Aug2013BoardMeeting">The agenda was published in advance</a>.

As usual, this my informal recollection of the meeting. It's not an official record, etc. Jonathan published an <a href="http://lists.openstack.org/pipermail/foundation/2013-August/001454.html">official summary</a> on the foundation mailing list.

<h3>Preliminaries</h3>

Alan Clark chaired the meeting and spent the first few minutes reviewing the agenda and holding the roll call. We had more than 50% of the board members, and so had sufficient quorum.

We then reviewed the <a href="https://wiki.openstack.org/wiki/Governance/Foundation/27June2013BoardMinutes">minutes of the previous meeting</a> and approved them by vote. Todd, Troy, Nick, Devin and Jim all abstained because they weren't present at that meeting.

<h3>Patent Cooperation</h3>

Next up was a follow-on from the patent cooperation discussion at our <a href="http://blogs.gnome.org/markmc/2013/06/29/june-27th-openstack-foundation-board-meeting/">previous meeting</a>.

The Legal Affairs Committee had previously <a href="https://wiki.openstack.org/w/images/2/24/OSLAC_Update_for_Board_062713.pdf">proposed three options</a> that we make no change, that we implement a Google-style patent pledge or that we introduce an OIN-style cross licensing agreement.

Keith Bergelt, CEO of the Open Invention Network, attended the meeting and gave a <a href="https://wiki.openstack.org/w/images/1/10/20130806OIN_Presentation_To_The_Open_Stack_Board.pdf">presentation</a> describing the OIN and how it could play a key role in OpenStack's strategy to create an environment of patent non-aggression around OpenStack. Keith has been actively working with the Legal Affairs Committee to develop a fourth proposal for the board which would make the best possible use of the OIN.

Keith described how the OIN was formed 8 years ago by IBM, NEC, Novell, Philips, Red Hat and Sony to ensure "freedom of action, freedom to operate" around Linux. It has some 560 member companies who sign up to a broad cross-licensing agreement whereby any patents they hold which read on Linux is licensed to all other member companies.

The patents which are covered by the OIN agreement are those which read on the software packages listed in the <a href="http://www.openinventionnetwork.com/pat_linuxdef.php">OIN's Linux System Definition</a>. Over time, this definition has grown to include the likes of Android, WebOS and, more recently, OpenStack. The OIN views OpenStack has one of the most import projects after Linux and feels that including OpenStack in its defintiion is an obvious step.

That OpenStack is included in the OIN system definition means that there are already 560 licensees committed to non-aggression around OpenStack. Keith feels that this goes a long way to achieving the OpenStack Foundation's goals in this area and that we should seek to make the most effective use of the existence of this agreement rather than reinvent the wheel.

Keith proposes a more formalized relationship with the Foundation, that members would be encouraged to join the OIN, that we'd do joint press releases and that there would be an ongoing direct relationship with the TC to ensure the system definition is regularly updated to include all OpenStack projects.

<h3>Legal Affairs Committee</h3>

Van Lindberg was up next to provde an update from the <a href="https://wiki.openstack.org/wiki/Governance/Foundation/LegalAffairsCommittee">Legal Affairs Committee</a> but this turned out to be a continuation of the previous discussion on patent cooperation.

Van summed up this fourth proposal succinctly - that OpenStack members get behind the OIN. He went on to describe how a difficulty with this approach is that some members of OpenStack will never be members of the OIN because the OIN fundamentally see those companies as a threat to Linux. He didn't name these companies.

So, the question becomes how we can ensure the ability of those OpenStack members who aren't members of the OIN to join a patent cooperation initiative specifically around OpenStack.

Van first described how OpenStack LLC (the Rackspace owned entity which held OpenStack's before the Foundation was formed) actually joined the OIN some time ago because of concerns about the <a href="http://www.virtualizationpractice.com/doj-blocks-emcvmware-from-acquiring-virtualization-patents-from-novell-10368/">"CPTN transaction"</a>. The OpenStack Foundation could quite easily take over this agreement and, by virtue of the fact that the OpenStack Foundation is in some sense the entity licensing the OpenStack software to everyone, the benefits of the OIN cross-license would flow to all OpenStack users.

For OIN non-members, the Foundation could create a separate, limited license agreement whereby the OpenStack related patents held by such licensors would be licensed to the Foundation and the benefits of that agreement would also flow to all OpenStack users.

Van went on to talk a little about patent trolls <a href="http://www.rackspace.com/blog/tag/patent-trolls/">(a subject close to his heart)</a>, how this is a serious issue for OpenStack and how, even now, there is a troll going after Rackspace and HP over a number issues including some related to OpenStack. Van feels that the OIN does not actually protect against the threat of trolls very well, because (somewhat obviously) such trolls would not be members of the OIN.

Van raised again (this has been discussed before) the idea of a patent indemnity program whereby OpenStack members (or even just the Foundation) would contribute to a fund which could be used for the legal defence (not any settlements themselves) of any OpenStack members threatened by patent trolls for the use of OpenStack. Van feels that patent trolls often go after some weaker companies, obtain a small settlement because that company feels it's cheaper to settle than to defend and that settlement sets a problematic precedent that the troll can then build upon. An indemnity program would encourage members to fight patent trolls and avoid precedents being established which would set the entire community up for trouble.

Eileen made the point that the OIN was created because the GPL lacks a patent license. We're not in the same position, since OpenStack is licensed under the Apache License which includes a broad patent license. She raised concerns about the idea of an indemnity program, how it's scope could turn out to be very large and expensive and disagreed that trolls always go after the smaller players.

The conclusion was ... no decisions today, more dialogue needed.

<h3>OpenStack Training</h3>

Next up, Jonathan revisited the topic of how the Foundation can encourage and regularize the market forming around OpenStack training.

This topic was also covered in the June meeting and Jonathan felt there was good support for some of the proposals but board members had concerns and questions about other aspects. Since then, Jonathan has been talking to several board members including Brian Stevens and Boris Renski and feels he can provide some clarifications and updates. The Foundation would like to move forward with two proposals - a training licensing program and a baseline certification test.

The training licensing program would replace the use by training providers of the Built For OpenStack mark. This will allow the Foundation to have a closer relationship with training providers and help raise awareness about the availability of OpenStack training. There is broad support for this proposal
and the Foundation have a draft agreement ready to circulate to training providers.

The baseline certification test proposal was the proposal that has required more discussion but it is better understood now. The idea is that the Foundation would define a common baseline set of training which all licensed OpenStack providers must include and certify against, but that the Foundation also fully expects providers to expand upon this content greatly and compete on the unique aspects of their training.

The vast majority of what would be included in this baseline training is already covered by all training courses out there. The Foundation would not seek to force content and topics on training providers but would instead seek to add new content when it sees that training providers are already covering these new topics. It is expected that the Foundation staff and others it engages will take 6-9 months to prepare this program.

Jonathan feels a baseline OpenStack certification would ensure that there is OpenStack training which globally available, not cost-prohibitive for students in regions all around the world and provides a target for people who want to become knowledge around OpenStack.

The board moved to support the Foundation staff in its efforts to create a baseline certification testing program for OpenStack. The motion was passed unanimously.

<h3>User Committee Update</h3>

Tim Bell took the floor next to raise an issue the <a href="http://www.openstack.org/foundation/user-committee/">User Committee</a> has been discussing in recent times.

The committee currently consists of Tim, Ryan Lane and JC Martin. While the committee is doing a great job, they feel that their limited numbers (and their limited time) is constraining their ability to achieve some of their goals.

The obvious solution is to add more members to the committee, but there's a catch. Committee members sign an NDA and have access to some sensitive data about OpenStack deployments which are obtained through surveys with the understanding that the information is confidential. Adding significantly more members could compromise the confidence that survey responders would have in the confidentiality of their responses.

Tim has been talking with Tom Fifield about what role Tom could take (as a Foundation staff member) on the committee in order to help out, without Tom having to sign the NDA and gain access to the confidential survey results. The idea is that Tom can take on some of the responsibility to act as a go-between who ensures that issues which are identified by the committee are raised as appropriate with the developer community.

In a similar vein, the committee is exploring the idea of a structure whereby only the "core" committee members need to sign the NDA and there would be sub-groups of the committee who can get involved without gaining direct access to the survey results.

<h3>What is Core</h3>

Rob Hirschfeld gave a quick update on the "what is core" discussions he is
leading. The discussion was initially limited to the board, more recently
<a href="http://lists.openstack.org/pipermail/openstack-tc/2013-July/thread.html#308">broadened to include the TC</a> and Rob now plans to broaden it to include the
wider community.

Rob mentioned a <a href="http://lists.openstack.org/pipermail/foundation/2013-August/001453.html">flowchart</a> he has prepared to describe some of the proposed process. He also discussed how the initial position on requiring "plugins" has evolved into talk of designating some parts of projects as "required implementations" and allowing other parts to have "alternate implementations".

<h3>Other Updates</h3>

Todd and Rob met with the Foundation's legal team to discuss what changes to the Individual Directors election process would be allowed under Delaware law. He will present some thoughts on this at the next board meeting.

Simon has been working with Mark Collier and Heidi Bretz to ensure that companies who have expressed an interest in applying to be a Gold Member are aware of the board's revised expectations around new members. Simon and the membership committee still plan on re-drafting the wiki page describing the <a href="https://wiki.openstack.org/wiki/Governance/Foundation/PotentialMemberCriteria">criteria for new members</a>.

Alan mentioned that the Compensation Committee completed a mid-year review of Jonathan's goals for the year and concluded things are very much on track. Full details were posted to the foundation-board mailing list.

The next board meeting is scheduled for October 3rd at 9am PST. There will also be an all day board meeting in Hong Kong on November 4th.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>242</wp:post_id>
		<wp:post_date><![CDATA[2013-08-08 10:25:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-08-08 10:25:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[aug-6th-openstack-foundation-board-meeting]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<category domain="category" nicename="openstack-foundation-board-meeting"><![CDATA[openstack-foundation-board-meeting]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>445</wp:comment_id>
			<wp:comment_author><![CDATA[OpenStack Community Weekly Newsletter (Aug 2-9) &raquo; The OpenStack Blog]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.openstack.org/blog/2013/08/openstack-community-weekly-newsletter-aug-2-9/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[67.192.46.9]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-08-09 22:30:54]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-08-09 22:30:54]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] Aug 6th OpenStack Foundation Board Meeting [&#8230;]

[WORDPRESS HASHCASH] The comment's server IP (67.192.46.9) doesn't match the comment's URL host IP (174.143.194.225) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1380964535.059236049652099609375;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>454</wp:comment_id>
			<wp:comment_author><![CDATA[OpenStack社区周报(8.4 &#8211; 8.11) | UnitedStack 官网]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.ustack.com/blog/openstack_weeklynews1/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.85.220.251]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-11-12 10:04:57]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-11-12 10:04:57]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] 基金会董事会会议 Aug 6th OpenStack Foundation Board Meeting [&#8230;]

[WORDPRESS HASHCASH] The comment's server IP (202.85.220.251) doesn't match the comment's URL host IP (199.83.128.47) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1386864898.8114910125732421875;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1384250697.374701023101806640625;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Oct 3rd OpenStack Foundation Board Meeting</title>
		<link>https://blogs.gnome.org/markmc/2013/10/03/oct-3rd-openstack-foundation-board-meeting/</link>
		<pubDate>Thu, 03 Oct 2013 21:36:21 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=250</guid>
		<description></description>
		<content:encoded><![CDATA[On Oct 3rd, the OpenStack Foundation Board held a two hour conference call meeting which was open to anyone to join. <a href="https://wiki.openstack.org/wiki/Governance/Foundation/3Oct2013BoardMeeting">The agenda was published in advance.</a>

As usual, this my informal recollection of the meeting. It’s not an official record, etc. <a href="http://lists.openstack.org/pipermail/foundation/2013-October/001481.html">Jonathan published an official summary on the foundation mailing list</a>.

<h3>Preliminaries</h3>

Our chairman, Alan Clark began the meeting by holding a roll call. If my count was correct, we had 21 of the 24 members of the board on the call, which is a pretty good turnout.

Alan introduced Chris Kemp as a replacement for Devin Carlen who had been representing Nebula and the Gold Members. Chris briefly explained that changes in his role at Nebula has left him more time for "strategic stuff" and is delighted to spend more time with the OpenStack community and join the board. He thanked everyone for their work in progressing the foundation to date.

Before getting down to business, we quickly voted to approve <a href="https://wiki.openstack.org/wiki/Governance/Foundation/6Aug2013BoardMeeting">the minutes of the previous meeting</a>.

<h3>Executive Director Report</h3>

Jonathan Bryce took the floor and gave a really excellent update on the Foundation's progress.

First off, he described the launch of the <a href="http://www.openstack.org/marketplace/training/">OpenStack Foundation Training Marketplace</a> at LinuxCon in New Orleans. The site now has 12 companies listing training events at over 30 cities around the world and has seen over 10,000 unique visitors over the past 2 weeks. He reiterated how one of the Foundation's stated priorities for this year is to help training providers get the word out on their education programs and thereby expand the pool of people with OpenStack skills.

Next up, Jonathan gave an update on preparations for the <a href="http://www.openstack.org/summit/openstack-summit-hong-kong-2013/">OpenStack Summit in Hong Kong</a>. Everything is coming together nicely and the finalized speaking agenda has now been posted. He explained that, while they had received some 250 submissions for the summit in Portland, there were over 600 submissions for Hong Kong and yet not many extra speaking slots. The track chairs had a tough job whittling down the submissions but he thinks the end result is an agenda packed with great sessions. Jonathan warned that, unlike previous summits, we have a hard limit on the number of attendees and the "full access" passes will sell out in the next week or so.

Eileen asked exactly how many full access passes were issued and Jonathan explained there are 2,000 but that there are many more passes for the general sessions and expo hall. Joseph asked for some insight into the demographics of the registered attendees and how it compares to previous summits. Jonathan felt that we would see a large number of attendees from the region and that, while some companies may have reduced their numbers travelling from further afield, there would still be plenty of representation from all of the companies we are used to seeing at summits.

The discussion then moved on to looking ahead to 2014 and a sneak peak of next year's budget. Jonathan explained how 2013 was a great year financially - particularly because the summits were larger than expected - and the Foundation goes into 2014 with a healthy budget surplus of over $1M. We expect to continue to see large summits and this will lead to increased revenues and expenses. Jonathan expects the Foundation to continue to invest in technology and infrastructure over 2014. He described the Foundation funded projects in 2013 to improve the member database and tie it to the contributor agree process and an improved system for handling summit speaker submissions.

Rob Hirschfeld asked whether the Foundation had budgeted for certification testing infrastructure being proposed as part of the "what is core" discussion. Josh felt this it not be necessary for the Foundation to fund this, and there was a brief data tracking and authentication systems.

Jonathan continued by describing the rapid growth in Foundation staff during 2013, but that he expects ongoing staffing costs to have mostly levelled off for 2014. He went on to talk about how he sees the role of the Foundation over the next year to be around connecting different parts of the community, helping to gather data on users and deployments and sharing information with the world about new features in each release.

One Jonathan had finished, Lew Tucker congratulated Jonathan on the progress and asked whether a written summary could be prepared for board members so that we could help get the word out. Josh pointed out that we were soon due an annual report which would contain much of this information.

Josh then asked a question about the project budget for gold member fees and how many new members this assumed would be added in 2014. There was some confusion on the issue because gold member fees are based on the member's revenue, but the conclusion was that the addition of 4 new members was projected. This would bring the total number of gold members up to 20 out of a total possible 24 members.

<h3>Election Committee Report</h3>

Next up, Todd Moore delivered an excellent summary of the discussions and conclusions of the committee established to consider whether any changes were need for the individual and gold member director election systems and what those changes might be.

Todd's report - which will be published in full soon - described how we considered three separate questions. Firstly, whether and how concerns about the fairness of the individual member director election system (particularly the issue of large blocks of affiliated voters) should be addressed, secondly whether we should consider any rule changes around foundation employees eligibility for the individual member director election and, finally, whether the eligibility rules for the 2013 gold member director elections had been properly enforced.

The last topic was easily dispensed with - Todd and the committee worked with the foundation staff to verify that all eligibility rules (i.e. eligibility as a candidate and eligibility to vote) had been properly enforced.

The first topic proved to be substantially more contentious. The pros and cons of changing to an STV based election system or tweaking the rules of the current system to halve (from 8 to 4) the number of votes which you could allocate to a single candidate were explained in great detail. Todd explained how the committee felt that changes were not necessarily warranted but that it would be wise to seriously consider the option of the "max 4 votes per candidate" tweak.

A motion was proposed to not fundamentally change the voting system and was almost voted for until it became apparent that Monty wanted to speak but was unable to come off mute. Once that was sorted out, Monty stated that the cumulative system was utterly broken and that block voting did, in fact, influence the outcome of the election. He felt strongly that a change to STV was needed. The debate then took off in earnest with many well put points made by various members. I explained how I agreed fully with Monty but that I was convinced by the "it's working reasonably well; this doesn't warrant a the disruption of a bylaws change" but that we needed to be alert to any renewed concern from members after the next election. In the end the vote was passed with no abstentions and Monty voting against.

The discussion then moved on to the question of the "only 4 votes per candidate" tweak. Much of the discussion hinged on whether this tweak required a bylaws change. The election committee and Jonathan felt that it was compatible with the "cumulative voting system" language in in <a href="https://wiki.openstack.org/wiki/Governance/Foundation/Bylaws#ARTICLE_III._MEMBERSHIP_MEETINGS">section 3.9a of the bylaws</a> but legal counsel for the foundation (Mark Radcliffe) disagreed strongly and felt "cumulative voting" was "binary in the eyes of the law". Since the committee had suggested this tweak on the understanding that it was easy to implement, the idea was dropped.

Next, we discussed the second issue - the question of foundation employees on the board. The committee did not have a consensus recommendation on this but Todd did summarize the different viewpoints and arguments. One approach proposed that the executive director would be granted a new, automatic seat on the board and (because there is a limit of two members per organization), only one additional foundation employee could be elected to the board rather than the current limit of two employees. There was lots of debate and I felt Jonathan's input was particularly interesting - that he did not see the need for an automatic executive director seat and he had reservations about restricting employees from being directors since they could bring invaluable and passionate input, should the electorate choose to elect them. In the end, it was felt there was not sufficient cause to warrant a disruptive bylaws change and the motion was withdrawn.

So, in summary, there will be no election system changes proposed to the electorate during this cycle. However, the board again re-stated the importance that all members adhere to the <a href="http://www.openstack.org/legal/community-code-of-conduct/">community code of conduct</a> which states:

<blockquote>Respect the election process. Members should not attempt to manipulate election results. Open debate is welcome, but vote trading, ballot stuffing and other forms of abuse are not acceptable.</blockquote>

Finally, the committee took an action item from the board to analyze the results of the next election and provide the board with a report on the potential effect of any of the options proposed.

<h3>Wrapping Up</h3>

Because of the lengthy debate on the election system, we had run out of time and the rest of the agenda had to be postponed until the <a href="https://wiki.openstack.org/wiki/Governance/Foundation/4Nov2013BoardMeeting">in person board meeting in Hong Kong</a>.

<h3>Edits</h3>

<ul>
	<li>Changed from "legal counsel for the board" to "legal counsel for the foundation". Thanks to Richard Fontana for the correction.</li>
	<li>Included a reference to the code of comment. Thanks to Rob Esker for his question.</li>
</ul>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>250</wp:post_id>
		<wp:post_date><![CDATA[2013-10-03 21:36:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-10-03 21:36:21]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[oct-3rd-openstack-foundation-board-meeting]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<category domain="category" nicename="openstack-foundation-board-meeting"><![CDATA[openstack-foundation-board-meeting]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>446</wp:comment_id>
			<wp:comment_author><![CDATA[Rob Esker]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[esker@netapp.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[76.250.81.13]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-10-05 00:25:12]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-10-05 00:25:12]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Mark,

In the interest of clarity, do I understand correctly that the motion passed indicates no further change to voting systems in the interest of eliminating orchestrated block voting?  My company explicitly avoided such orchestration the last go around in the interest of fairness and to avoid the appearance of impropriety.  It sounds like the board, however, doesn't discourage the practice and if we decide to field a candidate we'd be foolish to not engage in such to advance their chances (after all it's undoubtedly the means several of the board owe their seat to).  Please advise if I have that right.

Thanks,
Rob Esker]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1380932712.0982649326324462890625;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1380964538.3562428951263427734375;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>447</wp:comment_id>
			<wp:comment_author><![CDATA[markmc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markbmc@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[79.97.49.99]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-10-05 09:26:59]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-10-05 09:26:59]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good question Rob.

I completely forgot to mention that part of the "it's not broken" thinking here is that we have a code of conduct which all board members feels should be adhered to. If it is being adhered to, then there is/will be no orchestrated voting happening.

I added a paragraph to the post and quoted the code of conduct.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1380965219.4015409946441650390625;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>455</wp:comment_id>
			<wp:comment_author><![CDATA[The 2014 OpenStack Individual Member Director Elections and Red Hat &laquo; Mark McLoughlin]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://blogs.gnome.org/markmc/2013/12/11/the-2014-openstack-individual-member-director-elections-and-red-hat/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[209.132.180.177]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-12-11 17:59:30]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-12-11 17:59:30]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] guilty of not pushing this election system issue hard enough over this past year. At one point I favoured experimenting with a tweak to the cumulative system over a more dramatic change because I found the prospect of getting a majority of over 25% of our [&#8230;]

[WORDPRESS HASHCASH] Snoopy failed to fetch results for the comment blog url (https://blogs.gnome.org/markmc/2013/12/11/the-2014-openstack-individual-member-director-elections-and-red-hat/) with error '' and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1386864874.8109829425811767578125;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1386784770.94188690185546875;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>A New OpenStack Technical Committee</title>
		<link>https://blogs.gnome.org/markmc/2013/10/18/a-new-openstack-technical-committee/</link>
		<pubDate>Fri, 18 Oct 2013 10:24:42 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=262</guid>
		<description></description>
		<content:encoded><![CDATA[The <a href="http://lists.openstack.org/pipermail/openstack-announce/2013-October/000152.html">results of the OpenStack Technical Committee</a> have just been announced. I'm very grateful to everyone who voted for me. Thanks!

This is going to be a very different committee than previously. For the first time, PTLs of integrated projects do not have an automatic seat. I think this will be a positive change and see TC members generally take more of an interest in cross-project issues. That said, we need to be careful to explicitly include PTLs in decision making which affect their projects.

One thing I'm curious about is how this new TC makeup will affect discussions about the increase in OpenStack's technical scope. I went through each of candidate's nomination emails and pulled out some quotes below. To me, this represents a high level of consensus towards a continued cautious and measured growth in the project's scope ... but make your own mind up! I'm actually quite surprised how many candidates felt it was important to give their views on this.

<a href="http://lists.openstack.org/pipermail/openstack-dev/2013-October/016048.html">Monty Taylor</a>

<blockquote>
I have an expansive view of the scope of OpenStack. I do not think that 'pure IaaS' as a limiting factor in the definition serves or will serve any of our users. I think that instead of trying to come up with random or theoretical labels and then keeping ourselves inside of the pre-defined label, we should focus on writing software that solves problems for users.
</blockquote>



<a href="http://lists.openstack.org/pipermail/openstack-dev/2013-October/016139.html">Russell Bryant</a>

  


<blockquote>
One of the most exciting things for me over the last year has been helping to expand OpenStack by including a number of new projects.  I think this growth is important for OpenStack's success.  I would like to continue to help guide this growth and to help figure out how OpenStack can scale as an organization and still be effective.
</blockquote>



<a href="http://lists.openstack.org/pipermail/openstack-dev/2013-October/016124.html">Anne Gentle</a>

  


<blockquote>
My goal is to provide an inclusive and supportive environment for projects while making OpenStack better for users and admins all the time. We are so fortunate to have the explosive growth and interest in OpenStack, and I want it to continue. We have built upon incredible ideas and I want us to be empowered to innovate.
</blockquote>



<a href="http://lists.openstack.org/pipermail/openstack-dev/2013-October/016123.html">Mark McLoughlin</a>

  


<blockquote>
We welcomed Heat, Ceilometer, Trove, Savannah, Marconi into the OpenStack family either as integrated or incubating projects. The TC carefully considered each of these applications and my own rule of thumb was "does it have a healthy contributor community and is it a sensible growth of OpenStack's scope?". I love to see this sustainable growth in our project and community.
</blockquote>



<a href="http://lists.openstack.org/pipermail/openstack-dev/2013-October/016163.html">Doug Hellmann</a>

  


<blockquote>
I share the view of many of the other candidates that OpenStack should not limit itself to today's definition of IaaS. The history of computing is a progression of different levels of abstraction, and what we consider "platform" today may become "infrastructure" tomorrow.
</blockquote>


<a href="http://lists.openstack.org/pipermail/openstack-dev/2013-October/016107.html">Sean Dague</a>

  

<blockquote>
I'm incredibly excited by OpenStack's growth (in people, code, scope), which I attribute to an incredibly welcoming and constructive community, and the velocity we get out of our preemptive integration system. As a TC member I'd do my best to ensure those conditions remain. I think we've only just begun to see what OpenStack will become [..]
</blockquote>



<a href="http://lists.openstack.org/pipermail/openstack-dev/2013-October/016067.html">James E. Blair</a>

  


<blockquote>
As a significant OpenStack user, I'm excited about the direction that OpenStack is heading.  I'm glad that we're accepting new programs that expand the scope of our project to make it more useful for everyone.  I believe a major function of the Technical Committee is to curate and shepherd new programs through the incubation process.  However, I believe that it should be more involved than it has been.  We have been very quick to promote out of integration some exciting new projects that may not have been fully integrated.  As a member of the TC, I support our continued growth, and I want to make sure that the ties that hold our collection of projects together are strong, and more than just a marketing umbrella.
</blockquote>



<a href="http://lists.openstack.org/pipermail/openstack-dev/2013-October/016081.html">Michael Still</a>

  


<blockquote>
First off, the TC has incubated a number of projects in the Havana release, and I'd like to see that continue. I think its important that we build a platform that includes the services that a deployer would
need to build a cloud and that those platform elements work well together. Now, its clear that not everyone will deploy all of the projects we are incubating, but I think its still important that they play well together and have a consistent look and feel.
</blockquote>



<a href="http://lists.openstack.org/pipermail/openstack-dev/2013-October/016146.html">John Griffith</a>

  


<blockquote>
New projects and growth are important to OpenStack however I don't think that uncontrolled and disjointed growth in the form of new projects is a good thing, in fact I think it's detrimental to OpenStack as a whole.  I personally would like to see the TC have more involvement in terms of recommending/investigating new projects before they're proposed or started by others.  By the same token, I'd also like to see the TC take a more active role in the projects we currently have and how they all tie
together.  I personally believe that having 10 or so individual projects operating in their own silos is not the right direction.  My opinion here does NOT equate to "more control", but instead should equate to being more helpful.  With the continued growth of OpenStack I believe it's critical to have some sort of vision and some resources that have a deep understanding of the entire eco-system.
</blockquote>



<a href="http://lists.openstack.org/pipermail/openstack-dev/2013-October/016381.html">Mark McClain</a>

  


<blockquote>
The issue of scope was a recurring theme during my recent term on the TC. As the OpenStack ecosystem grows beyond Infrastructure as a Service, the committee needs to more clearly define the criteria used to determine the kind of projects and programs that fit within the scope of integrated releases and how they move through the progression of incubation to graduation.  In addition to defining the criteria, the Technical Committee should to work develop policies and procedures to provide some guidance to projects which are outside of the scope an integrated release, but valuable to our community.
</blockquote>



<a href="http://lists.openstack.org/pipermail/openstack-dev/2013-October/016324.html">Robert Collins</a>

(I don't see a directly relevant quote from Robert)

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>262</wp:post_id>
		<wp:post_date><![CDATA[2013-10-18 10:24:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-10-18 10:24:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[a-new-openstack-technical-committee]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>448</wp:comment_id>
			<wp:comment_author><![CDATA[Wayne]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[wayn2019rx@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[24.55.58.122]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-10-18 19:43:43]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-10-18 19:43:43]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Having no relevant quote from Robert Collins is it something we should worry about ? 

2 from HP

2 from Rackspace

2 from dreamhost

2 from redhat

is it something we should worry about? only large companies gets voted in in openstack]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1382345870.6864941120147705078125;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1382125423.7295849323272705078125;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>449</wp:comment_id>
			<wp:comment_author><![CDATA[markmc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markbmc@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[217.173.99.61]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-10-21 09:13:03]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-10-21 09:13:03]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm surprised that Robert is the only one who didn't comment directly on this - we all naturally have our particular interests and focus. Not everyone need make their opinion on this a key part of their election platform. I'm sure Robert does have a well formed opinion on it, though.

As for affiliations - I hadn't actually considered how the affiliations worked out. I've full confidence that everyone on this TC will naturally represent the interests of the project over their affiliation. I also think these candidates were elected based on their contributions and leadership rather than their affiliation.

Let's tally up all the affiliations - 2 from HP, 2 from Rackspace, 2 from Dreamhost, 2 from Red Hat, 2 from the OpenStack Foundation, 1 from IBM, 1 from SolidFire, 1 from Nebula. That's just AFAIK - people sometimes change affiliation and it takes a while to even realize.

Even if you assume that affiliation is important here, the breakdown doesn't worry me. It's actually a pretty decent spread across the main contributing organizations. Do you think there should be more TC members affiliated with smaller companies? Or unaffiliated TC members?

If you mean unaffiliated, I would love to see this too (based on my experience with unaffiliated contributors making a big impact on other open-source projects) but there is a (positive IMHO) reality in OpenStack - any significant leader on this project would have no trouble at all finding full time employment working on OpenStack. What better way to dedicate more of your energy to OpenStack than to work on it full time?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>448</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1382346783.5348370075225830078125;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>OpenStack &quot;Core&quot; and Interoperability</title>
		<link>https://blogs.gnome.org/markmc/2013/10/30/openstack-core-and-interoperability/</link>
		<pubDate>Wed, 30 Oct 2013 21:49:49 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=267</guid>
		<description></description>
		<content:encoded><![CDATA[I've been following the <a href="http://robhirschfeld.com/2013/07/22/kicking-off-core/">"what is core?" conversation</a> since the <a href="https://wiki.openstack.org/wiki/Governance/Foundation/IncubationUpdate2013">"Incubation Update" committee</a> completed its work some time ago. I'm really happy to see Rob, Alan and others put so much work into moving this along, but each time I try to catch up on progress I find myself a little bewildered.

Since it's going to be a big topic during <a href="https://wiki.openstack.org/wiki/Governance/Foundation/4Nov2013BoardMeeting">next week's board meeting</a>, I figured I'd try to get my thoughts together here.

<h3>What's it all About?</h3>

Even the question bothers me - &quot;what is core?&quot;. Why is that an important question?

One reason for its importance is that the bylaws say:

<blockquote>The Core OpenStack Project means the software modules [...] for which an OpenStack trademark may be used</blockquote>

In other words, Heat can&#039;t call itself &quot;OpenStack Orchestration&quot; unless the Board of Directors approve Heat as part of &quot;The Core OpenStack Project&quot;. If that was all this was about, I&#039;d be like &quot;hell yes! Heat should be known as OpenStack Orchestration!&quot;. But, it&#039;s clearly not just about this, so I tend to ignore this aspect. I don't actually think much of what is being discussed is all that relevant to this particular issue.

So, what else is this all about? Well, one clue is the emphasis on testing in <a href="http://robhirschfeld.com/2013/08/13/openstack-core-positions/">Rob's list of "10 core positions"</a>.

<blockquote>OpenStack Core means passing all “must-pass” tests</blockquote>

This is an example of where I get really confused. Maybe I'm just getting hung up on language. I think we're talking about cloud providers, distributions, vendors, deployers, etc. self-certifying themselves using a test suite in order that they can use the OpenStack trademark. But are we talking about labelling these self-certified clouds as "Core"? Aren't we making this all very confusing by using the term "Core" both to describe the self-certified clouds/products and also to describe the subset of OpenStack they are required to include? I'd phrase this as:

<blockquote>The OpenStack Core definition includes a list of tests which certified clouds must pass</blockquote>

Anyway, I'm not going to nitpick my way through all of this. I <em>think</em> I understand the intent here, but I like to approach this from an entirely different angle.

<h3>A Market of Interoperable OpenStack Providers</h3>

(Yes, that is Simon Wardley's terminology)

We all know that one of the basic goals of OpenStack is for there to be a bunch of public clouds available to users around the world and that interoperability between these public OpenStack clouds will make it easier for users to switch cloud providers and encourage competition between these providers.

To my mind, that's what this whole "what is core?" conversation is really about. We want to use an OpenStack trademark program to help build this marketplace by enforcing interoperability between clouds which use the OpenStack trademark.

(And yes, I understand that the "what is core?" discussion is also related to questions like what is required of an OpenStack distribution. I'm focusing on the question of public cloud interoperability because I think it's the most important. IMHO, the whole conversation is pointless unless it moves this particular topic along quickly.)

To do that, we need to define which APIs these clouds must expose, or as Rob puts it - which use cases these clouds must support. To take a simple example, should these clouds be required to expose the Glance API for uploading images?

And here's where I get confused again. Why are we talking about "what is core?" when we could simply say "which APIs are required to be exposed by certified OpenStack clouds?". Again, I'm trying not to be a pedant, but the way the question is framed leaves me unsure whether we're really all talking about the same thing.

I think the focus should be on immediate baby-steps towards kick-starting this marketplace. One simple question - if and when we certify the first batch of interoperable clouds, would we rather have a smaller number of big clouds included or a large number of smaller clouds? In terms of resource capacity provided by this marketplace, I guess it's more-or-less the same thing.

Let's assume we absolutely want (at least) a small number of the bigger providers included in the program at launch. Let's say "small number" equals "Rackspace and HP". And let's assume both of these providers are very keen to help get this program started. Isn't the obvious next baby-step to get representatives of those two providers to figure out exactly what level of interoperability they already have and also what improvements to that they can make in the short term?

If we had that report, we could next do a quick "sniff test" comparing this to many of the other OpenStack clouds out there to make sure we haven't just picked two clouds with an unusual set of compatible APIs. Then the board could make a call on whether this represents a reasonable starting point for the requirements of OpenStack clouds.

No, this isn't perfect. But it would be a genuine step forward towards being able to certify some clouds. We would have some data on commonalities and have made a policy decision on what commonalities are required. It would be a starting point.

<h3>OpenStack Compatible?</h3>

The next big decision for the board is whether a cloud which uses the OpenStack trademark must actually be a deployment of OpenStack's code. Is this a question of "OpenStack clouds" or "OpenStack compatible clouds"?

I do think it would be damaging to OpenStack if this marketplace took off and was dominated by providers which don't use or contribute to OpenStack. But, <a href="http://robhirschfeld.com/2013/07/22/making-openstack-meaningful/">as Rob says</a>, the trademark isn't the only way of avoiding this situation - there's also our "velocity and culture".

I struggle to see how trademark requirements around the use of OpenStack code would work. How do you define which code must be used? Must that code be used unmodified? If not, how much can you change? What does it even mean to "use" a piece of code? That user requests must be executed using that code? Maybe this would just be a "yes, we use and contribute to OpenStack" good faith statement which the Foundation would make a judgment call on? If so, how do we ensure transparency and fairness around how that call is made?

If this question proves to be a stumbling block, I'd prefer to see an "OpenStack compatible cloud" trademark program established quickly. Getting these interoperability guarantees in place for our users takes priority over ensuring that certified providers actually use and contribute to OpenStack.

<h3>Conclusion of Sorts</h3>

I think our immediate concern should be kicking off a trademark program for certifying interoperability between OpenStack clouds. I'm frustrated whenever I think this "what is core?" discussion is tackling questions which aren't immediate blockers to making progress on this program.

The board has to make (or oversee the making of) some policy questions.

Firstly, what APIs are required in OpenStack™ clouds? I'd favour starting to answer this by first looking at the current interoperability levels between existing clouds.

Secondly, whether and how we insist on the use of OpenStack code in OpenStack™ clouds. If this turns out to be a difficult problem, then I think we should just start with an "OpenStack™ compatible cloud" program.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>267</wp:post_id>
		<wp:post_date><![CDATA[2013-10-30 21:49:49]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-10-30 21:49:49]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[openstack-core-and-interoperability]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>450</wp:comment_id>
			<wp:comment_author><![CDATA[bochecha]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[bochecha@fedoraproject.org]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[175.45.17.220]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-10-31 03:40:11]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-10-31 03:40:11]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Unrelated to your article, but you might want to make your hackergotchi "slightly" smaller.

It takes ages to load on Planet Fedora, and in Liferea it takes more than a whole page, I have to scroll quite a bit before getting to the content of your articles. :)

See also on the "heads" page: http://planet.fedoraproject.org/heads/]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1383301082.8431580066680908203125;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1383190811.6922390460968017578125;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>451</wp:comment_id>
			<wp:comment_author><![CDATA[Rob Hirschfeld]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[rob@zehicle.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://robhirschfeld.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[113.28.134.161]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-11-01 10:13:33]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-11-01 10:13:33]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I've been thinking about your comments and you've helped me see what's confusing about how we talk about "OpenStack Core."  People see it very differently if they are taking a dev approach vs. an implementor approach.  

Developers tend to hear "OpenStack Core" and feel like we are discussion if a project is important or not.  If a project is not 'core' then it's not critical to OpenStack.  That's is not the intention of the core definition.  Many projects can be _integrated_ into OpenStack and have unique and important use-cases for the community.  Projects that are recognized by the TC don't have to worry about trademark - they are OpenStack projects.

Implementers are asking for "OpenStack Core" to tell them what is the minimum set of stuff they are required to use for OpenStack to interoperate with other deployments.  This is the intention of the core definition.  

For implementations (either service offerings or products) offered commercially, it is important for users to know that these products conform to some minimum (or core) set of OpenStack function. 

Thanks for helping drive the discussion.  I hope these comments help.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1383301085.011457920074462890625;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1383300813.1595079898834228515625;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>452</wp:comment_id>
			<wp:comment_author><![CDATA[markmc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markbmc@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[79.97.49.99]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-11-01 11:05:11]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-11-01 11:05:11]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks Rob

Projects which graduate from Incubation to Integrated do worry about the trademark - take Heat as an example. It is known as the "OpenStack Orchestration" program/project (see https://wiki.openstack.org/wiki/Heat) but yet because of this "Core" designation thing, whether and when it can use that name is ambiguous. People do care about this. I'd say we don't need to use the term "Core" in this context, except not doing so would require a bylaws change.

I wouldn't say implementers are looking for "core" - they're looking to associate the trademark with their product and we want to require them to be interoperable with other OpenStack implementations in order to do that. (And yes, hopefully implementers want to be interoperable even if it isn't a trademark requirement). But we don't need to call these requirements for interoperability "core".

We also want to have some requirements around what code implementers need to run in order to use the trademark. We don't need to call these requirements "core" either.

That's three separate things - bylaws rules around projects calling themselves OpenStack Foo, using the trademark to drive interoperability and requiring the use of certain code to access the trademark.The second one is the one we absolutely must make progress on.

We clearly have a situation where a single word means a lot of different things to a lot of different people. If we stopped using the word, at least until we have actually made some decisions and forward progress putting these decisions into practice, then I think there'd be a lot more clarity.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1383303912.0089519023895263671875;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>453</wp:comment_id>
			<wp:comment_author><![CDATA[markmc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markbmc@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[79.97.49.99]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-11-01 11:15:53]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-11-01 11:15:53]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[bochecha - thanks, I updated that file recently and forgot it was used on the planets. Fixed now]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1383304553.094873905181884765625;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>463</wp:comment_id>
			<wp:comment_author><![CDATA[Cloud Computing Interoperability: The State of the Industry, 2014Open Cloud Advisors]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://opencloudadvisors.com/cloud-computing-interoperability-the-state-of-the-industry-2014/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[50.87.144.167]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-12-30 20:03:27]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-12-30 20:03:27]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] OpenStack “Core” and Interoperability « Mark McLoughlin [&#8230;]

[WORDPRESS HASHCASH] The comment's server IP (50.87.144.167) doesn't match the comment's URL host IP (192.254.190.27) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1389564445.3422229290008544921875;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1388433807.9465739727020263671875;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>The 2014 OpenStack Individual Member Director Elections and Red Hat</title>
		<link>https://blogs.gnome.org/markmc/2013/12/11/the-2014-openstack-individual-member-director-elections-and-red-hat/</link>
		<pubDate>Wed, 11 Dec 2013 17:59:14 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=281</guid>
		<description></description>
		<content:encoded><![CDATA[tl;dr - the affiliation limit means that at most one of the two Red Hat affiliated candidates can be elected. The cumulative voting system makes it likely that both of us running seriously damages both of our chances of being elected. A preferential voting system like <a href="https://wiki.openstack.org/w/images/4/41/Condorcet-briefing_10_16_2013.pdf">Condorcet</a> or <a href="https://wiki.openstack.org/w/images/f/f1/OpenStack_Board_Briefing_on_STV_10_16_2013.pdf">STV</a> would not have this problem.

--

At Red Hat, those of us who contribute to OpenStack take very seriously our responsibility to put what's good for the project first and foremost in our minds - to wear our "upstream hat", as we like to say. That's especially true for me and Russell Bryant.

However, now that the <a href="https://www.openstack.org/election/2014-individual-director-election/CandidateList">candidate list for the 2014 OpenStack Individual Member Director Elections</a> has been finalized, we find ourselves wrestling with the fact that Russell and I are both running as candidates. Two aspects of our election system make this a problem. First, the cumulative voting system means that those who would be happy to vote for either me or Russell are forced to choose between us - essentially, we are damaging each others' chances of being elected. Secondly, the affiliation limit means that even if we were both lucky enough to receive enough votes to be elected, one of us would be eliminated by the limit.

The combination of these two issues means that we have to factor our affiliation into our decision. The rules place affiliation front and centre in election system, even though Individual Member Directors are not elected to represent their employer.

Now, I'm personally guilty of not pushing this election system issue hard enough over this past year. At one point <a href="http://blogs.gnome.org/markmc/2013/10/03/oct-3rd-openstack-foundation-board-meeting/">I favoured experimenting with a tweak to the cumulative system</a> over a more dramatic change because I found the prospect of getting a majority of over 25% of our enormous electorate to vote in favour of a change so daunting. I want to be completely open about this decision we now face because I want to help raise awareness about how important an issue it is.

Given that Red Hat is a Platinum Member and has a automatic seat on the board, the options we're weighing up are:

<ol>
	<li>Continue with both Russell and me on the ballot, accepting the risk that we're damaging each others chances.</li>
	<li>I or Russell remove ourselves from the ballot, giving the other of us the best possible chance of being elected.</li>
	<li>Brian Stevens steps down from the board and I or Russell takes his place, giving whichever of us remains on the ballot the best possible chance of being elected.</li>
</ol>

It's not an easy decision. We both feel we have something to offer on the board. Both of us would be very proud to be elected to represent the Individual Members. Both of us feel that Brian Stevens (our CTO who we greatly respect) is the best possible representative for Red Hat on the board.

We will make a decision on this before the election, but right now we don't see any of the options as being particularly better than the others. But, at the very least, I hope everyone will find this useful as a concrete example of why our election system needs to change.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>281</wp:post_id>
		<wp:post_date><![CDATA[2013-12-11 17:59:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-12-11 17:59:14]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[the-2014-openstack-individual-member-director-elections-and-red-hat]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>456</wp:comment_id>
			<wp:comment_author><![CDATA[Col]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[col.macnamara73@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[109.79.103.231]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-12-11 18:19:50]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-12-11 18:19:50]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Why does it need to change? Why should Red Hat (or anyone else) be allowed to have as many representatives as it likes? It's a pretty common scenario in software community elections, and most companies manage to figure it out easily enough before letting employees put their names forward, not afterwards.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1386827704.9098799228668212890625;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1386785990.5534060001373291015625;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>457</wp:comment_id>
			<wp:comment_author><![CDATA[john]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[j@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[24.199.98.94]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-12-12 06:14:49]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-12-12 06:14:49]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I totally agree with Col above. 

And in general when such rule is in place, you make compromise. Neither of you wants to give up to be on the director board and that's the issue. Take turn. Respect each other. Internally you Redhat has to vote on what to do with OpenStack and have your director representative represent RedHat in the director board. 

Changing the system to allow two? What if there are more than two from the same company? I think the system is fine. I am sorry, but your argument is very weak.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1386828889.8075129985809326171875;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1386864799.12479305267333984375;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>458</wp:comment_id>
			<wp:comment_author><![CDATA[markmc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markbmc@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[79.97.49.99]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-12-12 06:25:33]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-12-12 06:25:33]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Colin - the main thing the Board has been working on changing is the voting system. See https://wiki.openstack.org/wiki/Governance/Foundation/ElectionsCommittee

The cumulative system sucks in this situation because my running likely takes votes away from Russell and, likewise, Russell's running likely takes votes away from me.

A preferential voting system like Condorcet or STV wouldn't have this issue. We could both run without (substantially) damaging the chances of the other.

I mention the affiliation limit because, without the limit, at least the risk of damaging each other might be worth taking - we could hold out the hope that we'd both be elected.

So, yes - we have to figure it out between ourselves before the election. But we'd much rather the individual members had the chance to express their preference rather than us guessing their wishes.

I think it's unlikely we'll change the affiliation limit any time soon, but bear in mind that the individual member directors do not (and should not) represent their employers. I do not consider myself a Red Hat representative on the board.

And to be clear - these issues don't only apply to our situation. I'm sure there are others who are equally as affected. We're being open about this in order to help raise awareness about the issues with the voting system.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1386829533.5419580936431884765625;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>459</wp:comment_id>
			<wp:comment_author><![CDATA[John]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[J@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[24.199.98.94]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-12-12 06:50:45]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-12-12 06:50:45]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You just deleted my message when it clearly wasn't a spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1386864807.22894191741943359375;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1386831045.212757110595703125;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>461</wp:comment_id>
			<wp:comment_author><![CDATA[markmc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markbmc@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[79.97.49.99]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-12-12 16:21:14]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-12-12 16:21:14]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[john - sorry, I didn't delete your message, I just didn't get a notification so never approved it

Hopefully my response to Colin helps - the main issue is that the voting system makes it damaging to both of us if we both run. Preference based voting systems would mean it's fine for both of to run and let members express their opinions more fully on us as candidates.

Also, to repeat - the affiliation limit does tend to suggest that individual members represent their employers, but that's absolutely not the case. We see ourselves as representatives of the individual membership.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1386865274.833095073699951171875;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>462</wp:comment_id>
			<wp:comment_author><![CDATA[OpenStack Community Weekly Newsletter (Dec 6 &#8211; 13) &raquo; The OpenStack Blog]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.openstack.org/blog/2013/12/openstack-community-weekly-newsletter-dec-6-13/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[67.192.46.14]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-12-13 23:14:27]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-12-13 23:14:27]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] The 2014 OpenStack Individual Member Director Elections and Red Hat [&#8230;]

[WORDPRESS HASHCASH] The comment's server IP (67.192.46.14) doesn't match the comment's URL host IP (174.143.194.225) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1387114768.28030109405517578125;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>OpenStack, Meritocracy and Diversity</title>
		<link>https://blogs.gnome.org/markmc/2014/01/12/openstack-meritocracy-and-diversity/</link>
		<pubDate>Sun, 12 Jan 2014 22:20:04 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=289</guid>
		<description></description>
		<content:encoded><![CDATA[These days, any time I reach for the word "meritocracy" when I want to explain something about OpenStack's technical community and its governance, I give pause.

Clearly, <a href="http://www.aaronsw.com/weblog/meritocracy">in some circles</a>, the concept of "meritocracy" has been seriously discredited and represents a system whereby elites perpetuate their power by tilting the rules in favour of themselves.

I'm not much of a political thinker and my understanding of internal American politics is pretty limited (think watching The West Wing and vaguely following the spectacle of a presidential election) so the first time I really encountered the term was in the context of the GNOME project. From the <a href="https://wiki.gnome.org/action/show/FoundationBoard/Resources/Charter">GNOME Foundation Charter</a>:

<blockquote>
GNOME is a Meritocracy

A corporation, organization or individual should not be granted a place in the foundation unless its presence is justified by the merits of its contribution. Money cannot buy influence in the GNOME project: show us the code (or documentation, or translations, or leadership, or webmastering...).</blockquote>

and, subsequently, other projects like the ASF. From <a href="http://www.apache.org/foundation/how-it-works.html#meritocracy">How The ASF Works</a>:

<blockquote>When the group felt that the person had "earned" the merit to be part of the development community, they granted direct access to the code repository, thus increasing the group and increasing the ability of the group to develop the program, and to maintain and develop it more effectively.

We call this basic principle "meritocracy": literally, government by merit.

What is interesting to note is that the process scaled very well without creating friction, because unlike in other situations where power is a scarce and conservative resource, in the apache group newcomers were seen as volunteers that wanted to help, rather than people that wanted to steal a position.

Being no conservative resource at stake (money, energy, time), the group was happy to have new people coming in and help, they were only filtering the people that they believed committed enough for the task and matched the human attitudes required to work well with others, especially in disagreement.</blockquote>

To me, the "power" we're talking about here is the ability, permission or empowerment to get stuff done which advances the project. In some projects that means commit access, but ultimately it means building up the respect and trust of the other contributors to the project such that you can more easily influence and drive the direction of the project. You achieve that "power" by getting useful stuff done (defined broadly - code, documentation, translations, leadership, marketing, advocacy, etc.) and all it grants you is the ability to get more useful stuff done. In a healthy project, we want to give that power to more and more people rather than concentrating it in a small elite.

This is what we mean when we say "OpenStack is a technical meritocracy". I hate to think of those well-meaning principles of project governance being sullied by "meritocracy" being used to explain away the social inequities in U.S. politics. I also don't like to think of us seeing these principles as some sort of platonic ideal that don't require us to constantly evaluate how we empower people to help advance OpenStack.

One hint that all is not perfect is the level of diversity within the project. Yes, we have diversity of opinions and a diversity of sponsoring organizations, but we don't have an impressive level of gender, race or cultural geography.

My good friend from GNOME days, Daniel Veillard, <a href="http://www.youtube.com/watch?v=-wslrgu324M&amp;t=1960">asked this question of the Technical Committee in Hong Kong</a>:

<blockquote>We are in China. There is no Asian on the podium. What can you do to actually try to improve the situation?</blockquote>

Yes, we have a meritocracy and anyone can advance to leadership positions within the project, but we need to recognize that there are extremely difficult language and cultural hurdles in front of many.

An example of these barriers is how we often conduct our Design Summit sessions. Quite regularly - especially when you get a large number of the more established contributors in the room together, folks who are good friends who understand each other well - the discussion can often devolve into a punchy flow of casual in-joke ridden sound-bites. I'm as much to blame for that as anyone, but sometimes I think back and shudder at how hard it must be for someone outside of the "in group" to join that discussion.

I've seen a number of examples where a new non-native English speaker has paired with an existing contributor to lead a design summit session about their work. What can work really well is that the existing contributor can help to engage the attendees, slow down the conversation and ensure the new contributor understands the feedback being given ... without attempting to take credit for the work of the new contributor. This is just one technique we could use to empower new contributors.

Anyway, in summary - I think OpenStack's "meritocracy" is a well-meaning model for empowering contributors (and celebrating their contributions) but we should all be on the lookout for ways that we can make a special effort to empower contributors from groups which are not already well represented in the leadership of the project.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>289</wp:post_id>
		<wp:post_date><![CDATA[2014-01-12 22:20:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-01-12 22:20:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[openstack-meritocracy-and-diversity]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>465</wp:comment_id>
			<wp:comment_author><![CDATA[Troy Toman]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[troy@tomanator.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[24.155.175.47]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-01-17 05:09:54]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-01-17 05:09:54]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thoughtful write up. There is some research emerging on this more broadly that might be of interest. http://asq.sagepub.com/content/55/4/543.short

It is definitely something we need to be aware of and thoughtfully work to avoid.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1391790156.51249599456787109375;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1389935394.1241691112518310546875;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Jan 30 OpenStack Foundation Board Meeting</title>
		<link>https://blogs.gnome.org/markmc/2014/02/07/jan-30-openstack-foundation-board-meeting/</link>
		<pubDate>Fri, 07 Feb 2014 16:41:39 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=293</guid>
		<description></description>
		<content:encoded><![CDATA[The <a href="https://www.openstack.org/foundation/board-of-directors/">OpenStack Foundation Board of Directors</a> met for a two hour conference call last week. This was the first meeting of the board since the recent <a href="http://lists.openstack.org/pipermail/foundation/2014-January/001616.html">Individual</a> and <a href="http://lists.openstack.org/pipermail/foundation/2014-January/001615.html">Gold</a> member director elections.

As usual, this my informal recollection of the meeting. It’s not an official record, etc.

Your trusty reporter had just arrived in Brussels for FOSDEM and got to stay in his hotel room for this meeting rather than sampling Belgian's fine beers. Oh, the sacrifices we make! :-P

<h3>Preliminaries</h3>

As usual, calling the meeting to order was a challenge and it was at least 15 minutes after the scheduled start before we completed the roll call.

Next, Alan welcomed our new directors:

<ul>
	<li>Yujie Du</li>
	<li>Alex Freedland</li>
	<li>Vish Ishaya</li>
	<li>Imad Sousou</li>
</ul>

and thanked our outgoing directors:

<ul>
	<li>Nick Barcet</li>
	<li>Hui Cheng</li>
	<li>Joseph George</li>
	<li>Lauren Sell</li>
</ul>

as well as thanking those directors who served on the board for part of 2013:

<ul>
	<li>Devin Carlen</li>
	<li>Jim Curry</li>
	<li>John Igoe</li>
	<li>Kyle MacDonald</li>
	<li>Jon Mittelhauser</li>
</ul>

<h3>Policies, Communication Channels and Meetings Schedule</h3>

Since it's a new year, we took the opportunity to review the various policies which apply to board members.

Josh went over our <a href="http://www.openstack.org/legal/transparency-policy/">transparency policy</a> mentioning that the board endeavours to be as transparent as possible, with board meetings open to the public, a summary of meetings posted to the foundation list and directors encouraged to use the foundation mailing list for discussions. Sub-committees of the board are expected to be similarly transparent, with wiki pages and public mailing lists. Some caveats to this policy are that board members are not allowed to make public comments about the board meeting until after Jonathan has posted his summary (or 72 hours have passed), members should not discuss executive sessions and the distribution of some non-public documents may have to be limited to directors.

Alan also mentioned our <a href="https://wiki.openstack.org/wiki/Governance/Foundation/CodeOfConduct">Code of Conduct</a> and encouraged directors to read it carefully. Finally, Jeff from DLA Piper walked us through our <a href="https://wiki.openstack.org/wiki/Governance/Foundation/AntitrustPolicy">antitrust policy</a> where he emphasised the importance of avoiding even the perception that board members are coming together to advance the interests of some companies over others. Members should restrict themselves to pro-competitive collaboration.

Next, we quickly reviewed the various channels for communication that directors need to be aware of - webex for conf calls, the foundation and foundation-board mailing lists, the #openstack-board and #openstack-foundation IRC channels, informal etherpads that we use during board meetings and the various committee mailing lists.

Finally, we discussed the upcoming board meetings - an all-day face-to-face meeting in Palo Alto on March 4, a 2 hour conference call on April 3, an all-day face-to-face meeting in Atlanta on May 11 in advance of the Atlanta summit and another face-to-face on July 21 at OSCON.

The subject of the timing of the Atlanta face-to-face was raised again. May 11 is also Mother's Day (in the US and some other countries) which is a nasty conflict for many board members. However, a poll amongst board members had already established that no better time around the summit could be found, so we are proceeding with the meeting on May 11. The question was raised about whether future board meetings should be scheduled to not align with our summits, but the objection to this idea was that it puts too much of a time and budget strain on those members who have to travel a long distance for the meetings.

<h3>Status Reports From Committees</h3>

Finally, time to move on to some more meaty topics! A member of each committee of the board was asked to provide a status update and plans for the year ahead.

Alan first described the work of the <a href="https://wiki.openstack.org/wiki/Governance/CompensationCommittee">compensation committee</a> who are responsible for defining and evaluating the goals and performance of the Executive Director. In summary, the committee concluded that Jonathan met his 2013 goals and new goals have been set for 2014.

Next up, Sean Roberts talked about the finance committee. This committee works with the foundation staff on financial budgeting and accounting. Sean described the foundation's IRS filing and that the foundation's 2012 financial audit has been completed and deemed clean (with a note that the foundation is "operating on a cash basis"). The foundation's application for 501(c)(6) is progressing with the IRS asking for some clarifications which were returned to them in December. The committee meets monthly to review any discrepancies above 10%, but there have been no such issues so far. Essentially, everything is in excellent shape.

Tim Bell talked through the latest from the <a href="https://wiki.openstack.org/wiki/Governance/Foundation/UserCommittee">user committee</a>. Tim mentioned the user survey that was published at the Hong Kong summit and how the committee has asked the TC for input on the kind of feedback that would be useful for developers. The committee is preparing to run another survey in advance of the Atlanta summit. Tim also mentioned that the user committee is running a couple of small, focused "operator mini-summits" over the next few months to bring operators together to share their feedback. Tim described the challenge running the committee with a small number of core volunteer members so as to ensure the privacy of survey results while also encouraging volunteers to help with tasks like turning survey feedback into blueprints for new features.

Van Lindberg gave an update on the <a href="https://wiki.openstack.org/wiki/Governance/Foundation/LegalAffairsCommittee">legal affairs committee</a>. He emphasised that the committee is not counsel for the foundation or the board, but rather a group which makes recommendations to the board on IP policy. He recapped on some of the patent policy recommendations from last year, for example that the foundation should join OIN. There was a brief mention of the fact that all the committee members are currently lawyers and the by-laws limits the number of members to five. He also mentioned that the DefCore committee has a related sub-committee examining possible by-laws changes.

Todd described the <a href="https://wiki.openstack.org/wiki/Governance/Foundation/ElectionsCommittee">elections committee</a>, that is was formed in February 2013 with 8 members and the goal to consider possible changes to the individual member election process. The committee is currently considering proposing a change to either Condorcet or STV and held a town-hall meeting in Hong Kong on the subject. Todd noted that the meeting was lightly attended and there generally has been rather low participation in the process. The main hurdle to getting such a change passed is that a majority of at least 25% of our individual members would need to vote for the by-laws change and the turnout for the previous election was only 17%. However, in July we will be able to begin making inactive members ineligible for voting and this should help us achieve the required turnout.

Rob gave an update from the DefCore committee[5] which is considering changes to the requirements for commercial implementations of OpenStack who wish to use the OpenStack trademark. The committee is currently working to identify a set of must-pass tests and the functional capabilities which these correspond to. Rob mentioned that some projects currently have no or minimal test coverage and, as a result, their capabilities could not be considered for inclusion in the requirements. Rob also mentioned a "programs vs projects" issue which had been identified during the committee discussions and that a meeting with the TC would be required to resolve the issue. I proposed that Rob and Josh could join the TC's IRC meeting to discuss the issue.

Finally, Simon gave a brief overview of the work of the gold member application committee. This committee helps prospective gold members prepare their application such that it fully anticipates all the questions and concerns the board may have about the application.

<h3>Wrapping Up</h3>

While there were some small number of other items on the agenda, we had run out of time at this point. In the short time available, we had covered a broad range of topics but hadn't really covered new ground. This meeting was mostly about rebooting the board for 2014.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>293</wp:post_id>
		<wp:post_date><![CDATA[2014-02-07 16:41:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-02-07 16:41:39]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[jan-30-openstack-foundation-board-meeting]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<category domain="category" nicename="openstack-foundation-board-meeting"><![CDATA[openstack-foundation-board-meeting]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>466</wp:comment_id>
			<wp:comment_author><![CDATA[OpenStack Community Weekly Newsletter (Feb 7 &#8211; 14) &raquo; The OpenStack Blog]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.openstack.org/blog/2014/02/openstack-community-weekly-newsletter-feb-7-14/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[67.192.46.8]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-02-15 01:38:55]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-02-15 01:38:55]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] Jan 30 OpenStack Foundation Board Meeting [&#8230;]

[WORDPRESS HASHCASH] The comment's server IP (67.192.46.8) doesn't match the comment's URL host IP (174.143.194.225) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1392792530.5038878917694091796875;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Naked Pings</title>
		<link>https://blogs.gnome.org/markmc/2014/02/20/naked-pings/</link>
		<pubDate>Thu, 20 Feb 2014 14:56:07 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=297</guid>
		<description></description>
		<content:encoded><![CDATA[Back in November 2009, <a href="http://people.freedesktop.org/~ajax/">ajax</a> sent an email on IRC etiquette to Red Hat's company-wide mailing list. I've had to refer several people to it over the years, so I asked ajax for permission to publish it. He agreed. Here it is in all its glory.



<blockquote>
From: Adam Jackson 
To: memo-list
Subject: On "ping" etiquitte
Date: Tue, 17 Nov 2009 12:21:30 -0500

IRC has developed a "ping" convention for getting someone's attention. It works because most clients will highlight channels in which your name has been mentioned, so something like

 ajax: ping

will make that channel show up pink instead of white for me [1].

I wish to correct, or at least amend, this behaviour.  The naked ping should be Considered Harmful, for at least two reasons.  The first is that it conveys no information.  The recipient of your ping, like you, is a Busy Person.  They may be in the middle of something requiring intricate thought, and should not be interrupted for anything less than fire, flood, or six figures of revenue.  Worse, _you_ may forget why you pinged someone; when, four hours later, your victim gets back to IRC and responds to you, _you_ will be disrupted in turn trying to remember what was on your mind in the first place.

The second, more subtle reason proceeds from the first.  A ping with no data is essentially a command.  It's passive-aggressive; it implies that the recipient's time is less valuable than yours. [2]  The pingee will respond in one (or both) of two ways.  Either they will experience increased stress due to increased unpredictable demands on their time, or they will simply ignore naked pings.

The fundamental issue here is a misunderstanding of the medium.  IRC is not a telephone.  It's volatile storage.  The whole reason the ping works is because the client remembers seeing the ping, and can save it in your history buffer so you can see who was talking to you and why.

The naked ping removes this context.

Please.  Save your time.  Save my time.  Make all of our lives more efficient and less stressful.  Ping with data.  At a minimum:

 ajax: ping re bz 534027

See the difference?  Now you've turned slow, lockstep, PIO-like interaction into smooth pipelineable DMA.  It's good for your hardware, and it's good for you.

[1] - irssi 4 life.

[2] - Their time may well be less valuable than yours.  That's not the
point.  

- ajax
</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>297</wp:post_id>
		<wp:post_date><![CDATA[2014-02-20 14:56:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-02-20 14:56:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[naked-pings]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="fedora"><![CDATA[fedora]]></category>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>467</wp:comment_id>
			<wp:comment_author><![CDATA[diegoe]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[diegoe@gnome.org]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/diegoe/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[190.222.40.172]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-02-21 08:58:25]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-02-21 08:58:25]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Why did you kept this greatness away from humanity for so long? I'll never naked ping anyone again.

Excuse me, I'll go pay for my past sins now.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>55</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1392973105.6337850093841552734375;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:6:"diegoe";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1392993886.9469110965728759765625;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>490</wp:comment_id>
			<wp:comment_author><![CDATA[James]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[purpleidea@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://ttboj.wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[216.252.91.92]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-04-29 06:45:33]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-04-29 06:45:33]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Brilliant. This is of course, an awesome, and correct write-up.
My only objection is that when I get a "naked ping", it's fun to reply with a "naked pong".
I'd miss doing that. :P

Cheers,
James]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1400336655.6798689365386962890625;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_error]]></wp:meta_key>
				<wp:meta_value><![CDATA[1398753933]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1398753933.7901599407196044921875;s:7:"message";s:99:"Akismet was unable to check this comment (response: invalid), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Mar 4 OpenStack Foundation Board Meeting</title>
		<link>https://blogs.gnome.org/markmc/2014/03/12/mar-4-openstack-foundation-board-meeting/</link>
		<pubDate>Wed, 12 Mar 2014 00:52:57 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=301</guid>
		<description></description>
		<content:encoded><![CDATA[On March 4th, the <a href="https://www.openstack.org/foundation/board-of-directors/">OpenStack Foundation Board of Directors</a> met for an <a href="https://wiki.openstack.org/wiki/Governance/Foundation/4Mar2014BoardMeeting">all-day, in-person meeting</a> at DLA Piper's office in Palo Alto, California. This my informal recollection of the meeting. It’s not an official record, etc.

Some 20 of the 24 board members managed to make the meeting in person with Todd and Tristan joining over the phone. Yujie Du and Chris Kemp were unable to attend.

As usual our teleconferencing capabilities were woefully inadequate for those hoping to contribute remotely. However, this time Rob and Lew joined a Google Hangout with video cameras trained on the meeting. One would hope that made it a little easier to engage with the meeting, but we didn't really have any feedback on that.

Before we got started properly, Alan took some time to recommend <a href="http://www.amazon.com/Startup-Boards-Getting-Board-Directors/dp/1118443667">"Startup Boards: Getting the Most Out of Your Board of Directors"</a> to the directors (based, in turn, on Mark Radcliffe's recommendation) as a book which could provide some useful background on the responsibilities of directors and what it takes to make a successful board.

[Update: Josh points out we also approved the minutes of the previous meeting]

<h3>Executive Director Update</h3>

Our first meaty topic was one of Jonathan's regular updates.

Jonathan talked about the continued tremendous growth in interest around the project will all the foundation staff's key metrics (e.g. website, developers, twitter, youtube, etc.) at lease doubling in 2013. One interesting aspect of this growth is that the China, India and Japan regions all grew their share of website traffic and this lead to a discussion around whether having the last summit in Hong Kong directly contributed to this shift.

Our community is growing too. We now have over 15,000 individual members of the foundation, over 2,000 contributors to the project over its lifetime and over 400 unique contributors to the project each month.

The mention of 15,000 individual members lead to a somewhat lengthy discussion about the fact that <a href="http://www.openstack.org/legal/individual-member-policy/">individual membership may be terminated</a> under the following clause of the bylaws:

<blockquote>failure to vote in at least 50% of the votes for Individual Members within the prior twenty-four months unless the person does not respond within thirty (30) days of notice of such termination that the person wishes to continue to be an Individual Member</blockquote>

Jonathan explained how shortly after the foundation was launched, over 6,000 people signed up as individual members. Only 1,500 or so of those initial members have since voted in elections, so we could potentially be looking at removing somewhere in the region of 6,000 members in 2014. This reduced membership will facilitate bylaws changes by making it easier (or even possible) to reach the <a href="http://www.openstack.org/legal/bylaws-of-the-openstack-foundation/">quorum necessary under clause 9.2(a)</a>:

<blockquote>requires an affirmative vote of a majority of the Individual Members voting as provided in Article III, but only if at least 25% of the Individual Members vote</blockquote>

Some discussion points around this included whether a future bylaws change should reduce the quorum requirement to something like 10%, that terminated members can re-register but would then have to wait 180 days in order to be eligible for voting and that project contributors need to be foundation members but some contributors may not be in the habit of voting and may have their membership terminated.

Jonathan moved on with his slide deck and briefly mentioned some of the foundation's new supports like Oracle and Parallels. He also talked about OpenStack is increasingly fulfilling its role as a platform and is being put to work for many diverse use cases. He also included a slide with many positive media and analyst quotes about the project like "Industry support has coalesced around OpenStack".

Jonathan then moved on to the foundation's budget, describing it as an $8M budget which turned out to be $11M. Income was up, but expenses were kept in line such that $2.5M could be put in the bank. He expressed particular pride that 18 months ago the foundation was just starting with no money and already had built up a significant buffer which would allow us all to feel confident about the foundation's future, even in more turbulent or unpredictable times.

Finally, Jonathan review the foundation staff's priorities for 2014:

<ol>
	<li>Improve the software - whether that be continued investment by the foundation in the software development process or organizing activities which bring user feedback into the project</li>
	<li>Improve interoperability between OpenStack-powered products and services</li>
	<li>Grow the service provider global footprint, with a specific mention for interest from telco operators at Mobile World Congress around OpenStack and NFV</li>
</ol>

<h3>DefCore Update</h3>

Next up, Rob and Josh provided an update on the progress of the DefCore committee, requesting a checkpoint from the board as to whether there was consensus that the current approach should continue to be pursued.

Rob started by reviewing <a href="https://wiki.openstack.org/wiki/Governance/CoreDefinition">the purpose of DefCore and the approach taken to date</a>. He explained that the committee is mandated to look at ways of governing commercial use of the OpenStack trademark and that some issues are deliberately being punted on for now, e.g. an API interoperability trademark and changes to the bylaws.

Josh took over and reviewed the <a href="https://etherpad.openstack.org/p/DefCoreTestCriteria">currently agreed-upon criteria</a> that will be used when evaluating whether a given capability will be required in order to use the trademark, e.g.

<ol>
	<li>Stable - required to be stable for &gt;2 releases</li>
	<li>Complete - should be parity in capability tested across extension implementations</li>
	<li>Discoverable - e.g. can be found in Keystone and via service introspection</li>
	<li>Widely Deployed - favor capabilities that are supported by multiple public cloud providers and private cloud products</li>
	<li>Tools - supported by common tools</li>
	<li>Clients - part of common libraries</li>
	<li>Foundation - required by other must-have capabilities</li>
	<li>TC Future Direction - reflects future technical direction</li>
	<li>Documented - expected behaviour well documented</li>
	<li>Legacy -  previously considered must-have</li>
	<li>Cluster - tests are available for this capability?</li>
	<li>Atomic - unique capability that cannot be built out of other must-have capabilities</li>
	<li>Non-Admin - capability does not require administrative rights</li>
</ol>

Next, Rob, Josh and Troy walked the board through a <a href="https://docs.google.com/spreadsheet/ccc?key=0Av62KoL8f9kAdFo4V1ZLUFM0OHlrRnFpQUkxSHJ5QWc&amp;usp=drive_web#gid=6">draft spreadsheet evaluating potential capabilities against those criteria</a>.

Much of the subsequent discussion revolved around various board members being very eager to get wider feedback on the ramifications of this process, particularly around identifying the most thorny and controversial results. Concerns were expressed that the process has been so involved and detailed that few people are well appraised of where this is headed and may find some of the results very surprising.

Rob &amp; Josh felt that this spreadsheet approach means that we can solicit much more targeted and useful feedback from stakeholders. For example, if a project feels one of its capabilities should be must-have, or a cloud provider is surprised that a capability it doesn't yet provide is seen to be must-have, then the discussion can be around that specific capability, whether the set of criteria and weighting used for evaluation are appropriate, and whether the capability has been correctly evaluated against those criteria.

Finally, Rob &amp; Josh explained the proposed approach for collecting the test results which would be used for evaluating trademark use applications. The idea (known as TCUP, or "tea-cup", for "test collect, upload and publish") currently being developed in the <a href="https://github.com/stackforge/refstack">refstack repo on stackforge</a> would allow people to download a docker container image, add your cloud credentials and endpoint URL, run the container which would then execute the tests against the endpoint and upload the results.

[Update: Josh points out that data uploaded via TCUP will "be treated as confidential for the time being"]

<h3>Driver Testing</h3>

Next, Boris Renski took the floor to talk about Nova, Neutron and Cinder driver testing particularly with a view to how it might relate to trademark usage. This relates to <a href="http://www.mirantis.com/blog/openstack-will-open-source-vendor-certifications/">his blog post on the topic</a> some weeks ago.

There were two main observations about changes happening in the technical community - (1) that projects were demanding that vendor maintainers provide reliable third-party automated testing feedback in gerrit patch reviews and (2) that manually maintained, often out-of-date, "driver compatibility matrices" in the OpenStack wiki may soon be replaced by dashboards showing the results of these third-party automated testing systems.

Boris wished to leave that technical work aside (since it is not the board's domain) and focus the discussion on whether the board would consider a new trademark program such that vendors who's drivers pass this automated testing would be allowed the use of a trademark such as "Built for OpenStack".

The debate quickly got heated and went off in several different directions.

Part of the discussion revolved around the automated testing requirements projects were placing on projects, how that worked in practice, the ramifications of that, how deprecating drivers would work, whether a driver being in-tree implied a certain level of quality, etc. I felt the board was really off in the weeds on a topic that is under the authority of the individual projects and the TC. For example, it was easy to forget during the discussion that PTLs ultimately had the discretion to waive testing requirements for individual drivers.

Another surprising element to this was parallels being drawn with the overlap between the <a href="http://activity.openstack.org/dash/browser/">OpenStack Activity Board</a> and <a href="http://www.stackalytics.com">Stackalytics</a>. Some board members felt that Mirantis's work on Stackalytics had deliberately duplicated and undermined the Activity Board effort, and that the same thing was happening here because this driver testing dashboard naturally (according to those board members) belongs under the DefCore/Refstack efforts. Boris acknowledged he "had his wrist slapped over Stackalytics" and was attempting to do the right thing here by getting advance buy-in. Others felt that the two efforts were either unrelated or that competing efforts can ultimately lead to a better end result.

Another thread of the discussion was that Boris's use of, or allusion to, the special term "certification" automatically strayed this topic into the area of the OpenStack brand and that it was inappropriate to speculate that the foundation would embark on such a program before the board had discussed it.

In the end, the board directed that Jonathan should work with Boris and Rob on a plan to collect any automated test results out there and, secondly, work with the DefCore legal subcommittee to explore the possible use of the trademark in this context.

<h3>Operator's Feedback</h3>

Tim Bell took the floor next to talk the board through <a href="https://etherpad.openstack.org/p/operators-feedback-mar14">feedback from OpenStack operators</a> collected at the OpenStack Operators Mini Summit the previous day.

The etherpad linked above perhaps provides a better summary than I can give, but some of the highlights include:

<ul>
	<li>The notion that operators should be able to provide feedback on blueprints as they are drafted, to help get operational insights to developers early on in the development process</li>
	<li>Some observations on the stability (or lack thereof) of some of the core OpenStack components</li>
	<li>The importance of a solid upgrades story was re-iterated</li>
	<li>Some great feedback on TripleO</li>
	<li>The split between teams doing CI/CD and those consuming releases</li>
	<li>How to encourage operators to file more bugs upstream</li>
	<li>Lots, lots more</li>
</ul>

This feedback was well received by the board and triggered a bunch of discussions and questions.

As a final point, Josh raised some concerns about how the invitee list was drawn up and how he felt it would have been appropriate for vendors (like Piston) to recommend some of their customers to be invited. Tim felt this was an unfair criticism and that the user committee had worked hard to seed the limited seating event with a diverse set of invitees before opening it up to the public.

<h3>Emerging Use Cases - NFV</h3>

Finally, with limited time remaining, Toby Ford from AT&amp;T briefed the board on Network Function Virtualization (NFV) as an emerging use case for OpenStack which is heavily tied to SDN (Software Defined Network). He described how AT&amp;T have set themselves a mission to:

<blockquote>Simplify, open up, and scale our Network to be more agile, elastic, secure, cost effective and fast by (a) moving from hardware centric to software centric, (b) separating the control plane and data plane and (c) making the network more programmable and open</blockquote>

Toby did a great job of walking through this complex area, leaving me with the understanding that there is a massive shift in the networking industry from hardware appliances to scale-out software appliances running on virtualized commodity hardware.

There appears to be consensus in the networking industry that OpenStack will be the management and orchestration platform for this new world order, but that there is a serious need for telcos and networking vendors to engage more closely with OpenStack in order to make this happen.

<h3>Wrap Up and Evening Event</h3>

Alan then wrapped up the meeting a little early after talking through the schedule for our next meetings with a conf call on April 3 and an in-person meeting on May 11.

The board then moved on to a local restaurant for dinner. Before and after dinner, I had some great conversations with Tim, Monty, Van and Troy. Funnily enough, because of the layout of the tables and the noise in the restaurant, it was only really possible to talk to the person sitting directly opposite you and so I found myself having an exclusive 2 hour dinner date with Boris! At one point, after Boris knocked a glass of wine over me, I joked that I should tweet "Red Hat and Mirantis tensions finally bubble over to physical violence". But, in all honesty, these in-person, informal conversations around the board meetings are often far more effective at enabling shared understanding and real collaboration than the 20+ person meetings themselves. Such is the nature of the beast, I guess.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>301</wp:post_id>
		<wp:post_date><![CDATA[2014-03-12 00:52:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-03-12 00:52:57]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[mar-4-openstack-foundation-board-meeting]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<category domain="category" nicename="openstack-foundation-board-meeting"><![CDATA[openstack-foundation-board-meeting]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>468</wp:comment_id>
			<wp:comment_author><![CDATA[Jay Pipes]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jaypipes@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://joinfu.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[99.89.201.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-03-12 01:14:52]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-03-12 01:14:52]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the write-up, Mark, very helpful! :)

Best,
-jay]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1394586892.259191036224365234375;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1394610695.87685108184814453125;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>469</wp:comment_id>
			<wp:comment_author><![CDATA[Joshua McKenty]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[joshua@pistoncloud.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.pistoncloud.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[209.116.67.22]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-03-12 14:18:38]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-03-12 14:18:38]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mark, you continue to do an admirable job with these summaries. While I often disagree with you on how best to move the OpenStack community forward, I have never found fault with your intentions or honest approach.

 It might be worth including the board decision that TCUP data would be treated as confidential for the time being; an important decision that will limit media impacts while we fine-tune the DefCore process.

And you skipped our (late and rather cursory) approval of the minutes of the last meeting - cursory because, for the first time, everyone's name was spelled correctly, and we had nothing to complain about.

Joshua]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1394633918.616570949554443359375;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1394725204.60002803802490234375;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>470</wp:comment_id>
			<wp:comment_author><![CDATA[markmc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markbmc@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[80.169.137.42]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-03-13 15:42:13]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-03-13 15:42:13]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks Josh, I've noted your points in the post now]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>469</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1394725333.084865093231201171875;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>471</wp:comment_id>
			<wp:comment_author><![CDATA[OpenStack Community Weekly Newsletter (Mar 7 &#8211; 14) &raquo; The OpenStack Blog]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.openstack.org/blog/2014/03/openstack-community-weekly-newsletter-mar-7-14/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[67.192.46.8]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-03-14 22:07:38]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-03-14 22:07:38]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] OpenStack Foundation Unofficial Board Meeting notes: Mar 4 OpenStack Foundation Board Meeting [&#8230;]

[WORDPRESS HASHCASH] The comment's server IP (67.192.46.8) doesn't match the comment's URL host IP (174.143.194.225) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1397118481.4327590465545654296875;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Heartbleed</title>
		<link>https://blogs.gnome.org/markmc/2014/04/10/heartbleed/</link>
		<pubDate>Thu, 10 Apr 2014 10:04:40 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=320</guid>
		<description></description>
		<content:encoded><![CDATA[Watching <a href="http://heartbleed.com/">#heartbleed</a> (aka <a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0160">CVE-2014-0160</a>) fly by in my twitter stream this week, I keep wishing we could all just pause time for a couple of weeks and properly reflect on all the angles here.

Some of the things I'd love to have more time to dig into:

<ul>
	<li>Obviously, <a href="http://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=96db902">the bug itself and its fix</a></li>
        <li>Why countermeasures in the kernel, libc or the compiler didn't prevent this, or how static analysis tools didn't catch it. (Update: see <a href="http://www.tedunangst.com/flak/post/heartbleed-vs-mallocconf">here</a> and <a href="http://article.gmane.org/gmane.os.openbsd.misc/211963">here</a>)</li>
	<li>The protocol design - some wonder why a seemingly application-level feature is included in such a critical security protocol and why the feature is available before authentication has completed. Interesting to note that one of the stated purposes of the feature is <a href="http://tools.ietf.org/html/draft-ietf-tls-dtls-heartbeat-04">PMTU discovery for DTLS</a> yet it's enabled for plain TLS too</li>
        <li>That it's not only servers which are vulnerable - <a href="http://security.stackexchange.com/questions/55119/does-the-heartbleed-vulnerability-affect-clients-as-severely">clients equally vulnerable</a></li>
        <li>The fact that attacks can't be detected because there is no logging of this failure condition</li>
	<li>The health of the OpenSSL project, <a href="http://article.gmane.org/gmane.os.openbsd.misc/211963">talk of its developers being irresponsible</a> when it comes to their development practice</li>
        <li><a href="http://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=4817504">How the bug was introduced</a>, how much code review or testing was involved. (Update: <a href="http://www.smh.com.au/it-pro/security-it/man-who-introduced-serious-heartbleed-security-flaw-denies-he-inserted-it-deliberately-20140410-zqta1.html">comments from the original author of the code</a>)</li>
        <li>The realization that few in our industry are actively investing in this project which so many place so much trust in</li>
        <li>The question of whether OpenSSL is the library everyone should be relying on, whether it should be e.g. NSS or GnuTLS</li>
        <li>How something like OpenSSL can be a critical part of a web service's architecture <a href="http://www.troyhunt.com/2014/04/everything-you-need-to-know-about.html">even where e.g. the service is implemented with technologies like .NET</a></li>
        <li>The question of whether we're putting all our eggs in one basket if an SSL vulnerability can have such far reaching implications</li>
        <li>Just how much was exposed by the vulnerability - e.g. private keys, usernames and passwords, other sensitive data - and how much data could have been compromised by a determined, well-resourced attacker in possession of this knowledge before it was patched</li>
        <li>The <a href="http://www.quora.com/OCSP-Online-Certificate-Status-Protocol/Is-it-better-to-enable-OCSP-and-leak-personal-information-or-disable-OCSP-and-risk-trusting-a-revoked-certificate/answer/Robert-Love-1?srid=cwn&amp;share=1">efficacy of certificate revocation measures</a> in protecting users from potentially compromised certificates</li>
        <li>How <a href="https://www.eff.org/deeplinks/2014/04/why-web-needs-perfect-forward-secrecy">Perfect Forward Security is an important mitigation measure</a> for vulnerabilities like this</li>
        <li>The <a href="http://www.seacat.mobi/blog/heartbleed">claim by one site that they could detect attacks in their logs</a>, that there was someone exploiting the vulnerability two weeks before it was disclosed publicly. (Thierry Carrez points out the update to this post which says "other tools [..] can produce the same pattern in the SeaCat server log")</li>
        <li>How <a href="http://oneverythings.blogspot.ie/2014/04/i-heartbleed-nsa.html">our perception of a vulnerability like this has changed</a> now that we know just how aggressive intelligence agencies (the NSA and others) are in their approach to population surveillance and monitoring. <a href="http://ftp.belnet.be/FOSDEM/2014/Janson/Sunday/NSA_operation_ORCHESTRA_Annual_Status_Report.webm">This FOSDEM talk is rather prescient</a> in describing OpenSSL as the "crown jewels" for the NSA. (Update: <a href="http://www.bloomberg.com/news/2014-04-11/nsa-said-to-have-used-heartbleed-bug-exposing-consumers.html">claims that the NSA knew of the bug soon after its introduction and exploited it</a>)</li>
        <li>The approach that was taken to disclosing the vulnerability, how responsible a disclosure process it was and the pros/cons of delaying disclosure further. <a href="http://www.eweek.com/security/heartbeat-ssl-flaw-puts-linux-distros-at-risk.html">Apparently CloudFlare was disclosed before the public disclosure, whereas vendors like Red Hat weren't</a>. (Update: <a href="http://www.openwall.com/lists/oss-security/2014/04/08/10">more details on the disclosure timeline from Kurt Seifried</a>) (Another update: <a href="https://plus.google.com/+MarkJCox/posts/TmCbp3BhJma">OpenSSL's official view of the timeline</a>) (Yet another update: <a href="http://www.vocativ.com/tech/hacking/behind-scenes-crazy-72-hours-leading-heartbleed-discovery/">interview with Codenomicon's David Chartier</a>)</li>
        <li>How effective entities like Linux distros were in helping getting the vulnerability quickly patched in the wild (see e.g. that <a href="https://stripe.com/blog/heartbleed">Stripe went and built their own patched package</a> rather than wait for an Ubuntu package)</li>
        <li>How much more difficult patching this was due to applications bundling OpenSSL and how much worse it could have been if the practice of bundling was more widespread</li>
        <li>The impact that the <a href="http://www.kalzumeus.com/2014/04/09/what-heartbleed-can-teach-the-oss-community-about-marketing/">impressive marketing</a> - i.e. a cool name vs simply a CVE number, a logo, clear technical writing which speaks to the business impact, etc. - had on the speed with which the patch was deployed</li>
</ul>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>320</wp:post_id>
		<wp:post_date><![CDATA[2014-04-10 10:04:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-04-10 10:04:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[heartbleed]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="fedora"><![CDATA[fedora]]></category>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[enclosure]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://ftp.belnet.be/FOSDEM/2014/Janson/Sunday/NSA_operation_ORCHESTRA_Annual_Status_Report.webm
374102074
video/webm
]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>483</wp:comment_id>
			<wp:comment_author><![CDATA[clopez]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[clopez@igalia.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://blog.neutrino.es</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[83.165.20.88]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-04-11 03:17:32]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-04-11 03:17:32]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Probably you are also interested in the OpenSSL developers comments on the exploit mitigation countermeasures issue raised by OpenBSD developers: http://thread.gmane.org/gmane.comp.encryption.openssl.devel/24208]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1397186252.23587799072265625;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1397218576.248363971710205078125;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>475</wp:comment_id>
			<wp:comment_author><![CDATA[Daniel Berrange]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[dan-gnome@berrange.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[86.176.159.230]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-04-10 10:44:04]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-04-10 10:44:04]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[&gt; * The health of the OpenSSL project, talk of its developers being irresponsible when it 
&gt; comes to their development practice
&gt; * The realization that few in our industry are actively investing in this project which so
&gt; many place so much trust in
&gt; * The question of whether OpenSSL is the library everyone should be relying on,
&gt; whether it should be e.g. NSS or GnuTLS
&gt; * The question of whether we’re putting all our eggs in one basket if an SSL 
&gt; vulnerability can have such far reaching implications

I feel these 4 are all different facets of the same point. The last one in particular though poses quite a difficult conundrum. Conventional wisdom is that having all your eggs in one basket is a bad thing because of the implications when something goes wrong. With cryptography though, I'm not sure that conventional wisdom works out well in practice. It is pretty clear that writing secure crypto libraries is a very hard job, for which the community/industry has a pretty limited pool of skilled &amp; interested developers. If we were to spread our eggs by having 10 widely used crypto libraries instead of just the 3 main open sources impls (OpenSSL, NSS, GNUTLS) we'd be spreading that limited pool of dev resources even thinner. The end result would likely be that the libraries would be lower quality overall, thus actually increasing our overall security risks. People auditing crypto libraries would also have much more work todo if there were more libraries to audit. Application developers would have harder decisions to make - do they pick just one, or do they try to support a whole bunch of different libraries which increases the chance they'll screw up their integration causing more security flaws. Is 3 the right number of eggs to have in our basket - IMHO it probably is for now, given the other problems inherent in diversifying further.

I think the second point is the key one to think about here. IMHO too many companies are shipping &amp; relying on our three main open source TLS libraries without contributing enough resources to their development &amp; testing - its a collective failure of investment since it isn't a "sexy" headline grabbing project to throw resources at like, say, OpenStack. Count how many developers companies have thrown at OpenStack in the past 2 years and then count the same for the GNUTLS/OpenSSL/NSS projects...

Serious as this, and the other 2 TLS impl vulnerabilities this year, are though, we have to bear in mind that (the NSA aside) TLS/SSL has actually done a remarkable job at protecting internet traffic over the past 10-15 years. It seems that the internet is going through a period of attitude readjustment due to the Snowden revelations, with greater interest/activity in auditing security sensitive code, including our TLS impls, leading to a significant uptick in vulnerabilities identified. Hopefully this will lead to better development and testing practices, and a greater long term investment in security work from everyone involved &amp; relying on them.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1397126644.08885097503662109375;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1397126847.904714107513427734375;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>476</wp:comment_id>
			<wp:comment_author><![CDATA[Lucas]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[lucasagomes@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[80.169.137.63]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-04-10 10:51:20]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-04-10 10:51:20]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Here's a cool post about using systemd cgroup to help fixing this problem in the wild https://www.getpantheon.com/heartbleed-fix]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1397127080.087522983551025390625;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1397127120.60186004638671875;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>477</wp:comment_id>
			<wp:comment_author><![CDATA[clopez]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[clopez@igalia.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://blog.neutrino.es</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[83.165.20.88]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-04-10 13:26:35]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-04-10 13:26:35]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[&gt; Why countermeasures in the kernel, libc or the compiler didn’t prevent this, or how static analysis tools didn’t catch it

Because OpenSSL has exploit mitigation countermeasures to make sure it's exploitable.

Yes, is not a joke:

http://article.gmane.org/gmane.os.openbsd.misc/211963]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1397136395.4449059963226318359375;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1397136591.88158893585205078125;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>478</wp:comment_id>
			<wp:comment_author><![CDATA[Pádraig Brady]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[P@draigBrady.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.pixelbeat.org/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[109.76.180.232]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-04-10 13:30:11]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-04-10 13:30:11]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The seacat logs are probably a false positive but there are older smoking guns it seems https://www.eff.org/deeplinks/2014/04/wild-heart-were-intelligence-agencies-using-heartbleed-november-2013]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1397136611.8358490467071533203125;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1397136663.6218049526214599609375;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>479</wp:comment_id>
			<wp:comment_author><![CDATA[markmc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markbmc@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.gnome.org/markmc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[80.169.137.63]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-04-10 13:30:49]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-04-10 13:30:49]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yeah, thanks clopez - I'd already linked to that post in the "talk of its developers being irresponsible" point]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1397136649.260137081146240234375;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>481</wp:comment_id>
			<wp:comment_author><![CDATA[Pádraig Brady]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[P@draigBrady.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.pixelbeat.org/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[109.76.180.232]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-04-10 13:57:03]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-04-10 13:57:03]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Re static analysis, I see that openssl is registered here and the last run was a year ago, though results aren't publicly available: https://scan.coverity.com/projects/294?tab=Overview

Though I'd be surprised if static checking pointed any issue here, and checking a coverity scan I do have for d1_both.c doesn't show anything.

I guess the security agencies would have more focused tools. clients searching for server stack/heap tagged values would be a cracking 101 tool I expect.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1397138223.45057201385498046875;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1397140047.7741959095001220703125;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>482</wp:comment_id>
			<wp:comment_author><![CDATA[Jonathan Blandford]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jrb@alum.mit.edu]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[8.25.197.25]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-04-10 18:17:31]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-04-10 18:17:31]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is a great list, Mark.  I'd also add:

* The prevalence of openssl in embedded devices that aren't going to get updated, but will appear secure from here on out.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1397153851.251007080078125;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1397153889.0976889133453369140625;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>484</wp:comment_id>
			<wp:comment_author><![CDATA[OpenStack Community Weekly Newsletter (Apr 4 &#8211; 11) &raquo; The OpenStack Blog]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.openstack.org/blog/2014/04/openstack-community-weekly-newsletter-apr-4-11/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[67.192.46.14]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-04-11 12:08:18]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-04-11 12:08:18]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] Heartbleed [&#8230;]

[WORDPRESS HASHCASH] The comment's server IP (67.192.46.14) doesn't match the comment's URL host IP (174.143.194.225) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1397218525.0303070545196533203125;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>486</wp:comment_id>
			<wp:comment_author><![CDATA[fderepas]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[fabrice.derepas@trust-in-soft.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://trust-in-soft.com/team/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[82.241.91.184]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-04-13 20:27:23]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-04-13 20:27:23]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[With my team, at TrustInSoft, we have just performed a mathematical validation of an open source SSL stack. This SSL stack is now immune to security flaws similar to heartbleed. I encourage you to have a look at formal methods and see how they can help to build a more reliable internet: http://trust-in-soft.com/no-more-heartbleed]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_error]]></wp:meta_key>
				<wp:meta_value><![CDATA[1397420843]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1397420843.274427890777587890625;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1397481534.4171268939971923828125;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>487</wp:comment_id>
			<wp:comment_author><![CDATA[Heartbleed reflections list | Blog of Leonid Mamchenkov]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://mamchenkov.net/wordpress/2014/04/14/heartbleed-reflections-list/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[78.129.199.21]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-04-14 07:58:11]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-04-14 07:58:11]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] Mark McLoughlin has a nice list of thoughts, ideas, and questions to reflect on in regards to the Heartbleed bug. [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_error]]></wp:meta_key>
				<wp:meta_value><![CDATA[1397462291]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1397462291.59527111053466796875;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1397481314.265386104583740234375;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>488</wp:comment_id>
			<wp:comment_author><![CDATA[Pádraig Brady]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[P@draigBrady.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.pixelbeat.org/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[109.79.85.209]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-04-14 13:11:40]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-04-14 13:11:40]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Following on the static analysis topic I see that coverity have written about the "taint analyis" required here: http://blog.regehr.org/archives/1128]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_error]]></wp:meta_key>
				<wp:meta_value><![CDATA[1397481100]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1397481100.48046398162841796875;s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1397481416.894956111907958984375;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>May 11 OpenStack Foundation Board Meeting</title>
		<link>https://blogs.gnome.org/markmc/2014/05/17/may-11-openstack-foundation-board-meeting/</link>
		<pubDate>Sat, 17 May 2014 14:52:16 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=341</guid>
		<description></description>
		<content:encoded><![CDATA[The OpenStack Foundation Board of Directors <a href="https://wiki.openstack.org/wiki/Governance/Foundation/11May2014BoardMeeting">met in-person</a> in advance of the OpenStack Summit in Atlanta. This my informal recollection of the meeting. It’s not an official record, etc.

Unlike previous meetings held in advance of summits, this meeting only ran from 09:00 to 14.30 at which time we switched venue for the <a href="https://wiki.openstack.org/wiki/Governance/Foundation/11May2014JointMeeting">first ever joint board of directors and technical committee meeting</a>.

I'm about to head off on vacation for a week, so I figured I'd do my best to briefly cover some of the topics covered during the meeting.

<h3>Jonathan's Update</h3>

After the usual preliminaries, we began the meeting with Jonathan Bryce (in his role as Executive Director) giving the board an update from the Foundation's perspective.

One of the more interesting slides in Jonathan's updates is always the latest statistics showing community and ecosystem growth. We now have over 355 companies supporting the foundation, over two thousand total contributors and almost five hundred active contributors every month. Over 17,000 commits were merged during the Icehouse release cycle, an increase of 25% from Havana. This level growth is just phenomenal.

Jonathan also talked about the growth in visitors to the openstack.org website and made some interesting observations about the geographical spread of the visitors. The top 4 countries seen in the stats are the U.S., India, China and France. That France figures so highly in the stats is a good sign in advance of the summit in Paris in November.

Next, Jonathan moved on to talk about the week ahead in Atlanta. Once again, we're seeing a huge increase in the level of interest in the event with over 4,500 attendees compared to the roughly 3,000 attendees in Hong Kong. Running an even of this size is a massive undertaking and Jonathan mentioned one crazy statistic - the foundation had over 23,000 pieces printed for the event and had to spread those orders over three printing companies in order to be able to do it.

A big emphasis for the week was an increased focus on users and operators. And, interestingly, there were roughly 800 developers and 700 operators signed up for the event. All were agreed that it's a very healthy sign to see so many operators attend.

One comment from Jonathan triggered some debate - that the event was turning into a broader cloud industry event rather than strictly limited to just OpenStack. Some board members raised a concern that the event shouldn't become completely generic and the focus should always be on OpenStack and its ecosystem. Jonathan clarified that this is the intent.

Jonathan also talked about the geographical diversity of attendees at the summit. People were coming from over 55 countries, but 81% attendees were from the U.S. In contrast, in Hong Kong, the percentage of US attendees were more like 40% and Jonathan felt that this showed the importance of regularly holding summits outside of the U.S.

<h3>Finances</h3>

Jonathan also walked the board through and update on the foundation's financial position. Operating income was 3% above their predictions and expenses was down 7%. This has left the foundation with $7.8M in the bank, as part of Jonathan's goal to build up a substantial war-chest to ensure the foundation's stability even in the event of unforseeable events.

The summit in Atlanta was predicted to make a loss of $50k but was on track to make a profit. And yet, while it was predicted to be a $2.7M event, it was turning out to be a $4M event. The situation will be very different in Paris because of different cost structures and the event is expected to make a loss. While on the topic, some board members requested that the board be more closely involved in choosing the location of future summits. Jonathan was happy to facilitate that and expected to be able to give the board an update in July.

Jonathan next gave a detailed update on the foundation's application for US federal tax exempt status. He explained that while we are Delaware incorporated, non-stock, non-profit foundation we have not yet been granted 501(c)(6) status by the IRS. After providing the IRS with additional information in November, the IRS returned an initial denial in March and the foundation filed a protest in April.

The objections from the IRS boil down to their feeling  (a) that the foundation is producing software and, as such, is "carrying on a normal line of business", (b) that the foundation isn't improving conditions for the entire industry and (c) that the foundation is performing services for its members. Jonathan explained why the foundation feels those objections aren't warranted and that the OpenStack foundation is fundamentally no different from other similar 501(c)(6) organizations like the Linux Foundation. He explained that other similar organizations were going through similar difficulties and he feels it is incumbent on the foundation to continue to challenge this in order to avoid a precedent being set for other organizations in the future. Overall, Jonathan seemed confident about our position while also feeling that the outcome is hard to predict with complete certainty. This conversation continued for some time and, because of the interest, the board moved to establish a committee to track the issue consisting of the existing members of the finance committee along with Eileen, Todd and Sean.

<h3>Trademark Framework</h3>

Jonathan moved on to give an update on some changes the foundation have made around the trademark programs in place for commercial uses of the mark. The six logos previously used were causing too much confusion so the foundation has merged these into "Powered By OpenStack" and "OpenStack Compatible" marks.

There followed some debate and clarifications were given, before some members expressed concern that the board had not been adequately consulted on the change. That objection seemed unwarranted to me given that Jonathan had briefed the board on the change in advance of implementing it.

Staying on topic of trademark programs, Boris took the floor and gave an update on the DriverLog work his team has been working on. He request the board use the output of DriverLog to enforce quality standards for the use of the OpenStack compatible mark in conjunction with Nova, Neutron and Cinder drivers. There was rather heated debate on the implications of this, particularly around whether drivers would be required to be open-source and/or merged in trunk.

Several board members objected to the fact that this proposal wasn't on the agenda and the board hadn't been provided with supporting materials in advance of the meeting. Boris committed to providing said material to the board before revisiting the issue.

<h3>Defcore</h3>

Next up, Rob and Josh gave an update on the progress of their DefCore initiative. Rather than attempt to repeat the background here, it's probably best to <a href="http://robhirschfeld.com/category/clouds/openstack/defcore/">read Rob's own words</a>.

Once the background was covered, the board spent some time considering <a href="https://docs.google.com/spreadsheet/ccc?key=0Av62KoL8f9kAdFo4V1ZLUFM0OHlrRnFpQUkxSHJ5QWc&amp;usp=drive_web#gid=6">the capabilities scoring matrix</a> where each capability (concretely, capabilities are groups of Tempest tests) is scored against 12 selection criteria. This allows the capabilities to be ranked so that the board can make an objective judgment on which capabilities should be considered "must have". There appeared to be generally good consensus around the approach, but a suggestion was made to consider more graduated scoring of the criteria (e.g. 1-5 rather than 0 or 1).

The conversation moved on to the subject of "designated sections". During the conversation, the example of Swift was used and Josh felt the technical committee's feedback indicated that either Swift in its entirety should be a designated section or that none of Swift would be considered binary. Josh also felt that the technical community (either the TC or PTLs) should be responsible for such decisions but I felt that while the TC can provide input, trademark policy decisions must ultimately be made by the board lest we taint the technical communities technical decision making by requiring significant political and business implications to be considered.

One element of clarity that emerged from the discussion was the simple point that "must have" tests were intended to drive interoperability while designated sections were intended to help build our community by requiring vendors to ship/deploy certain parts of the codebase and, by implication, contribute to those parts of the codebase.

As time ran short, the board voted to approve the selection criteria used by the DefCore committee. A straw-poll was also held to get a feel for whether board members saw the need for an "OpenStack compatible" mark in addition to the "OpenStack powered" mark. All but three of the board members (Monty, Todd and Josh) indicated their support for an additional "OpenStack compatible" mark.

<h3>Win The Enterprise</h3>

Briefly, Imad introduced the "Win the Enterprise" he an his team were kicking off with a session during the summit. The goal is to drive adoption of OpenStack in the enterprise by analyzing the technical and business gaps that may be hindering such adoption and coming up with an action plan to address them.

Feedback from board members was quite positive, with the discussion centered around how the group would measure their success and how they would ensure they operated in the most open and transparent way possible.

There was also some discussion about the need for more product management input to the project along with an additional focused effort on end-users of OpenStack clouds.

<h3>Wrapping Up</h3>

After the meeting drew to a close, board members joined members of the technical committee for a joint meeting. I'm hoping one of the awesome individuals on the technical committee will write a summary of that meeting!

This was a hugely draining week for many of us at Red Hat. As I prepare to completely switch off for a week, allow me to pass on <a href="https://twitter.com/robynbergeron/status/466678776168865792">this sage advise from Robyn Bergeron</a>:

<a href="http://www.keepcalm-o-matic.co.uk/p/keep-calm-and-ride-the-drama-llama/"><img src="http://sd.keepcalm-o-matic.co.uk/i/keep-calm-and-ride-the-drama-llama.png" alt="Keep Calm and Ride The Drama Llama" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>341</wp:post_id>
		<wp:post_date><![CDATA[2014-05-17 14:52:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-05-17 14:52:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[may-11-openstack-foundation-board-meeting]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<category domain="category" nicename="openstack-foundation-board-meeting"><![CDATA[openstack-foundation-board-meeting]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>492</wp:comment_id>
			<wp:comment_author><![CDATA[Josh McKenty]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[josh@openstack.org]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[70.193.128.98]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-05-17 15:57:52]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-05-17 15:57:52]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great summary, as always. One correction - it was Todd Moore, not Troy Toman, who agreed with Monty and I on whether we should be *concurrently* providing a "compatible with" mark.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1401090552.6415588855743408203125;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_error]]></wp:meta_key>
				<wp:meta_value><![CDATA[1400342272]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1400342272.765513896942138671875;s:7:"message";s:99:"Akismet was unable to check this comment (response: invalid), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>495</wp:comment_id>
			<wp:comment_author><![CDATA[Docker and Cloud Foundry Open Source Projects Are Defined By Ownership | The New Stack]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://thenewstack.io/docker-and-cloud-foundry-open-source-projects-are-defined-by-ownership/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[192.241.171.99]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-05-28 23:31:18]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-05-28 23:31:18]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] &#8220;whether a given capability will be required in order to use the trademark,&#8221; writes Mark McLoughlin, a consulting engineer at Red Hat, in a blog post at the time. He is a member of OpenStack&#8217;s [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1401450297.47634601593017578125;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1401319878.4725010395050048828125;s:7:"message";s:99:"Akismet was unable to check this comment (response: invalid), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>An Ideal OpenStack Developer</title>
		<link>https://blogs.gnome.org/markmc/2014/06/06/an-ideal-openstack-developer/</link>
		<pubDate>Fri, 06 Jun 2014 14:49:40 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=349</guid>
		<description></description>
		<content:encoded><![CDATA[<em>(This is a prose version of a talk I gave at OpenStack meetups in Israel and London recently. Apologies for the wordiness.)</em>

In a recent update Jonathan gave to the Board of Directors, we described how OpenStack has had 2,130 contributors to date and 466 of those are active on a monthly basis. That’s an incredible statistic. There’s no doubt OpenStack has managed to attract an unusual number of contributors and, for such a complex project, made it relatively easy for them to contribute.

However, this isn’t just a numbers game. I often hear mutterings that a much smaller, focused group could achieve the same velocity that OpenStack is achieving. In some sense that’s true, but I think that the diversity of interests and priorities is the energy that a community like OpenStack thrives on.

The question then is how to improve the overall quality of our large number of contributors. In order to do that, we need to be able to set expectations. What do we expect and value from our contributors?

What I’m going to attempt to do here is define The Prototypical OpenStack Developer. The ideal that we should aspire to. The standard that all contributors should be held to.

(But … bear with me here. I’m being a little tongue-and-cheek.)

Ok. Where do we start? How do we begin to forge this hero from the raw resources we are presented with?

Let’s start with the basics. The breadth and depth of knowledge you need on a variety of computing topics.

On <strong>virtualization</strong>, you could start with KVM. You should know about CPU extensions such as Intel’s VT-x and I/O virtualization with VT-d and PCI SR-IOV. Some knowledge of the history of software based virtualization and paravirtualization would be nice context too. Now understand the responsibilities of the KVM kernel module versus the userspace component, qemu. How does qemu emulate various devices? How does live migration work? How does a hypervisor use page table flags to track dirty pages during a migration?

And there’s probably little point in understanding all of this without understanding the x86 architecture in some detail. Understanding how it compares to RISC architectures would be no harm. Memory segmentation, MMUs, page tables are all fun topics. You really can’t get into this without learning a bit of assembly, at least the basic idea. The history of x86, from real/protected mode to modern day PAE or x86-64 are all important to understand. Ignore Itanium, though. It’s not enough to just understand the CPU, though, you need to go beyond and think about how that CPU interacts with peripherals using DMA and buses like PCI.

And, honestly, if you go this far you may as well understand basic digital systems theory, like how you can construct a counter or register from a set of basic logic gates ...

Woah, I think I’ve digressed a little. That’s virtualization. Do the same for <strong>storage and networking</strong>. I’ll leave that as an exercise for the reader.

That’s just the concept behind the basic resources managed by OpenStack, though. It’s a pretty complicated <strong>distributed system</strong>, so it’s pretty essential you do some reading on that topic. What do terms like “quorum” and “consensus” mean? Why do people describe the Paxos algorithm as “quicksort of distributed systems”? What do people mean when they describe OpenStack as a “shared nothing” architecture, and are they crazy? How would you describe OpenStack’s approach to fault tolerance?

And obviously related to all of this is the need for deep knowledge of <strong>databases and messaging systems</strong>. We seem to have a large number of ex-MySQL consultants on this project, but don’t let that be an excuse. You know what foreign keys and cross-table joins are, right? And you really need to know the kind of operations which will simply lock individual rows rather than an entire table. For messaging, there’s a little research you can do there. We’re all about AMQP in OpenStack, but there’s been a few other messaging protocols in the past. My personal favorite is CORBA. What’s the difference between a broker, router and peer-to-peer based architecture? What’s this “fanout” and “topic” things we talk about in messaging? Incidentally, you know that we’re not actually using the standard AMQP protocol in OpenStack, right?

You needn’t have touched a line of code at this point. But, if you’re going to contribute to OpenStack, you need to code, right? Almost certainly in <strong>Python</strong>, but we like ourselves a little Bash too. With Python, it’s important to understand not just the syntax from the most basic to the more advanced topics like iterators, decorators, context managers and metaclasses. You also need to have a good knowledge of the huge number of python libraries out there, inside and outside the core Python distribution. We need true Pythonistas. Oh, and we’re in the process of porting to Python 3, so make sure you understand the differences between Python 2 and 3.

But wait, wait. That’s no good. You can’t just dive straight into Python. You need to start with C. Allocate and free your own memory, damnit. You can’t go through life without learning about pointers. Now learn how to use threads and the various synchronization primitives out there, and why it’s all just terrible. Now learn about asynchronous I/O techniques; what an event loop is, how you use select() and non-blocking sockets to write a single-threaded server which processes requests from multiple clients. Oh, Richard Stevens. My hero. Don’t be afraid to read a few RFCs.

Speaking of authors, we forgot algorithms. Yes, those. Just carefully study all three volumes of Knuth.

Now, before returning to Python, perhaps you should implement a REST API in Java using JAX-RS and a web UI using Ruby on Rails. Hang out with the cool kids and port your UI to Sinatra, before realizing that’s not cool anymore and switching to Node.js.

You might be ready to contribute some code to OpenStack at this point. But, I hate to think of anyone writing software without having a full appreciation of the <strong>user experience design</strong> we’re driving towards. We don’t want the inmates running the asylum, do we? Which “personas” are we designing for? “As a web developer, I want to launch a virtual machine to test my code in.”

Wait, we forgot <strong>tools</strong>. You can’t get anything done without knowing your tools. You’re going to do all of your work on Linux, whether that be in VMs or by running Linux on your main machine. If you’re a serious person, you need to learn emacs. You’re going to become very close friends with grep and sed, so learn yourself regular expressions. Lazy and greedy regexs, both. You know how to do a HTTP POST with curl, right?

Ah, git! Oh, the glorious <strong>git</strong>! You can never learn too much about git. It’s the gift that keeps on giving. If you think I’m joking, spend some time getting to know interactive rebasing. Reordering, editing, squashing and splitting commits! Re-writable history! Where have you been all my life? No git detail is too obscure to ignore. Learn how a tilde is different from a caret in revision parameters. How you can delete branches by leaving out the first part of a refspec in a git-push. Force override, exciting! Is your mind blown yet? No? Find out how git’s reflog is a history of history!

(Give me a second to calm down, here)

Now, you’ve got to realize something. Based on everything you’ve learned so far, you could probably write OpenStack on your own. But that’s not what’s going on here. You’re <strong>collaborating</strong>. You’re following a process. How we collaborate and why we follow certain processes is a more complex, involved and undocumented topic than anything you’ve learned so far.

To really understand how we get stuff done in OpenStack, you need to be steeped in open source culture. Understand what we mean when we say things like “rough consensus and running code” or “do-acry”.

Perhaps start by following the linux-kernel mailing list for a few months, watching how controversial discussions are worked through and the subtleties that determine who holds the balance of power and influence. Don’t worry if you’re shocked and appalled by how unfriendly it all seems, you’re not the first. If that’s your one take-away from the kernel, that was time well spent. Now seek out friendlier communities and understand how they get stuff done. Compare them to OpenStack and ask yourself questions like “how does our reliance on voting to make decisions compare to other communities?” or “why does there seem to be less flamewars in OpenStack than elsewhere?”.

The history of open source is important, will inform how you engage with OpenStack and that, in turn, will influence how OpenStack evolves. Learn about the “free software” versus “open source” camps, and how those <strong>philosophies</strong> relate to the choice of copyleft licenses like the GPL versus permissive licenses like Apache, MIT or BSD. Are you in this for the freedom of users of your code, or are you in it to build collaborative software development communities? That contributor agreement you were asked to sign before you contributed to OpenStack - how do you feel about that?

Think about the different <strong>governance models</strong> that open-source communities adopt. Learn about benevolent dictators, project management committees, “commit bit”, consensus based decision making and the pros and cons of our representative democracy model.

Learn about the <strong>release processes</strong> various projects use. Time based versus feature based. Rapid release cycles with merge windows. Planning periods, feature freezes, release candidates, stable branches. How do different distros do this when there are so many maintainers and packages involved? We use Python a lot, how do they coordinate their release cycles?

That’s all very well, but it’s important not to be blind to the <strong>world outside</strong> open source. Understand how extreme programming and agile software development evolved. Read the Agile Manifesto. Understand how this all relates to Continuous Integration, Continuous Delivery and DevOps. We’re operating in a much different context, but is code review our variant of XP’s pair programming? Is our gated master superior to traditional post-commit CI?

You can now consider educated to a basic level. But is that enough to be an effective contributor? Do you now have everything you need to make an impact? No, far from it. The hardest part is learning to be a <strong>good human</strong>. You need to have superb communication skills, in English of course, mostly written communication skills for mailing list, gerrit and IRC discussions. We do meet twice a year in design summits, so you need to be able to present and defend your ideas in person too. You need to work on that Irish mumble of yours.

More than that, though, you need to understand people. You need to know when to be empathetic, when to be pragmatic and when you be dogmatic. When is someone’s -1 on your patch likely to be an intractable veto and when is it simply a take-it-or-leave-it suggestion? What fights are worth fighting? How can you build up kudos points by assisting your fellow contributors and when is the right time to call in some favours and spend those kudos points?

Ok, we’re ready to go! How do we <strong>put all of this into practice</strong>?

Probably the best way to start contributing to the project is by doing <strong>code reviews</strong>. You should probably be spending at least a couple of hours on code review every day. Not just because the number of code reviewers on a project has the greatest influence on its velocity, but also because its the best way to start building trust with your fellow contributors. If you can show yourself as thoughtful, committed and diligent through your code reviews, then other code reviewers will be much more inclined to prioritize your patches and less carefully scrutinize your work.

A good code reviewer manages to simultaneously focus on the little details while also considering the big picture. Try not to just leave +1 on patches, but instead a little commentary that shows the kind of things you’ve taken into consideration. Why should anyone trust that your +1 was the result of 2 hours of careful analysis, research and testing rather than just 2 minutes of coding style checking?

Also, think about who you are building up trust with. As a new code reviewer it’s probably more fruitful to provide helpful input on some meaty patches from some of the lead developers on the project. Then again, patch triage can be hugely helpful too - catch obvious problems in patches before the core reviewers ever get to the patch. Don’t forget to mentor new contributors as a code reviewer, though. Code review is the face of the project to these contributors and its your opportunity to show how you can lead by example.

Now, you obviously want to <strong>contribute code</strong>. Find some gnarly bug to fix, perhaps some race condition only rarely seen during automated tests. With all the code reviewing you’ve been doing, you’ve acquired excellent taste in coding and your work will no doubt live up to those standards. Don’t forget to write a detailed, helpful commit message and include a unit test which would catch any regression of the issue. If this is a more substantial change, you must split your change into smaller chunks where each patch represents a logical step in your progression towards the final result.

If you’re making a substantial addition like a new feature or a re-architecture, you need to document your design in some detail in a blueprint. Make sure someone reading the spec can quickly understand the problem you’re trying to solve, why it’s important and the general idea behind your solution. Then make sure there’s enough background information included that a reviewers work is made easy. Include the use cases, any relevant history, related discussions or bugs, alternative approaches considered and rejected and any security, upgrade, performance or deployer impact. Describe how your work will be tested and what documentation changes will be required.

While we’re on the subject of blueprints, don’t forget that these too need reviewers. Most projects now review the specs associated with blueprints using gerrit and so this is a way for you to demonstrate your design skills and catch things which no-one else has yet considered.

Back to code, though. Yes, it’s important to contribute to the various integrated service projects like Nova, Neutron, Swift and whatnot. However, there are a bunch of other areas where code contributions are always needed. For a start, the client projects are always forgotten. Then there’s the cross-project technical debt that the Oslo program is hard at work cleaning up. We’re also gradually porting all of OpenStack to Python 3, and this is going to be a multi year effort requiring the help of many.

We also place a huge emphasis on automated testing in OpenStack, and the awesome CI system we have doesn’t come from nowhere. You should always be ready to jump in a contribute to the infrastructure itself, tools like devstack-gate, zuul, nodepool or elastic-recheck. And, last but not least, our functional test suite, Tempest, is always desperately in need of more contributions to increase our test coverage.

<strong>Security</strong> is critical in a public-facing service like OpenStack, and there are several ways you should contribute in this area. Firstly, there is a small vulnerability management team which collaborates with each project’s -coresec team to handle privately reported security bugs, ensuring a fix is prepared for each supported branch before a coordinated, responsible disclosure of the issue first to vendors and then the wider world. Important work is this. There’s also a security group which is trying to bring together the efforts of interested parties to prepare official notices on security issues that aren’t actual vulnerabilities, develop a threat analysis process for OpenStack and maintain the OpenStack Security Guide. They need your help! Most importantly, though, you need to be security conscious as you write and review code. There’s a good chance you’ll find and report an existing vulnerability during the course of your work if you keep your eyes open!

And then there’s <strong>docs</strong>, always the poor forgotten child of any open source project. Yet OpenStack has some relatively awesome docs and a great team developing them. They can never hope to cope with the workload themselves, though, so they need you to pitch in and help perfect those docs in your area of expertise.

I mentioned <strong>bugs</strong>. We must not forget the bugs! Bugs are one way users can provide valuable contributions to the project, and we must ensure these contributions are valued so that users will continue to file bugs. With over 700 configuration options in Nova alone, the project can’t possibly test all possible combinations by itself so we rely on our users to test their own use cases and report any issues as bugs. You should help out here by setting aside some time every day to triage new bugs, making sure enough information has been provided and the bug has been appropriately tagged, categorized and prioritized.

Along those same lines, <strong>users</strong> often struggle with issues with aren’t obviously or necessarily bugs. You should also pay attention to forums like ask.openstack.org or the openstack-operators mailing list. Any outreach you can do to help users be successful with OpenStack will pay massive dividends in the long run, even just in terms of your understanding which issues are most important to real users. This outreach should extend to your attending OpenStack meetups, giving presentations on your work and listening to what users have to say.

Speaking of mailing lists, we have a hugely active <strong>openstack-dev mailing list</strong>, with over 2500 emails in April alone. This is the center of all activity happening in OpenStack at any time. You really must track what’s happening there and engage where you can help move things forward positively. It’s a struggle to keep up, but it really isn’t an option.

However, one of the side effects of openstack-dev being overloaded is that many important conversations now happen <strong>IRC</strong>. You can’t expect to be around for all of those, so make sure to remain connected and log all channels so you can catch up later.

Because conversations can be spread around multiple places, it can be helpful to link all of these conversations with little breadcrumbs. A mailing list thread might reference a gerrit review, which might reference a log of an IRC conversation, which might reference a blog post, which might reference a bug, which might reference a previous commit message which referenced a previous mailing list thread.

Don’t be fooled into thinking IRC is all about the serious stuff, though. It’s also a place where you can get to know your fellow contributors on a personal level and build up yet more of that all important trust. You will make friends working on OpenStack and some of those <strong>friendships</strong> will last longer than your involvement in OpenStack itself. That’s a hugely positive sign in any community. Beware of forming cliques, however. We need this community to be open to the most diverse set of contributors, and not all of those will buy into US-centric young white male geek humour, for example.

Speaking of cliques, it’s popular to accuse OpenStack developers on being so self-absorbed that the needs of real operators and users are ignored. That OpenStack developers aren’t held responsible for the real world consequences of the decisions they make. “You write code differently when you carry a pager”. Lorin Hochstein proposed an “Adopt a Dev” program where operators could invite individual developers to shadow them for a few days and share their experience in the terms of a summary, bug reports and blueprints. Basically, you should take any opportunity you can to get your hands dirty and help <strong>operate a production OpenStack service</strong>.

Related to the needs of operators are the deployment, configuration and <strong>operational tools</strong> out there which desperately need contributions with people more familiar with the dirty details of how the software works. Many developers use devstack to deploy their development clouds, but there’s huge benefit in occasionally deploying something more production-like and contributing to whatever tool you used. TripleO is a great deployment effort to contribute to because it’s attempting to create a space where everyone interested in deployment can collaborate, but also because it closely tracks the development branch of OpenStack.

Once you have succeeded at making an impact as an individual contributor, you should look to extend your <strong>leadership</strong> efforts beyond simply leading by example. Naturally, you’ll tend towards volunteering for the responsibility of the PTL position on whichever program you contribute most to. To demonstrate your willingness and trustworthiness for the position, perhaps you’ll suggest the PTL delegate some of their responsibilities to you.

Your leadership interests should extend beyond a single project too. In some ways, the kind of cross-project issues considered by the <strong>Technical Committee</strong> are as important as the per-project responsibilities of PTLs. Do you have strong opinions on how, why and when should add new programs or Integrated projects. If not, why not?

The governance of OpenStack and the shared responsibility for the future direction of OpenStack extends beyond the TC and PTL’s governance of the project itself, to the role of the <strong>Foundation Board of Directors</strong> in protecting, empowering and promoting the project as well as ensuring there’s a healthy commercial and non-commercial ecosystem around the project. Do you care how the TC and board divide their responsibilities? Or how much explicit corporate influence is appropriate in the technical decision making of the project? Or how the board makes legal decisions which directly impact the project? Or how individual members elect their representatives on the board? You should.

Wait, wait, I’m forgetting a bunch of stuff. You should care deeply about bringing contributors on board and participate in the awesome OPW and GSoC programs. It’s important to keep track of how the project is perceived, so you should read any articles published about the project and follow even our worst detractors on twitter. Watch carefully how our major competitors like AWS and GCE are evolving. Make sure to keep on relevant new developments like NFV or Docker. Keep an eye on new projects on Stackforge to track how they develop.

Huh, wait. You’re probably <strong>employed</strong> to work full time on the project, right? Well, you really need to learn how to wear upstream and downstream “hats”. You need to understand how you can help your employer be successful with their objectives around the project. You need to be able to reconcile any apparent conflicts between your employers’ needs and the best interests of the project. This is not a zero sum game. Meet with your employer’s customers and partners, help deliver what OpenStack product or service your employer is providing, mentor colleagues on how to successfully engage with the project and be the bridge over the upstream and downstream gap.

Above all, through all of this, be nice to everyone you encounter and wear a smile.


<strong>BZZZT … BURNOUT ALERT</strong>

I’m obviously being facetious, right? There’s no way anyone can possibly live up to those expectations and live to tell the tale?

It’s pretty obvious when you put it all together like this that these are unreasonable expectations. The hero of this tale does not exist. Many of us have tried to be this person, but it’s just not possible. Read into this, if you like, a very personal tale of burnout caused by unreasonable self-imposed expectations.

But really, what I want to get across today is that you don’t need to be this hero in order to contribute. Far from being too many active monthly contributors, five hundred is just the tip of the iceberg. Why shouldn’t every attendee of every OpenStack meetup be able to contribute in some small way?

When mentoring new Red Hat engineers, my basic advice is always “find your niche”. Find something that takes your interest and that you can see an obvious path towards making a significant impact, and go deep! Ignore pretty much everything else and do your thing. Maybe after a while you’ll have got the ball rolling of its own accord and that there are other areas you can now make an equally big impact on. Or perhaps you’ll stick with this niche and continue to make an impact doing it over the longer term.

One of my favorite examples of a less likely niche is bug triage. Back in the summer of 2001 when I started seriously contributing the GNOME project and became a maintainer of its CORBA ORB, ORBit, another new contributor to the project called <a href="https://mail.gnome.org/archives/gnome-bugsquad/2001-June/msg00004.html">Luis Villa posted this email</a>:

<blockquote>
Hey, everybody. By way of introduction: I'm the new bugmaster at Ximian. As some of you may have noticed, I'm slowly moving towards cleaning out evo and RC bugs from bugzilla.gnome and into bugzilla.ximian.
</blockquote>

Luis went on to breath new life into GNOME’s “bugsquad”, helped put in place a highly effective bug triage process and taught the GNOME community how to truly value and celebrate the contributions of both bug reporters and bug triagers. If you want to make fame and fortune in the open source world, how many people would pick bug triage as the place to start? Well, Luis did and made a huge impact, before moving on to engineering management and then giving it all up to go to law school. He is now Assistant General Counsel for the Wikimedia Foundation.

There’s a real “find your niche” lesson in that story, but also a lesson that we as a community need to learn to truly value and celebrate all of the myriad of different ways that contributors can help the project. Rather than judge others based on how they’re not contributing, rather than feel exasperated when so few others share your passion for a particular niche no matter how important it seems to you personally, we as a community need to acquire a greater level of empathy for our fellow contributors.

We also need to experiment with ways of running the project so that different roles and niches are appropriately recognized. Does the focus we put on PTLs detract from the valuable project management contributions others make? Are official programs the only way of recognizing the importance of particular areas? If programs are the only way, do we need to be more open to creating programs wherever a group of people have coalesced around some particular effort? Do we need to explicitly raise the profiles of those contributors doing hard behind-the-scenes work in areas that we don’t typically recognize? Are we building a culture that places too much emphasis on recognition and instead roll back some of the ways we recognize people now?

Lot’s of questions, few answers. But hopefully this can get the conversation started.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>349</wp:post_id>
		<wp:post_date><![CDATA[2014-06-06 14:49:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-06-06 14:49:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[an-ideal-openstack-developer]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>497</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Jones]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[chris.jones@ccur.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.ccur.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[12.237.137.162]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-06-07 14:07:03]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-06-07 14:07:03]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wow. Great article. I'm a little depressed and exhausted now just thinking about everything but other than that - good :). Finding your niche seems to be the hardest thing in the Enterprise today. For the really good developers, product managers are all scrambling for that developer to be on their project which is very flattering but exhausting. Storage is a great example, we are doing deep development tests with Ceph and Object Stores right now. I know as soon as our team as our product fully integrated Product will ask for something different and so no "real" deep dive will be possible. It's hard to balance but a fun journey.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1402150023.923430919647216796875;s:7:"message";s:99:"Akismet was unable to check this comment (response: invalid), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1402302671.712830066680908203125;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>496</wp:comment_id>
			<wp:comment_author><![CDATA[OpenStack Community Weekly Newsletter (May 30 &#8211; June 6) &raquo; The OpenStack Blog]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.openstack.org/blog/2014/06/openstack-community-weekly-newsletter-may-30-june-6/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[67.192.46.11]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-06-06 23:01:18]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-06-06 23:01:18]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] An Ideal OpenStack Developer [&#8230;]

[WORDPRESS HASHCASH] The comment's server IP (67.192.46.11) doesn't match the comment's URL host IP (174.143.194.225) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1402124879.711389064788818359375;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1402095678.8670260906219482421875;s:7:"message";s:99:"Akismet was unable to check this comment (response: invalid), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_error]]></wp:meta_key>
				<wp:meta_value><![CDATA[1402095678]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>505</wp:comment_id>
			<wp:comment_author><![CDATA[Rohit Vaidya]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[rohitvvv@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[49.205.74.72]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-09-03 19:23:45]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-09-03 19:23:45]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great article. I always felt I could not connect academics to the work I do. Academics was more Knuth centric and daily work more abstract greater disconnect from the bare metal(Especially if you are doing silly web apps) I see a common thread weaving through this big chaos of technologies, academics and some hard core programming. Looking forward to making some useful Open stack contributions. :) Cheers]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_error]]></wp:meta_key>
				<wp:meta_value><![CDATA[1409772225]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1409772225.678906917572021484375;s:7:"message";s:99:"Akismet was unable to check this comment (response: invalid), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1412257037.8824470043182373046875;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Network Function Virtualization - The Opportunity for OpenStack and Open Source</title>
		<link>https://blogs.gnome.org/markmc/2014/10/02/network-function-virtualization-the-opportunity-for-openstack-and-open-source/</link>
		<pubDate>Thu, 02 Oct 2014 20:28:51 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">http://blogs.gnome.org/markmc/?p=353</guid>
		<description></description>
		<content:encoded><![CDATA[This week's <a href="https://www.openstack.org/blog/2014/09/telcos-mobilizing-to-drive-nfv-adoption/">launch of OPNFV</a> is a good opportunity to think about a simmering debate in the OpenStack developer community for a while now - what exactly does NFV have to do with OpenStack, and is it a good thing?

My own “journey” on this started exactly one year ago today when I visited a local Red Hat partner to talk about OpenStack and, towards the end of our Q&amp;A, I was asked something like “will OpenStack support NFV?”. I’d never heard of the term and, when the general idea was explained, I gave a less than coherent version of “OpenStack implements an elastic cloud for cattle; this sounds like pets. Sorry”. After the meeting, the person who asked the question forwarded me an NFV whitepaper from October 2012 and, glancing through it, most of it went right over my head and I didn’t see what it had to do with OpenStack.

Since then, Chris Wright has been patiently talking me through this space and gently trying to get me over my initial skepticism. Chris would say that our conversations has helped him refine how he explains the concepts to open-source developers, and I think he really nailed it in his keynote at the Linux Foundation’s Collaboration summit in April.

[embed]https://www.youtube.com/watch?v=SAimeBttapA[/embed]

In his keynote, Chris talks about the benefits of collaboration in open-source and walks through all of the various aspects of how the networking industry is changing, and how open-source is playing a key part in all of those changes. He covers, and simplifies:

	<ul><li>
Taking the current architecture of proprietary, expensive, complex, difficult to manage forwarding devices (like routers) and how SDN (Software Defined Networking) aims to “put an API on it”. This is what’s meant by “disaggregation of the control plane and data plane” - that forwarding devices become devices which are controlled by open standards, and allows your distributed system of forwarding devices to be controlled and automated.</li>
	<li>NFV (Network Function Virtualization) as a shift in the telco data-center world which embraces many of the lessons that the elastic infrastructure cloud has taught the IT industry. More on that below.</li>
	<li>Changes in the “data plane” world, where we’re starting to see the network device market mimic the x86 server market such that these devices can be “white box” servers running open-source software. Again that disaggregation word, but this time it’s about “disaggregation of hardware and software” and how the software part can be open-source implementations of optimized packet-forwarding capabilities which we’re used to seeing implemented in expensive and proprietary hardware appliances.</li>
</ul>

But let’s focus here on NFV.

I real don’t know much about the telco industry, but what Chris has me imagining now is data-centers full of proprietary, black-box hardware appliances which are collectively know as “network functions” or “middle boxes”. These boxes are used for everything from firewalls, NAT, deep packet inspect (DPI), the mobile packet core, etc. These are software applications trapped in hardware. They’re expensive, proprietary, slow to roll-out, don’t always scale well and are hindering telco service providers as they attempt to react to a rapidly changing market.

NFV is about completely re-thinking the architecture of these data-centers. This is the telco industry re-imaging their data centers as elastic infrastructure clouds running their “network functions” as virtualized, horizontally scalable applications on these clouds. The exciting - simply stunning - aspect of all of this for me as an open-source advocate, is that the telco industry is settling on a consensus around an architecture involving open-source generally and OpenStack specifically.

Say that again? These huge telcos want to rebuild their entire data centers with OpenStack and open-source? Yes.

If, like me, you want to see open-source change the IT world into one where we all embrace the opportunity to collaborate in the open, while still successfully building building businesses that serve our users’ needs … then this sounds pretty cool, right?

If, like me, you want to see OpenStack as the standard platform from which many of the worlds’ elastic infrastructure clouds are built ... then this sounds like a no-brainer, right?

Well, the thing we need to bear in mind is that these applications (i.e. network functions) are pretty darn specialized. They need to have a high level of performance, determinism and reliability. But that does not necessarily mean they are “pets” and missing one of the key points of an elastic cloud.

Let’s take the reliability requirement - when these network functions are implemented as horizontal scale-out applications, they will look to achieve high levels of reliability in the same way that typical cloud applications do - with each tier of the application spread across multiple failure domains, and by spreading application load horizontally. Telcos will just want to take this further, with faster and more deterministic response to failures, while also avoiding any compromise to application's performance. For example, you’ll see a lot of interest in how instances are scheduled to take to into account affinity and anti-affinity within an instance group.

The performance requirement is largely about high-performance packet processing. How to get a packet off the network, into a VM, processed quickly and back out again on the network. One of the techniques being pursued is to give VMs direct physical access to the network via SR-IOV which, in turn, means the compute scheduler needs to know which physical networks the NICs on each compute node has access to.

The deterministic requirement is about predictable performance. How to avoid the vagaries of the hypervisor and host OS scheduler affecting these performance-sensitive applications? You’ll see work around allowing operators to define flavors, and application owners to define image properties, which between them control things like vCPU topology, vCPU to pCPU pinning, the placement of applications in relation to NUMA nodes and making huge pages available to the applications. Compare to Amazon’s memory-optimized and compute-optimized flavors, and imagine this being taken a step further.

Oh, and another requirement you’ll see come up in this space a lot is … IPv6 everywhere! I’m certainly down with that.

Want to learn more about the work involved? See <a href="https://wiki.openstack.org/wiki/Teams/NFV">the OpenStack NFV team's amazing wiki page</a> which goes into excruciating detail.

The more you dig into the specifics of what we’re talking about here, start breaking this down into tangible concepts without all the acronyms and buzzwords, you start to realize that this really is the telco world embracing everything that OpenStack is all about, but just pushing the envelope a bit with some requirements which are a pretty natural evolution for us, but we might not otherwise have expected to come about for some time yet.

I guess the summary here is that if you're skeptical, that's cool ... you're not alone. But please do take the time to see through the complexity and confusion to the simple fact we're poised to be a key part in turning the telco data-center, and how this is just another exciting part of <a href="https://wiki.openstack.org">our goal to "to produce the ubiquitous Open Source Cloud Computing platform"</a>.

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>353</wp:post_id>
		<wp:post_date><![CDATA[2014-10-02 20:28:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-10-02 20:28:51]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[network-function-virtualization-the-opportunity-for-openstack-and-open-source]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_f78496fc93bbfcd59a43eedba8f9c97d]]></wp:meta_key>
			<wp:meta_value><![CDATA[<iframe width="450" height="253" src="https://www.youtube.com/embed/SAimeBttapA?feature=oembed" frameborder="0" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_time_f78496fc93bbfcd59a43eedba8f9c97d]]></wp:meta_key>
			<wp:meta_value><![CDATA[1412279122]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_2b6619a875bc34c4af8fe059f9daff79]]></wp:meta_key>
			<wp:meta_value><![CDATA[<iframe width="660" height="371" src="https://www.youtube.com/embed/SAimeBttapA?feature=oembed" frameborder="0" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_time_2b6619a875bc34c4af8fe059f9daff79]]></wp:meta_key>
			<wp:meta_value><![CDATA[1427390672]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_a1813b8e5c0f4fdb2649c6500386218f]]></wp:meta_key>
			<wp:meta_value><![CDATA[<iframe width="500" height="281" src="https://www.youtube.com/embed/SAimeBttapA?feature=oembed" frameborder="0" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_time_a1813b8e5c0f4fdb2649c6500386218f]]></wp:meta_key>
			<wp:meta_value><![CDATA[1430932589]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>507</wp:comment_id>
			<wp:comment_author><![CDATA[OpenStack Community Weekly Newsletter (Sep 26 &#8211; Oct 3) &raquo; The OpenStack Blog]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.openstack.org/blog/2014/10/openstack-community-weekly-newsletter-sep-26-oct-3/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[23.253.242.157]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-10-03 22:53:56]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-10-03 22:53:56]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] Network Function Virtualization – The Opportunity for OpenStack and Open Source [&#8230;]

[WORDPRESS HASHCASH] The comment's server IP (23.253.242.157) doesn't match the comment's URL host IP (162.159.247.77) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_error]]></wp:meta_key>
				<wp:meta_value><![CDATA[1412376836]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1412376836.0799720287322998046875;s:7:"message";s:99:"Akismet was unable to check this comment (response: invalid), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1412715157.6990239620208740234375;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>510</wp:comment_id>
			<wp:comment_author><![CDATA[Toby Ford]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[tf4242@att.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[144.160.5.25]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-10-08 18:55:23]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-10-08 18:55:23]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent post Mark; you captured the key reasons for NFV very well.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_error]]></wp:meta_key>
				<wp:meta_value><![CDATA[1412794523]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1412794523.1118290424346923828125;s:7:"message";s:99:"Akismet was unable to check this comment (response: invalid), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1416878984.452867031097412109375;s:7:"message";s:45:"markmc changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>RDO and Upstream Packaging</title>
		<link>https://blogs.gnome.org/markmc/2015/06/12/rdo-and-upstream-packaging/</link>
		<pubDate>Fri, 12 Jun 2015 12:27:17 +0000</pubDate>
		<dc:creator><![CDATA[markmc]]></dc:creator>
		<guid isPermaLink="false">https://blogs.gnome.org/markmc/?p=371</guid>
		<description></description>
		<content:encoded><![CDATA[Derek mentioned "upstream packaging" on <a href="http://meetbot.fedoraproject.org/rdo/2015-06-10/rdo.2015-06-10-15.00.html">this week's packaging meeting</a> and asked RDO packagers to participate in the upstream discussions. I thought some more context might be useful.

First, a little history ...

When I first started contributing to OpenStack, it <a href="https://review.openstack.org/708">briefly</a> looked like I would need to make some Ubuntu packaging updates in order to get a Nova patch landed. At the Essex design summit a few weeks later, I raged at Monty Taylor how ridiculous it would be to require a Fedora packager to fix Ubuntu packaging in order to contribute a patch. I was making the point that upstream projects should leave packaging to the downstream packaging maintainers. Upstream CI quickly moved away from using packages after that summit, and I've heard Monty cite that conversation several times as why upstream should not get into packaging.

Meanwhile, Dan Prince was running the Smokestack CI system at the time, which effectively was being treated as OpenStack's first "third party CI". Interestingly, Smokestack was using packages to do its deployment, and for a long time Dan was successfully keeping packaging up to date such that Smokestack could build packages for patches proposed in gerrit.

And then there's been the persistent interest in "chasing trunk". Operators who want to practice Continuous Deployment of OpenStack from trunk. How does packaging fit in that world? Well, the DevOps mantra of doing development and CI in environments that model your production environment applies. You should be using packaging as early on in your pipeline as possible.

My conclusion from all of that is:
<ol>
	<li>A key part in building a Continuous Delivery pipeline for OpenStack is to practice continuous package maintenance. You can glibly say this is "applying a DevOps mindset to package maintenance".</li>
	<li>How awesome would it be if OpenStack had "upstream infrastructure for downstream package maintainers". In other words, if downstream package maintainer teams could do their work close to the upstream project, using upstream infrastructure, without disrupting upstream development.</li>
</ol>
I think the work that Derek, Alan, Dan, John, and everyone else has been doing on Delorean is really helping RDO maintainers figure out how to practice (1). I first started maintaining Fedora packages for Fedora Core 2, so IMO what RDO is doing here is really dramatic. It's a very different way of thinking about package maintenance.

As for (2), this where we get back on topic ...

At a <a href="https://etherpad.openstack.org/p/YVR-ops-packaging">Design Summit session in Vancouver</a>, the idea of maintaining packaging using upstream infra really took hold. Thomas Goirand (aka zigo) <a href="https://review.openstack.org/185187">proposed the creation of a "distribution packaging" team</a> and this triggered a <a href="http://lists.openstack.org/pipermail/openstack-dev/2015-June/thread.html#65545">healthy debate on openstack-dev</a>. Derek has since pushed <a href="https://review.openstack.org/189497">a WIP patch showing how RDO packaging could be imported</a>.

There's a clear desire on the part of the Debian and Ubuntu package maintainers to collaborate on shared packaging, and it sounds like this goal of further collaboration is one of the primary motivators for moving their packaging upstream. This makes a lot of sense, given the shared heritage of Debian and Ubuntu.

The RDO team is enthusiastic about adopting this sort of upstream workflow, but the Debian/Ubuntu collaboration has added an entirely new aspect to the conversation. Despite the fact that RDO and SUSE platforms have little in the way of shared heritage, shouldn't the RDO and SUSE packaging teams also collaborate, since they both use the RPM format? And perhaps deb and rpm maintainers should also collaborate to ensure consistency?

To my mind, the goal here should be to encourage downstream packaging teams to work closer to the upstream project, and have downstream packaging teams collaborate more with upstream developers. This is about upstream infrastructure for downstream teams, rather than a way to force collaboration between downstream teams, simply because forced collaboration rarely works.

For me, what's hugely exciting about all of this is the future prospect of the package maintainers for different platforms adopting a "continuous packaging" workflow and working closely with project developers, to the extent that packaging changes could even be coordinated with code changes. With its amazing infrastructure, OpenStack has broken new ground for how open-source projects can operate. This could be yet another breakthrough, this time demonstrating how a project's infrastructure can be used to enable an entirely new level of collaboration between package maintainers and project developers.

&nbsp;

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>371</wp:post_id>
		<wp:post_date><![CDATA[2015-06-12 12:27:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-06-12 12:27:17]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[rdo-and-upstream-packaging]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="fedora"><![CDATA[fedora]]></category>
		<category domain="category" nicename="openstack"><![CDATA[openstack]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>514</wp:comment_id>
			<wp:comment_author><![CDATA[dani ramdani]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[feddydr@telkomuniversity.ac.id]]></wp:comment_author_email>
			<wp:comment_author_url>http://telkomuniversity.ac.id</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.233.100.3]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-07-10 04:11:31]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-07-10 04:11:31]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[wwiihhh this is good artikels thanks you about this is :) i like the post :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[trash]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_error]]></wp:meta_key>
				<wp:meta_value><![CDATA[1436501491]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1436501491.577353954315185546875;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1477857645.49738597869873046875;s:5:"event";s:12:"status-trash";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_wp_trash_meta_status]]></wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_wp_trash_meta_time]]></wp:meta_key>
				<wp:meta_value><![CDATA[1477857645]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>513</wp:comment_id>
			<wp:comment_author><![CDATA[Peppin bright]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[peppinbright30@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.besanttechnologies.com/training-courses/data-warehousing-training/hadoop-training-institute-in-chennai</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[182.72.222.58]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-06-17 11:08:15]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-06-17 11:08:15]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great article.Its really usefull to me.Thanks for sharing...]]></wp:comment_content>
			<wp:comment_approved><![CDATA[trash]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_error]]></wp:meta_key>
				<wp:meta_value><![CDATA[1434539295]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1434539295.4813060760498046875;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1477857646.7131659984588623046875;s:5:"event";s:12:"status-trash";s:4:"user";s:6:"markmc";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_wp_trash_meta_status]]></wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_wp_trash_meta_time]]></wp:meta_key>
				<wp:meta_value><![CDATA[1477857646]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
</channel>
</rss>
